
VaraajamonitoriX2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ea  00800100  0000228e  00002322  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000228e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000031  008001ea  008001ea  0000240c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000240c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002468  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000003f8  00000000  00000000  000024a8  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004a8c  00000000  00000000  000028a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001474  00000000  00000000  0000732c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000270f  00000000  00000000  000087a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000090c  00000000  00000000  0000aeb0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000013b0  00000000  00000000  0000b7bc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000317c  00000000  00000000  0000cb6c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000388  00000000  00000000  0000fce8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b7 00 	jmp	0x16e	; 0x16e <__ctors_end>
       4:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
       8:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
       c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      10:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      14:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      18:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      1c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      20:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      24:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      28:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      2c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      30:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      34:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      38:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      3c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      40:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      44:	0c 94 83 09 	jmp	0x1306	; 0x1306 <__vector_17>
      48:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      4c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      50:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      54:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      58:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      5c:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      60:	0c 94 56 09 	jmp	0x12ac	; 0x12ac <__vector_24>
      64:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>
      68:	0c 94 d4 00 	jmp	0x1a8	; 0x1a8 <__bad_interrupt>

0000006c <__trampolines_end>:
      6c:	6e 61       	ori	r22, 0x1E	; 30
      6e:	6e 00       	.word	0x006e	; ????

00000070 <__c.2332>:
      70:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      80:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      90:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      a0:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      b0:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      c0:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      d0:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      e0:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      f0:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     100:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     110:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     120:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     130:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     140:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     150:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     160:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016e <__ctors_end>:
     16e:	11 24       	eor	r1, r1
     170:	1f be       	out	0x3f, r1	; 63
     172:	cf ef       	ldi	r28, 0xFF	; 255
     174:	d4 e0       	ldi	r29, 0x04	; 4
     176:	de bf       	out	0x3e, r29	; 62
     178:	cd bf       	out	0x3d, r28	; 61

0000017a <__do_copy_data>:
     17a:	11 e0       	ldi	r17, 0x01	; 1
     17c:	a0 e0       	ldi	r26, 0x00	; 0
     17e:	b1 e0       	ldi	r27, 0x01	; 1
     180:	ee e8       	ldi	r30, 0x8E	; 142
     182:	f2 e2       	ldi	r31, 0x22	; 34
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x10>
     186:	05 90       	lpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	aa 3e       	cpi	r26, 0xEA	; 234
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0xc>

00000190 <__do_clear_bss>:
     190:	22 e0       	ldi	r18, 0x02	; 2
     192:	aa ee       	ldi	r26, 0xEA	; 234
     194:	b1 e0       	ldi	r27, 0x01	; 1
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	ab 31       	cpi	r26, 0x1B	; 27
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	0e 94 bd 03 	call	0x77a	; 0x77a <main>
     1a4:	0c 94 45 11 	jmp	0x228a	; 0x228a <_exit>

000001a8 <__bad_interrupt>:
     1a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001ac <atmel_start_init>:
/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
	system_init();
     1ac:	0e 94 36 07 	call	0xe6c	; 0xe6c <system_init>
     1b0:	08 95       	ret

000001b2 <init_buttons>:
	}

	// Set the RGB backlight color based on calculated values
	RGB_SetColor(red, green, blue);
	
}
     1b2:	87 b1       	in	r24, 0x07	; 7
     1b4:	80 7c       	andi	r24, 0xC0	; 192
     1b6:	87 b9       	out	0x07, r24	; 7
     1b8:	88 b1       	in	r24, 0x08	; 8
     1ba:	8f 63       	ori	r24, 0x3F	; 63
     1bc:	88 b9       	out	0x08, r24	; 8
     1be:	08 95       	ret

000001c0 <read_buttons>:
     1c0:	80 e0       	ldi	r24, 0x00	; 0
     1c2:	90 e0       	ldi	r25, 0x00	; 0
     1c4:	58 c0       	rjmp	.+176    	; 0x276 <__EEPROM_REGION_LENGTH__+0x76>
     1c6:	46 b1       	in	r20, 0x06	; 6
     1c8:	fc 01       	movw	r30, r24
     1ca:	ee 0f       	add	r30, r30
     1cc:	ff 1f       	adc	r31, r31
     1ce:	ee 0f       	add	r30, r30
     1d0:	ff 1f       	adc	r31, r31
     1d2:	e0 50       	subi	r30, 0x00	; 0
     1d4:	ff 4f       	sbci	r31, 0xFF	; 255
     1d6:	21 e0       	ldi	r18, 0x01	; 1
     1d8:	30 e0       	ldi	r19, 0x00	; 0
     1da:	00 80       	ld	r0, Z
     1dc:	02 c0       	rjmp	.+4      	; 0x1e2 <read_buttons+0x22>
     1de:	22 0f       	add	r18, r18
     1e0:	33 1f       	adc	r19, r19
     1e2:	0a 94       	dec	r0
     1e4:	e2 f7       	brpl	.-8      	; 0x1de <read_buttons+0x1e>
     1e6:	24 23       	and	r18, r20
     1e8:	f1 f4       	brne	.+60     	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
     1ea:	fc 01       	movw	r30, r24
     1ec:	ee 0f       	add	r30, r30
     1ee:	ff 1f       	adc	r31, r31
     1f0:	ee 0f       	add	r30, r30
     1f2:	ff 1f       	adc	r31, r31
     1f4:	e0 50       	subi	r30, 0x00	; 0
     1f6:	ff 4f       	sbci	r31, 0xFF	; 255
     1f8:	21 81       	ldd	r18, Z+1	; 0x01
     1fa:	21 11       	cpse	r18, r1
     1fc:	0a c0       	rjmp	.+20     	; 0x212 <__EEPROM_REGION_LENGTH__+0x12>
     1fe:	fc 01       	movw	r30, r24
     200:	ee 0f       	add	r30, r30
     202:	ff 1f       	adc	r31, r31
     204:	ee 0f       	add	r30, r30
     206:	ff 1f       	adc	r31, r31
     208:	e0 50       	subi	r30, 0x00	; 0
     20a:	ff 4f       	sbci	r31, 0xFF	; 255
     20c:	21 e0       	ldi	r18, 0x01	; 1
     20e:	21 83       	std	Z+1, r18	; 0x01
     210:	31 c0       	rjmp	.+98     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
     212:	fc 01       	movw	r30, r24
     214:	ee 0f       	add	r30, r30
     216:	ff 1f       	adc	r31, r31
     218:	ee 0f       	add	r30, r30
     21a:	ff 1f       	adc	r31, r31
     21c:	e0 50       	subi	r30, 0x00	; 0
     21e:	ff 4f       	sbci	r31, 0xFF	; 255
     220:	22 e0       	ldi	r18, 0x02	; 2
     222:	21 83       	std	Z+1, r18	; 0x01
     224:	27 c0       	rjmp	.+78     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
     226:	fc 01       	movw	r30, r24
     228:	ee 0f       	add	r30, r30
     22a:	ff 1f       	adc	r31, r31
     22c:	ee 0f       	add	r30, r30
     22e:	ff 1f       	adc	r31, r31
     230:	e0 50       	subi	r30, 0x00	; 0
     232:	ff 4f       	sbci	r31, 0xFF	; 255
     234:	23 81       	ldd	r18, Z+3	; 0x03
     236:	22 23       	and	r18, r18
     238:	51 f0       	breq	.+20     	; 0x24e <__EEPROM_REGION_LENGTH__+0x4e>
     23a:	fc 01       	movw	r30, r24
     23c:	ee 0f       	add	r30, r30
     23e:	ff 1f       	adc	r31, r31
     240:	ee 0f       	add	r30, r30
     242:	ff 1f       	adc	r31, r31
     244:	e0 50       	subi	r30, 0x00	; 0
     246:	ff 4f       	sbci	r31, 0xFF	; 255
     248:	21 50       	subi	r18, 0x01	; 1
     24a:	23 83       	std	Z+3, r18	; 0x03
     24c:	13 c0       	rjmp	.+38     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
     24e:	fc 01       	movw	r30, r24
     250:	ee 0f       	add	r30, r30
     252:	ff 1f       	adc	r31, r31
     254:	ee 0f       	add	r30, r30
     256:	ff 1f       	adc	r31, r31
     258:	e0 50       	subi	r30, 0x00	; 0
     25a:	ff 4f       	sbci	r31, 0xFF	; 255
     25c:	21 81       	ldd	r18, Z+1	; 0x01
     25e:	21 50       	subi	r18, 0x01	; 1
     260:	22 30       	cpi	r18, 0x02	; 2
     262:	40 f4       	brcc	.+16     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
     264:	fc 01       	movw	r30, r24
     266:	ee 0f       	add	r30, r30
     268:	ff 1f       	adc	r31, r31
     26a:	ee 0f       	add	r30, r30
     26c:	ff 1f       	adc	r31, r31
     26e:	e0 50       	subi	r30, 0x00	; 0
     270:	ff 4f       	sbci	r31, 0xFF	; 255
     272:	11 82       	std	Z+1, r1	; 0x01
     274:	01 96       	adiw	r24, 0x01	; 1
     276:	86 30       	cpi	r24, 0x06	; 6
     278:	91 05       	cpc	r25, r1
     27a:	0c f4       	brge	.+2      	; 0x27e <__EEPROM_REGION_LENGTH__+0x7e>
     27c:	a4 cf       	rjmp	.-184    	; 0x1c6 <read_buttons+0x6>
     27e:	08 95       	ret

00000280 <MenuButtons>:
     280:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <menuTimeCnt+0x1>
     284:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <menuTimeCnt>
     288:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__DATA_REGION_ORIGIN__+0x9>
     28c:	81 30       	cpi	r24, 0x01	; 1
     28e:	19 f4       	brne	.+6      	; 0x296 <MenuButtons+0x16>
     290:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
     294:	1a c0       	rjmp	.+52     	; 0x2ca <MenuButtons+0x4a>
     296:	82 30       	cpi	r24, 0x02	; 2
     298:	c1 f0       	breq	.+48     	; 0x2ca <MenuButtons+0x4a>
     29a:	81 11       	cpse	r24, r1
     29c:	16 c0       	rjmp	.+44     	; 0x2ca <MenuButtons+0x4a>
     29e:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
     2a2:	88 23       	and	r24, r24
     2a4:	91 f0       	breq	.+36     	; 0x2ca <MenuButtons+0x4a>
     2a6:	81 e0       	ldi	r24, 0x01	; 1
     2a8:	80 93 ee 01 	sts	0x01EE, r24	; 0x8001ee <display>
     2ac:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <menu>
     2b0:	85 30       	cpi	r24, 0x05	; 5
     2b2:	20 f4       	brcc	.+8      	; 0x2bc <MenuButtons+0x3c>
     2b4:	8f 5f       	subi	r24, 0xFF	; 255
     2b6:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <menu>
     2ba:	02 c0       	rjmp	.+4      	; 0x2c0 <MenuButtons+0x40>
     2bc:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <menu>
     2c0:	81 e0       	ldi	r24, 0x01	; 1
     2c2:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <refresh>
     2c6:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__DATA_REGION_ORIGIN__+0xa>
     2ca:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <__DATA_REGION_ORIGIN__+0xd>
     2ce:	81 30       	cpi	r24, 0x01	; 1
     2d0:	19 f4       	brne	.+6      	; 0x2d8 <MenuButtons+0x58>
     2d2:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <__DATA_REGION_ORIGIN__+0xe>
     2d6:	1b c0       	rjmp	.+54     	; 0x30e <MenuButtons+0x8e>
     2d8:	82 30       	cpi	r24, 0x02	; 2
     2da:	c9 f0       	breq	.+50     	; 0x30e <MenuButtons+0x8e>
     2dc:	81 11       	cpse	r24, r1
     2de:	17 c0       	rjmp	.+46     	; 0x30e <MenuButtons+0x8e>
     2e0:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <__DATA_REGION_ORIGIN__+0xe>
     2e4:	88 23       	and	r24, r24
     2e6:	99 f0       	breq	.+38     	; 0x30e <MenuButtons+0x8e>
     2e8:	81 e0       	ldi	r24, 0x01	; 1
     2ea:	80 93 ee 01 	sts	0x01EE, r24	; 0x8001ee <display>
     2ee:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <menu>
     2f2:	88 23       	and	r24, r24
     2f4:	21 f0       	breq	.+8      	; 0x2fe <MenuButtons+0x7e>
     2f6:	81 50       	subi	r24, 0x01	; 1
     2f8:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <menu>
     2fc:	03 c0       	rjmp	.+6      	; 0x304 <MenuButtons+0x84>
     2fe:	85 e0       	ldi	r24, 0x05	; 5
     300:	80 93 ed 01 	sts	0x01ED, r24	; 0x8001ed <menu>
     304:	81 e0       	ldi	r24, 0x01	; 1
     306:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <refresh>
     30a:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <__DATA_REGION_ORIGIN__+0xe>
     30e:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <__DATA_REGION_ORIGIN__+0x15>
     312:	81 30       	cpi	r24, 0x01	; 1
     314:	19 f4       	brne	.+6      	; 0x31c <MenuButtons+0x9c>
     316:	80 93 16 01 	sts	0x0116, r24	; 0x800116 <__DATA_REGION_ORIGIN__+0x16>
     31a:	08 95       	ret
     31c:	82 30       	cpi	r24, 0x02	; 2
     31e:	79 f0       	breq	.+30     	; 0x33e <MenuButtons+0xbe>
     320:	81 11       	cpse	r24, r1
     322:	0d c0       	rjmp	.+26     	; 0x33e <MenuButtons+0xbe>
     324:	80 91 16 01 	lds	r24, 0x0116	; 0x800116 <__DATA_REGION_ORIGIN__+0x16>
     328:	88 23       	and	r24, r24
     32a:	49 f0       	breq	.+18     	; 0x33e <MenuButtons+0xbe>
     32c:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <display>
     330:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <menu>
     334:	81 e0       	ldi	r24, 0x01	; 1
     336:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <refresh>
     33a:	10 92 16 01 	sts	0x0116, r1	; 0x800116 <__DATA_REGION_ORIGIN__+0x16>
     33e:	08 95       	ret

00000340 <MAX4820_Write>:
     340:	95 b1       	in	r25, 0x05	; 5
     342:	98 60       	ori	r25, 0x08	; 8
     344:	95 b9       	out	0x05, r25	; 5
     346:	9b b1       	in	r25, 0x0b	; 11
     348:	9d 7f       	andi	r25, 0xFD	; 253
     34a:	9b b9       	out	0x0b, r25	; 11
     34c:	22 e0       	ldi	r18, 0x02	; 2
     34e:	2a 95       	dec	r18
     350:	f1 f7       	brne	.-4      	; 0x34e <MAX4820_Write+0xe>
     352:	00 c0       	rjmp	.+0      	; 0x354 <MAX4820_Write+0x14>
     354:	90 e0       	ldi	r25, 0x00	; 0
     356:	20 c0       	rjmp	.+64     	; 0x398 <MAX4820_Write+0x58>
     358:	28 2f       	mov	r18, r24
     35a:	30 e0       	ldi	r19, 0x00	; 0
     35c:	09 2e       	mov	r0, r25
     35e:	02 c0       	rjmp	.+4      	; 0x364 <MAX4820_Write+0x24>
     360:	35 95       	asr	r19
     362:	27 95       	ror	r18
     364:	0a 94       	dec	r0
     366:	e2 f7       	brpl	.-8      	; 0x360 <MAX4820_Write+0x20>
     368:	20 ff       	sbrs	r18, 0
     36a:	04 c0       	rjmp	.+8      	; 0x374 <MAX4820_Write+0x34>
     36c:	25 b1       	in	r18, 0x05	; 5
     36e:	28 60       	ori	r18, 0x08	; 8
     370:	25 b9       	out	0x05, r18	; 5
     372:	03 c0       	rjmp	.+6      	; 0x37a <MAX4820_Write+0x3a>
     374:	25 b1       	in	r18, 0x05	; 5
     376:	27 7f       	andi	r18, 0xF7	; 247
     378:	25 b9       	out	0x05, r18	; 5
     37a:	25 b1       	in	r18, 0x05	; 5
     37c:	20 62       	ori	r18, 0x20	; 32
     37e:	25 b9       	out	0x05, r18	; 5
     380:	22 e0       	ldi	r18, 0x02	; 2
     382:	2a 95       	dec	r18
     384:	f1 f7       	brne	.-4      	; 0x382 <MAX4820_Write+0x42>
     386:	00 c0       	rjmp	.+0      	; 0x388 <MAX4820_Write+0x48>
     388:	25 b1       	in	r18, 0x05	; 5
     38a:	2f 7d       	andi	r18, 0xDF	; 223
     38c:	25 b9       	out	0x05, r18	; 5
     38e:	22 e0       	ldi	r18, 0x02	; 2
     390:	2a 95       	dec	r18
     392:	f1 f7       	brne	.-4      	; 0x390 <MAX4820_Write+0x50>
     394:	00 c0       	rjmp	.+0      	; 0x396 <MAX4820_Write+0x56>
     396:	9f 5f       	subi	r25, 0xFF	; 255
     398:	98 30       	cpi	r25, 0x08	; 8
     39a:	f0 f2       	brcs	.-68     	; 0x358 <MAX4820_Write+0x18>
     39c:	82 e0       	ldi	r24, 0x02	; 2
     39e:	8a 95       	dec	r24
     3a0:	f1 f7       	brne	.-4      	; 0x39e <MAX4820_Write+0x5e>
     3a2:	00 c0       	rjmp	.+0      	; 0x3a4 <MAX4820_Write+0x64>
     3a4:	8b b1       	in	r24, 0x0b	; 11
     3a6:	82 60       	ori	r24, 0x02	; 2
     3a8:	8b b9       	out	0x0b, r24	; 11
     3aa:	85 b1       	in	r24, 0x05	; 5
     3ac:	87 7f       	andi	r24, 0xF7	; 247
     3ae:	85 b9       	out	0x05, r24	; 5
     3b0:	08 95       	ret

000003b2 <RGB_Init>:
     3b2:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     3b6:	80 ec       	ldi	r24, 0xC0	; 192
     3b8:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     3bc:	8a e1       	ldi	r24, 0x1A	; 26
     3be:	8a 95       	dec	r24
     3c0:	f1 f7       	brne	.-4      	; 0x3be <RGB_Init+0xc>
     3c2:	00 c0       	rjmp	.+0      	; 0x3c4 <RGB_Init+0x12>
     3c4:	80 e0       	ldi	r24, 0x00	; 0
     3c6:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     3ca:	8a e1       	ldi	r24, 0x1A	; 26
     3cc:	8a 95       	dec	r24
     3ce:	f1 f7       	brne	.-4      	; 0x3cc <RGB_Init+0x1a>
     3d0:	00 c0       	rjmp	.+0      	; 0x3d2 <RGB_Init+0x20>
     3d2:	80 e0       	ldi	r24, 0x00	; 0
     3d4:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     3d8:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     3dc:	8a e1       	ldi	r24, 0x1A	; 26
     3de:	8a 95       	dec	r24
     3e0:	f1 f7       	brne	.-4      	; 0x3de <RGB_Init+0x2c>
     3e2:	00 c0       	rjmp	.+0      	; 0x3e4 <RGB_Init+0x32>
     3e4:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     3e8:	80 ec       	ldi	r24, 0xC0	; 192
     3ea:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     3ee:	8a e1       	ldi	r24, 0x1A	; 26
     3f0:	8a 95       	dec	r24
     3f2:	f1 f7       	brne	.-4      	; 0x3f0 <RGB_Init+0x3e>
     3f4:	00 c0       	rjmp	.+0      	; 0x3f6 <RGB_Init+0x44>
     3f6:	81 e0       	ldi	r24, 0x01	; 1
     3f8:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     3fc:	8a e1       	ldi	r24, 0x1A	; 26
     3fe:	8a 95       	dec	r24
     400:	f1 f7       	brne	.-4      	; 0x3fe <RGB_Init+0x4c>
     402:	00 c0       	rjmp	.+0      	; 0x404 <__DATA_REGION_LENGTH__+0x4>
     404:	80 e2       	ldi	r24, 0x20	; 32
     406:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     40a:	8a e1       	ldi	r24, 0x1A	; 26
     40c:	8a 95       	dec	r24
     40e:	f1 f7       	brne	.-4      	; 0x40c <__DATA_REGION_LENGTH__+0xc>
     410:	00 c0       	rjmp	.+0      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
     412:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     416:	8a e1       	ldi	r24, 0x1A	; 26
     418:	8a 95       	dec	r24
     41a:	f1 f7       	brne	.-4      	; 0x418 <__DATA_REGION_LENGTH__+0x18>
     41c:	00 c0       	rjmp	.+0      	; 0x41e <__DATA_REGION_LENGTH__+0x1e>
     41e:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     422:	80 ec       	ldi	r24, 0xC0	; 192
     424:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     428:	8a e1       	ldi	r24, 0x1A	; 26
     42a:	8a 95       	dec	r24
     42c:	f1 f7       	brne	.-4      	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
     42e:	00 c0       	rjmp	.+0      	; 0x430 <__DATA_REGION_LENGTH__+0x30>
     430:	80 e0       	ldi	r24, 0x00	; 0
     432:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     436:	8a e1       	ldi	r24, 0x1A	; 26
     438:	8a 95       	dec	r24
     43a:	f1 f7       	brne	.-4      	; 0x438 <__DATA_REGION_LENGTH__+0x38>
     43c:	00 c0       	rjmp	.+0      	; 0x43e <__DATA_REGION_LENGTH__+0x3e>
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     444:	8a e1       	ldi	r24, 0x1A	; 26
     446:	8a 95       	dec	r24
     448:	f1 f7       	brne	.-4      	; 0x446 <__DATA_REGION_LENGTH__+0x46>
     44a:	00 c0       	rjmp	.+0      	; 0x44c <__DATA_REGION_LENGTH__+0x4c>
     44c:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     450:	8a e1       	ldi	r24, 0x1A	; 26
     452:	8a 95       	dec	r24
     454:	f1 f7       	brne	.-4      	; 0x452 <__DATA_REGION_LENGTH__+0x52>
     456:	00 c0       	rjmp	.+0      	; 0x458 <__DATA_REGION_LENGTH__+0x58>
     458:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     45c:	80 ec       	ldi	r24, 0xC0	; 192
     45e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     462:	8a e1       	ldi	r24, 0x1A	; 26
     464:	8a 95       	dec	r24
     466:	f1 f7       	brne	.-4      	; 0x464 <__DATA_REGION_LENGTH__+0x64>
     468:	00 c0       	rjmp	.+0      	; 0x46a <__DATA_REGION_LENGTH__+0x6a>
     46a:	88 e0       	ldi	r24, 0x08	; 8
     46c:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     470:	8a e1       	ldi	r24, 0x1A	; 26
     472:	8a 95       	dec	r24
     474:	f1 f7       	brne	.-4      	; 0x472 <__DATA_REGION_LENGTH__+0x72>
     476:	00 c0       	rjmp	.+0      	; 0x478 <__DATA_REGION_LENGTH__+0x78>
     478:	8f ef       	ldi	r24, 0xFF	; 255
     47a:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     47e:	8a e1       	ldi	r24, 0x1A	; 26
     480:	8a 95       	dec	r24
     482:	f1 f7       	brne	.-4      	; 0x480 <__DATA_REGION_LENGTH__+0x80>
     484:	00 c0       	rjmp	.+0      	; 0x486 <__DATA_REGION_LENGTH__+0x86>
     486:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     48a:	8a e1       	ldi	r24, 0x1A	; 26
     48c:	8a 95       	dec	r24
     48e:	f1 f7       	brne	.-4      	; 0x48c <__DATA_REGION_LENGTH__+0x8c>
     490:	00 c0       	rjmp	.+0      	; 0x492 <__DATA_REGION_LENGTH__+0x92>
     492:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     496:	80 ec       	ldi	r24, 0xC0	; 192
     498:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     49c:	8a e1       	ldi	r24, 0x1A	; 26
     49e:	8a 95       	dec	r24
     4a0:	f1 f7       	brne	.-4      	; 0x49e <__DATA_REGION_LENGTH__+0x9e>
     4a2:	00 c0       	rjmp	.+0      	; 0x4a4 <__DATA_REGION_LENGTH__+0xa4>
     4a4:	81 e0       	ldi	r24, 0x01	; 1
     4a6:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     4aa:	8a e1       	ldi	r24, 0x1A	; 26
     4ac:	8a 95       	dec	r24
     4ae:	f1 f7       	brne	.-4      	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
     4b0:	00 c0       	rjmp	.+0      	; 0x4b2 <__DATA_REGION_LENGTH__+0xb2>
     4b2:	80 e2       	ldi	r24, 0x20	; 32
     4b4:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     4b8:	8a e1       	ldi	r24, 0x1A	; 26
     4ba:	8a 95       	dec	r24
     4bc:	f1 f7       	brne	.-4      	; 0x4ba <__DATA_REGION_LENGTH__+0xba>
     4be:	00 c0       	rjmp	.+0      	; 0x4c0 <__DATA_REGION_LENGTH__+0xc0>
     4c0:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     4c4:	8a e1       	ldi	r24, 0x1A	; 26
     4c6:	8a 95       	dec	r24
     4c8:	f1 f7       	brne	.-4      	; 0x4c6 <__DATA_REGION_LENGTH__+0xc6>
     4ca:	00 c0       	rjmp	.+0      	; 0x4cc <__DATA_REGION_LENGTH__+0xcc>
     4cc:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     4d0:	80 ec       	ldi	r24, 0xC0	; 192
     4d2:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     4d6:	8a e1       	ldi	r24, 0x1A	; 26
     4d8:	8a 95       	dec	r24
     4da:	f1 f7       	brne	.-4      	; 0x4d8 <__DATA_REGION_LENGTH__+0xd8>
     4dc:	00 c0       	rjmp	.+0      	; 0x4de <__DATA_REGION_LENGTH__+0xde>
     4de:	84 e0       	ldi	r24, 0x04	; 4
     4e0:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     4e4:	8a e1       	ldi	r24, 0x1A	; 26
     4e6:	8a 95       	dec	r24
     4e8:	f1 f7       	brne	.-4      	; 0x4e6 <__DATA_REGION_LENGTH__+0xe6>
     4ea:	00 c0       	rjmp	.+0      	; 0x4ec <__DATA_REGION_LENGTH__+0xec>
     4ec:	8f ef       	ldi	r24, 0xFF	; 255
     4ee:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     4f2:	8a e1       	ldi	r24, 0x1A	; 26
     4f4:	8a 95       	dec	r24
     4f6:	f1 f7       	brne	.-4      	; 0x4f4 <__DATA_REGION_LENGTH__+0xf4>
     4f8:	00 c0       	rjmp	.+0      	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
     4fa:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     4fe:	8a e1       	ldi	r24, 0x1A	; 26
     500:	8a 95       	dec	r24
     502:	f1 f7       	brne	.-4      	; 0x500 <__stack+0x1>
     504:	00 c0       	rjmp	.+0      	; 0x506 <__stack+0x7>
     506:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     50a:	80 ec       	ldi	r24, 0xC0	; 192
     50c:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     510:	8a e1       	ldi	r24, 0x1A	; 26
     512:	8a 95       	dec	r24
     514:	f1 f7       	brne	.-4      	; 0x512 <__stack+0x13>
     516:	00 c0       	rjmp	.+0      	; 0x518 <__stack+0x19>
     518:	83 e0       	ldi	r24, 0x03	; 3
     51a:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     51e:	8a e1       	ldi	r24, 0x1A	; 26
     520:	8a 95       	dec	r24
     522:	f1 f7       	brne	.-4      	; 0x520 <__stack+0x21>
     524:	00 c0       	rjmp	.+0      	; 0x526 <__stack+0x27>
     526:	8f ef       	ldi	r24, 0xFF	; 255
     528:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     52c:	8a e1       	ldi	r24, 0x1A	; 26
     52e:	8a 95       	dec	r24
     530:	f1 f7       	brne	.-4      	; 0x52e <__stack+0x2f>
     532:	00 c0       	rjmp	.+0      	; 0x534 <__stack+0x35>
     534:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     538:	8a e1       	ldi	r24, 0x1A	; 26
     53a:	8a 95       	dec	r24
     53c:	f1 f7       	brne	.-4      	; 0x53a <__stack+0x3b>
     53e:	00 c0       	rjmp	.+0      	; 0x540 <__stack+0x41>
     540:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     544:	80 ec       	ldi	r24, 0xC0	; 192
     546:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     54a:	8a e1       	ldi	r24, 0x1A	; 26
     54c:	8a 95       	dec	r24
     54e:	f1 f7       	brne	.-4      	; 0x54c <__stack+0x4d>
     550:	00 c0       	rjmp	.+0      	; 0x552 <__stack+0x53>
     552:	82 e0       	ldi	r24, 0x02	; 2
     554:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     558:	8a e1       	ldi	r24, 0x1A	; 26
     55a:	8a 95       	dec	r24
     55c:	f1 f7       	brne	.-4      	; 0x55a <__stack+0x5b>
     55e:	00 c0       	rjmp	.+0      	; 0x560 <__stack+0x61>
     560:	8f ef       	ldi	r24, 0xFF	; 255
     562:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     566:	8a e1       	ldi	r24, 0x1A	; 26
     568:	8a 95       	dec	r24
     56a:	f1 f7       	brne	.-4      	; 0x568 <__stack+0x69>
     56c:	00 c0       	rjmp	.+0      	; 0x56e <__stack+0x6f>
     56e:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     572:	8a e1       	ldi	r24, 0x1A	; 26
     574:	8a 95       	dec	r24
     576:	f1 f7       	brne	.-4      	; 0x574 <__stack+0x75>
     578:	00 c0       	rjmp	.+0      	; 0x57a <__stack+0x7b>
     57a:	08 95       	ret

0000057c <RGB_SetColor>:
     57c:	1f 93       	push	r17
     57e:	cf 93       	push	r28
     580:	df 93       	push	r29
     582:	18 2f       	mov	r17, r24
     584:	d6 2f       	mov	r29, r22
     586:	c4 2f       	mov	r28, r20
     588:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     58c:	80 ec       	ldi	r24, 0xC0	; 192
     58e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     592:	8a e1       	ldi	r24, 0x1A	; 26
     594:	8a 95       	dec	r24
     596:	f1 f7       	brne	.-4      	; 0x594 <RGB_SetColor+0x18>
     598:	00 c0       	rjmp	.+0      	; 0x59a <RGB_SetColor+0x1e>
     59a:	84 e0       	ldi	r24, 0x04	; 4
     59c:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     5a0:	8a e1       	ldi	r24, 0x1A	; 26
     5a2:	8a 95       	dec	r24
     5a4:	f1 f7       	brne	.-4      	; 0x5a2 <RGB_SetColor+0x26>
     5a6:	00 c0       	rjmp	.+0      	; 0x5a8 <RGB_SetColor+0x2c>
     5a8:	81 2f       	mov	r24, r17
     5aa:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     5ae:	8a e1       	ldi	r24, 0x1A	; 26
     5b0:	8a 95       	dec	r24
     5b2:	f1 f7       	brne	.-4      	; 0x5b0 <RGB_SetColor+0x34>
     5b4:	00 c0       	rjmp	.+0      	; 0x5b6 <RGB_SetColor+0x3a>
     5b6:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     5ba:	8a e1       	ldi	r24, 0x1A	; 26
     5bc:	8a 95       	dec	r24
     5be:	f1 f7       	brne	.-4      	; 0x5bc <RGB_SetColor+0x40>
     5c0:	00 c0       	rjmp	.+0      	; 0x5c2 <RGB_SetColor+0x46>
     5c2:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     5c6:	80 ec       	ldi	r24, 0xC0	; 192
     5c8:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     5cc:	8a e1       	ldi	r24, 0x1A	; 26
     5ce:	8a 95       	dec	r24
     5d0:	f1 f7       	brne	.-4      	; 0x5ce <RGB_SetColor+0x52>
     5d2:	00 c0       	rjmp	.+0      	; 0x5d4 <RGB_SetColor+0x58>
     5d4:	83 e0       	ldi	r24, 0x03	; 3
     5d6:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     5da:	8a e1       	ldi	r24, 0x1A	; 26
     5dc:	8a 95       	dec	r24
     5de:	f1 f7       	brne	.-4      	; 0x5dc <RGB_SetColor+0x60>
     5e0:	00 c0       	rjmp	.+0      	; 0x5e2 <RGB_SetColor+0x66>
     5e2:	8d 2f       	mov	r24, r29
     5e4:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     5e8:	8a e1       	ldi	r24, 0x1A	; 26
     5ea:	8a 95       	dec	r24
     5ec:	f1 f7       	brne	.-4      	; 0x5ea <RGB_SetColor+0x6e>
     5ee:	00 c0       	rjmp	.+0      	; 0x5f0 <RGB_SetColor+0x74>
     5f0:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     5f4:	8a e1       	ldi	r24, 0x1A	; 26
     5f6:	8a 95       	dec	r24
     5f8:	f1 f7       	brne	.-4      	; 0x5f6 <RGB_SetColor+0x7a>
     5fa:	00 c0       	rjmp	.+0      	; 0x5fc <RGB_SetColor+0x80>
     5fc:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     600:	80 ec       	ldi	r24, 0xC0	; 192
     602:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     606:	8a e1       	ldi	r24, 0x1A	; 26
     608:	8a 95       	dec	r24
     60a:	f1 f7       	brne	.-4      	; 0x608 <RGB_SetColor+0x8c>
     60c:	00 c0       	rjmp	.+0      	; 0x60e <RGB_SetColor+0x92>
     60e:	82 e0       	ldi	r24, 0x02	; 2
     610:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     614:	8a e1       	ldi	r24, 0x1A	; 26
     616:	8a 95       	dec	r24
     618:	f1 f7       	brne	.-4      	; 0x616 <RGB_SetColor+0x9a>
     61a:	00 c0       	rjmp	.+0      	; 0x61c <RGB_SetColor+0xa0>
     61c:	8c 2f       	mov	r24, r28
     61e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     622:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     626:	8a e1       	ldi	r24, 0x1A	; 26
     628:	8a 95       	dec	r24
     62a:	f1 f7       	brne	.-4      	; 0x628 <RGB_SetColor+0xac>
     62c:	00 c0       	rjmp	.+0      	; 0x62e <RGB_SetColor+0xb2>
     62e:	df 91       	pop	r29
     630:	cf 91       	pop	r28
     632:	1f 91       	pop	r17
     634:	08 95       	ret

00000636 <LCD_COMMAND>:
     636:	cf 93       	push	r28
     638:	df 93       	push	r29
     63a:	d8 2f       	mov	r29, r24
     63c:	c6 2f       	mov	r28, r22
     63e:	0e 94 bc 06 	call	0xd78	; 0xd78 <I2C_Start>
     642:	8c e7       	ldi	r24, 0x7C	; 124
     644:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     648:	8a e1       	ldi	r24, 0x1A	; 26
     64a:	8a 95       	dec	r24
     64c:	f1 f7       	brne	.-4      	; 0x64a <LCD_COMMAND+0x14>
     64e:	00 c0       	rjmp	.+0      	; 0x650 <LCD_COMMAND+0x1a>
     650:	dd 23       	and	r29, r29
     652:	21 f0       	breq	.+8      	; 0x65c <LCD_COMMAND+0x26>
     654:	80 e8       	ldi	r24, 0x80	; 128
     656:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     65a:	03 c0       	rjmp	.+6      	; 0x662 <LCD_COMMAND+0x2c>
     65c:	80 e4       	ldi	r24, 0x40	; 64
     65e:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     662:	8a e1       	ldi	r24, 0x1A	; 26
     664:	8a 95       	dec	r24
     666:	f1 f7       	brne	.-4      	; 0x664 <LCD_COMMAND+0x2e>
     668:	00 c0       	rjmp	.+0      	; 0x66a <LCD_COMMAND+0x34>
     66a:	8c 2f       	mov	r24, r28
     66c:	0e 94 ec 06 	call	0xdd8	; 0xdd8 <I2C_Write>
     670:	0e 94 d4 06 	call	0xda8	; 0xda8 <I2C_Stop>
     674:	85 e8       	ldi	r24, 0x85	; 133
     676:	8a 95       	dec	r24
     678:	f1 f7       	brne	.-4      	; 0x676 <LCD_COMMAND+0x40>
     67a:	00 00       	nop
     67c:	df 91       	pop	r29
     67e:	cf 91       	pop	r28
     680:	08 95       	ret

00000682 <LCD_Init>:
     682:	2f ef       	ldi	r18, 0xFF	; 255
     684:	8d e3       	ldi	r24, 0x3D	; 61
     686:	99 e4       	ldi	r25, 0x49	; 73
     688:	21 50       	subi	r18, 0x01	; 1
     68a:	80 40       	sbci	r24, 0x00	; 0
     68c:	90 40       	sbci	r25, 0x00	; 0
     68e:	e1 f7       	brne	.-8      	; 0x688 <LCD_Init+0x6>
     690:	00 c0       	rjmp	.+0      	; 0x692 <LCD_Init+0x10>
     692:	00 00       	nop
     694:	68 e0       	ldi	r22, 0x08	; 8
     696:	81 e0       	ldi	r24, 0x01	; 1
     698:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     69c:	8f e0       	ldi	r24, 0x0F	; 15
     69e:	97 e2       	ldi	r25, 0x27	; 39
     6a0:	01 97       	sbiw	r24, 0x01	; 1
     6a2:	f1 f7       	brne	.-4      	; 0x6a0 <LCD_Init+0x1e>
     6a4:	00 c0       	rjmp	.+0      	; 0x6a6 <LCD_Init+0x24>
     6a6:	00 00       	nop
     6a8:	68 e2       	ldi	r22, 0x28	; 40
     6aa:	81 e0       	ldi	r24, 0x01	; 1
     6ac:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     6b0:	8f e0       	ldi	r24, 0x0F	; 15
     6b2:	97 e2       	ldi	r25, 0x27	; 39
     6b4:	01 97       	sbiw	r24, 0x01	; 1
     6b6:	f1 f7       	brne	.-4      	; 0x6b4 <LCD_Init+0x32>
     6b8:	00 c0       	rjmp	.+0      	; 0x6ba <LCD_Init+0x38>
     6ba:	00 00       	nop
     6bc:	68 e2       	ldi	r22, 0x28	; 40
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     6c4:	8f e0       	ldi	r24, 0x0F	; 15
     6c6:	97 e2       	ldi	r25, 0x27	; 39
     6c8:	01 97       	sbiw	r24, 0x01	; 1
     6ca:	f1 f7       	brne	.-4      	; 0x6c8 <LCD_Init+0x46>
     6cc:	00 c0       	rjmp	.+0      	; 0x6ce <LCD_Init+0x4c>
     6ce:	00 00       	nop
     6d0:	68 e2       	ldi	r22, 0x28	; 40
     6d2:	81 e0       	ldi	r24, 0x01	; 1
     6d4:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     6d8:	8f e0       	ldi	r24, 0x0F	; 15
     6da:	97 e2       	ldi	r25, 0x27	; 39
     6dc:	01 97       	sbiw	r24, 0x01	; 1
     6de:	f1 f7       	brne	.-4      	; 0x6dc <LCD_Init+0x5a>
     6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <LCD_Init+0x60>
     6e2:	00 00       	nop
     6e4:	6c e0       	ldi	r22, 0x0C	; 12
     6e6:	81 e0       	ldi	r24, 0x01	; 1
     6e8:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     6ec:	8f e0       	ldi	r24, 0x0F	; 15
     6ee:	97 e2       	ldi	r25, 0x27	; 39
     6f0:	01 97       	sbiw	r24, 0x01	; 1
     6f2:	f1 f7       	brne	.-4      	; 0x6f0 <LCD_Init+0x6e>
     6f4:	00 c0       	rjmp	.+0      	; 0x6f6 <LCD_Init+0x74>
     6f6:	00 00       	nop
     6f8:	6c e0       	ldi	r22, 0x0C	; 12
     6fa:	81 e0       	ldi	r24, 0x01	; 1
     6fc:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     700:	8f e0       	ldi	r24, 0x0F	; 15
     702:	97 e2       	ldi	r25, 0x27	; 39
     704:	01 97       	sbiw	r24, 0x01	; 1
     706:	f1 f7       	brne	.-4      	; 0x704 <LCD_Init+0x82>
     708:	00 c0       	rjmp	.+0      	; 0x70a <LCD_Init+0x88>
     70a:	00 00       	nop
     70c:	61 e0       	ldi	r22, 0x01	; 1
     70e:	81 e0       	ldi	r24, 0x01	; 1
     710:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     714:	8f e0       	ldi	r24, 0x0F	; 15
     716:	97 e2       	ldi	r25, 0x27	; 39
     718:	01 97       	sbiw	r24, 0x01	; 1
     71a:	f1 f7       	brne	.-4      	; 0x718 <LCD_Init+0x96>
     71c:	00 c0       	rjmp	.+0      	; 0x71e <LCD_Init+0x9c>
     71e:	00 00       	nop
     720:	66 e0       	ldi	r22, 0x06	; 6
     722:	81 e0       	ldi	r24, 0x01	; 1
     724:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     728:	8f e0       	ldi	r24, 0x0F	; 15
     72a:	97 e2       	ldi	r25, 0x27	; 39
     72c:	01 97       	sbiw	r24, 0x01	; 1
     72e:	f1 f7       	brne	.-4      	; 0x72c <LCD_Init+0xaa>
     730:	00 c0       	rjmp	.+0      	; 0x732 <LCD_Init+0xb0>
     732:	00 00       	nop
     734:	60 e0       	ldi	r22, 0x00	; 0
     736:	81 e0       	ldi	r24, 0x01	; 1
     738:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     73c:	8f e0       	ldi	r24, 0x0F	; 15
     73e:	97 e2       	ldi	r25, 0x27	; 39
     740:	01 97       	sbiw	r24, 0x01	; 1
     742:	f1 f7       	brne	.-4      	; 0x740 <LCD_Init+0xbe>
     744:	00 c0       	rjmp	.+0      	; 0x746 <LCD_Init+0xc4>
     746:	00 00       	nop
     748:	08 95       	ret

0000074a <LCD_PrintChar>:
     74a:	68 2f       	mov	r22, r24
     74c:	80 e0       	ldi	r24, 0x00	; 0
     74e:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     752:	8f e0       	ldi	r24, 0x0F	; 15
     754:	97 e2       	ldi	r25, 0x27	; 39
     756:	01 97       	sbiw	r24, 0x01	; 1
     758:	f1 f7       	brne	.-4      	; 0x756 <LCD_PrintChar+0xc>
     75a:	00 c0       	rjmp	.+0      	; 0x75c <LCD_PrintChar+0x12>
     75c:	00 00       	nop
     75e:	08 95       	ret

00000760 <LCD_PrintString>:
     760:	cf 93       	push	r28
     762:	df 93       	push	r29
     764:	ec 01       	movw	r28, r24
     766:	03 c0       	rjmp	.+6      	; 0x76e <LCD_PrintString+0xe>
     768:	21 96       	adiw	r28, 0x01	; 1
     76a:	0e 94 a5 03 	call	0x74a	; 0x74a <LCD_PrintChar>
     76e:	88 81       	ld	r24, Y
     770:	81 11       	cpse	r24, r1
     772:	fa cf       	rjmp	.-12     	; 0x768 <LCD_PrintString+0x8>
     774:	df 91       	pop	r29
     776:	cf 91       	pop	r28
     778:	08 95       	ret

0000077a <main>:



int main(void)
{
     77a:	cf 93       	push	r28
     77c:	df 93       	push	r29
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	61 97       	sbiw	r28, 0x11	; 17
     784:	0f b6       	in	r0, 0x3f	; 63
     786:	f8 94       	cli
     788:	de bf       	out	0x3e, r29	; 62
     78a:	0f be       	out	0x3f, r0	; 63
     78c:	cd bf       	out	0x3d, r28	; 61
	/* Initializes MCU, drivers and middleware */
	uint8_t MAXO = 0x00;
	atmel_start_init();
     78e:	0e 94 d6 00 	call	0x1ac	; 0x1ac <atmel_start_init>
	init_buttons();
     792:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <init_buttons>
	I2C_Init();
     796:	0e 94 af 06 	call	0xd5e	; 0xd5e <I2C_Init>
	LCD_Init();
     79a:	0e 94 41 03 	call	0x682	; 0x682 <LCD_Init>
	RGB_Init();
     79e:	0e 94 d9 01 	call	0x3b2	; 0x3b2 <RGB_Init>
	
	// Set PD1 as output for Chip Select
	DDRD |= (1 << MAX4820_CS);
     7a2:	8a b1       	in	r24, 0x0a	; 10
     7a4:	82 60       	ori	r24, 0x02	; 2
     7a6:	8a b9       	out	0x0a, r24	; 10
	PORTD |= (1 << MAX4820_CS); // Deselect MAX4820 initially
     7a8:	8b b1       	in	r24, 0x0b	; 11
     7aa:	82 60       	ori	r24, 0x02	; 2
     7ac:	8b b9       	out	0x0b, r24	; 11
	
	bool toggle = true;
	//static uint8_t rx[16];
	//char test[17];
    char buffer[17] = "";
     7ae:	1a 82       	std	Y+2, r1	; 0x02
     7b0:	19 82       	std	Y+1, r1	; 0x01
     7b2:	fe 01       	movw	r30, r28
     7b4:	33 96       	adiw	r30, 0x03	; 3
     7b6:	8f e0       	ldi	r24, 0x0F	; 15
     7b8:	df 01       	movw	r26, r30
     7ba:	1d 92       	st	X+, r1
     7bc:	8a 95       	dec	r24
     7be:	e9 f7       	brne	.-6      	; 0x7ba <main+0x40>


int main(void)
{
	/* Initializes MCU, drivers and middleware */
	uint8_t MAXO = 0x00;
     7c0:	91 2c       	mov	r9, r1
	float stop_th = TH_STOP;
	float hyst_th = TH_HYST;

	// WHILE //
	while (1) {
		s1 = ADC_0_get_conversion(6) - scorr1;
     7c2:	86 e0       	ldi	r24, 0x06	; 6
     7c4:	0e 94 a1 06 	call	0xd42	; 0xd42 <ADC_0_get_conversion>
		t1= (s1 / (float)ADC_MAX) * v_ref;
     7c8:	bc 01       	movw	r22, r24
     7ca:	80 e0       	ldi	r24, 0x00	; 0
     7cc:	90 e0       	ldi	r25, 0x00	; 0
     7ce:	0e 94 b5 0a 	call	0x156a	; 0x156a <__floatunsisf>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 ec       	ldi	r19, 0xC0	; 192
     7d6:	4f e7       	ldi	r20, 0x7F	; 127
     7d8:	54 e4       	ldi	r21, 0x44	; 68
     7da:	0e 94 43 0a 	call	0x1486	; 0x1486 <__divsf3>
     7de:	28 e4       	ldi	r18, 0x48	; 72
     7e0:	31 ee       	ldi	r19, 0xE1	; 225
     7e2:	42 e8       	ldi	r20, 0x82	; 130
     7e4:	50 e4       	ldi	r21, 0x40	; 64
     7e6:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__mulsf3>
     7ea:	6b 01       	movw	r12, r22
     7ec:	7c 01       	movw	r14, r24
		t1= R_SERIES * (t1 / (v_ref - t1));
     7ee:	9b 01       	movw	r18, r22
     7f0:	ac 01       	movw	r20, r24
     7f2:	68 e4       	ldi	r22, 0x48	; 72
     7f4:	71 ee       	ldi	r23, 0xE1	; 225
     7f6:	82 e8       	ldi	r24, 0x82	; 130
     7f8:	90 e4       	ldi	r25, 0x40	; 64
     7fa:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__subsf3>
     7fe:	9b 01       	movw	r18, r22
     800:	ac 01       	movw	r20, r24
     802:	c7 01       	movw	r24, r14
     804:	b6 01       	movw	r22, r12
     806:	0e 94 43 0a 	call	0x1486	; 0x1486 <__divsf3>
     80a:	20 e0       	ldi	r18, 0x00	; 0
     80c:	30 e0       	ldi	r19, 0x00	; 0
     80e:	4a e7       	ldi	r20, 0x7A	; 122
     810:	54 e4       	ldi	r21, 0x44	; 68
     812:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__mulsf3>
		t1= (t1 - R0) / ALPHA;
     816:	20 e0       	ldi	r18, 0x00	; 0
     818:	30 e0       	ldi	r19, 0x00	; 0
     81a:	4a e7       	ldi	r20, 0x7A	; 122
     81c:	54 e4       	ldi	r21, 0x44	; 68
     81e:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__subsf3>
     822:	26 e6       	ldi	r18, 0x66	; 102
     824:	36 e6       	ldi	r19, 0x66	; 102
     826:	46 e7       	ldi	r20, 0x76	; 118
     828:	50 e4       	ldi	r21, 0x40	; 64
     82a:	0e 94 43 0a 	call	0x1486	; 0x1486 <__divsf3>
     82e:	e6 2e       	mov	r14, r22
     830:	f7 2e       	mov	r15, r23
     832:	18 2f       	mov	r17, r24
     834:	09 2f       	mov	r16, r25
		
		s2 = ADC_0_get_conversion(7) - scorr2;
     836:	87 e0       	ldi	r24, 0x07	; 7
     838:	0e 94 a1 06 	call	0xd42	; 0xd42 <ADC_0_get_conversion>
		t2= (s2 / (float)ADC_MAX) * v_ref;
     83c:	bc 01       	movw	r22, r24
     83e:	80 e0       	ldi	r24, 0x00	; 0
     840:	90 e0       	ldi	r25, 0x00	; 0
     842:	0e 94 b5 0a 	call	0x156a	; 0x156a <__floatunsisf>
     846:	20 e0       	ldi	r18, 0x00	; 0
     848:	30 ec       	ldi	r19, 0xC0	; 192
     84a:	4f e7       	ldi	r20, 0x7F	; 127
     84c:	54 e4       	ldi	r21, 0x44	; 68
     84e:	0e 94 43 0a 	call	0x1486	; 0x1486 <__divsf3>
     852:	28 e4       	ldi	r18, 0x48	; 72
     854:	31 ee       	ldi	r19, 0xE1	; 225
     856:	42 e8       	ldi	r20, 0x82	; 130
     858:	50 e4       	ldi	r21, 0x40	; 64
     85a:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__mulsf3>
     85e:	2b 01       	movw	r4, r22
     860:	3c 01       	movw	r6, r24
		t2= R_SERIES * (t2 / (v_ref - t2));
     862:	9b 01       	movw	r18, r22
     864:	ac 01       	movw	r20, r24
     866:	68 e4       	ldi	r22, 0x48	; 72
     868:	71 ee       	ldi	r23, 0xE1	; 225
     86a:	82 e8       	ldi	r24, 0x82	; 130
     86c:	90 e4       	ldi	r25, 0x40	; 64
     86e:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__subsf3>
     872:	9b 01       	movw	r18, r22
     874:	ac 01       	movw	r20, r24
     876:	c3 01       	movw	r24, r6
     878:	b2 01       	movw	r22, r4
     87a:	0e 94 43 0a 	call	0x1486	; 0x1486 <__divsf3>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	4a e7       	ldi	r20, 0x7A	; 122
     884:	54 e4       	ldi	r21, 0x44	; 68
     886:	0e 94 6c 0b 	call	0x16d8	; 0x16d8 <__mulsf3>
		t2= (t2 - R0) / ALPHA;
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	4a e7       	ldi	r20, 0x7A	; 122
     890:	54 e4       	ldi	r21, 0x44	; 68
     892:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__subsf3>
     896:	26 e6       	ldi	r18, 0x66	; 102
     898:	36 e6       	ldi	r19, 0x66	; 102
     89a:	46 e7       	ldi	r20, 0x76	; 118
     89c:	50 e4       	ldi	r21, 0x40	; 64
     89e:	0e 94 43 0a 	call	0x1486	; 0x1486 <__divsf3>
     8a2:	a6 2e       	mov	r10, r22
     8a4:	b7 2e       	mov	r11, r23
     8a6:	c8 2e       	mov	r12, r24
     8a8:	d9 2e       	mov	r13, r25
		
		
		
		// Enter into LATAUS/LOAD state
		if( tila != LATAUS && (t1 > t2 && !(t1 <= stop_th) && t1 >= load_th)){ 
     8aa:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <tila>
     8ae:	81 30       	cpi	r24, 0x01	; 1
     8b0:	39 f1       	breq	.+78     	; 0x900 <main+0x186>
     8b2:	2a 2d       	mov	r18, r10
     8b4:	3b 2d       	mov	r19, r11
     8b6:	4c 2d       	mov	r20, r12
     8b8:	5d 2d       	mov	r21, r13
     8ba:	6e 2d       	mov	r22, r14
     8bc:	7f 2d       	mov	r23, r15
     8be:	81 2f       	mov	r24, r17
     8c0:	90 2f       	mov	r25, r16
     8c2:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__gesf2>
     8c6:	18 16       	cp	r1, r24
     8c8:	dc f4       	brge	.+54     	; 0x900 <main+0x186>
     8ca:	20 e0       	ldi	r18, 0x00	; 0
     8cc:	30 e0       	ldi	r19, 0x00	; 0
     8ce:	44 eb       	ldi	r20, 0xB4	; 180
     8d0:	52 e4       	ldi	r21, 0x42	; 66
     8d2:	6e 2d       	mov	r22, r14
     8d4:	7f 2d       	mov	r23, r15
     8d6:	81 2f       	mov	r24, r17
     8d8:	90 2f       	mov	r25, r16
     8da:	0e 94 3e 0a 	call	0x147c	; 0x147c <__cmpsf2>
     8de:	18 16       	cp	r1, r24
     8e0:	7c f4       	brge	.+30     	; 0x900 <main+0x186>
     8e2:	20 e0       	ldi	r18, 0x00	; 0
     8e4:	30 e0       	ldi	r19, 0x00	; 0
     8e6:	40 e9       	ldi	r20, 0x90	; 144
     8e8:	52 e4       	ldi	r21, 0x42	; 66
     8ea:	6e 2d       	mov	r22, r14
     8ec:	7f 2d       	mov	r23, r15
     8ee:	81 2f       	mov	r24, r17
     8f0:	90 2f       	mov	r25, r16
     8f2:	0e 94 67 0b 	call	0x16ce	; 0x16ce <__gesf2>
     8f6:	88 23       	and	r24, r24
     8f8:	1c f0       	brlt	.+6      	; 0x900 <main+0x186>
			tila = LATAUS;
     8fa:	81 e0       	ldi	r24, 0x01	; 1
     8fc:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <tila>
			}
	    // Exit from LATAUS/LOAD state
		if(tila == LATAUS && (t1 < load_th - hyst_th)){
     900:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <tila>
     904:	81 30       	cpi	r24, 0x01	; 1
     906:	71 f4       	brne	.+28     	; 0x924 <main+0x1aa>
     908:	20 e0       	ldi	r18, 0x00	; 0
     90a:	30 e0       	ldi	r19, 0x00	; 0
     90c:	4c e8       	ldi	r20, 0x8C	; 140
     90e:	52 e4       	ldi	r21, 0x42	; 66
     910:	6e 2d       	mov	r22, r14
     912:	7f 2d       	mov	r23, r15
     914:	81 2f       	mov	r24, r17
     916:	90 2f       	mov	r25, r16
     918:	0e 94 3e 0a 	call	0x147c	; 0x147c <__cmpsf2>
     91c:	88 23       	and	r24, r24
     91e:	14 f4       	brge	.+4      	; 0x924 <main+0x1aa>
			tila = LEPO;
     920:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <tila>
		}
		// Enter into PALUU/REVERSE state
		if(tila != PALUU && (t2 > t1)){
     924:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <tila>
     928:	82 30       	cpi	r24, 0x02	; 2
     92a:	79 f0       	breq	.+30     	; 0x94a <main+0x1d0>
     92c:	2a 2d       	mov	r18, r10
     92e:	3b 2d       	mov	r19, r11
     930:	4c 2d       	mov	r20, r12
     932:	5d 2d       	mov	r21, r13
     934:	6e 2d       	mov	r22, r14
     936:	7f 2d       	mov	r23, r15
     938:	81 2f       	mov	r24, r17
     93a:	90 2f       	mov	r25, r16
     93c:	0e 94 3e 0a 	call	0x147c	; 0x147c <__cmpsf2>
     940:	88 23       	and	r24, r24
     942:	1c f4       	brge	.+6      	; 0x94a <main+0x1d0>
			tila = PALUU;
     944:	82 e0       	ldi	r24, 0x02	; 2
     946:	80 93 ef 01 	sts	0x01EF, r24	; 0x8001ef <tila>
		}
		// Exit from PALUU/REVERSE state
		if(tila == PALUU && (t2 < t1 - hyst_th)){
     94a:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <tila>
     94e:	82 30       	cpi	r24, 0x02	; 2
     950:	b1 f4       	brne	.+44     	; 0x97e <main+0x204>
     952:	20 e0       	ldi	r18, 0x00	; 0
     954:	30 e0       	ldi	r19, 0x00	; 0
     956:	40 e0       	ldi	r20, 0x00	; 0
     958:	50 e4       	ldi	r21, 0x40	; 64
     95a:	6e 2d       	mov	r22, r14
     95c:	7f 2d       	mov	r23, r15
     95e:	81 2f       	mov	r24, r17
     960:	90 2f       	mov	r25, r16
     962:	0e 94 d1 09 	call	0x13a2	; 0x13a2 <__subsf3>
     966:	9b 01       	movw	r18, r22
     968:	ac 01       	movw	r20, r24
     96a:	6a 2d       	mov	r22, r10
     96c:	7b 2d       	mov	r23, r11
     96e:	8c 2d       	mov	r24, r12
     970:	9d 2d       	mov	r25, r13
     972:	0e 94 3e 0a 	call	0x147c	; 0x147c <__cmpsf2>
     976:	88 23       	and	r24, r24
     978:	14 f4       	brge	.+4      	; 0x97e <main+0x204>
			tila = LEPO;
     97a:	10 92 ef 01 	sts	0x01EF, r1	; 0x8001ef <tila>
		
		

		
		// Handling backlight
		switch (tila) {
     97e:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <tila>
     982:	83 30       	cpi	r24, 0x03	; 3
     984:	31 f4       	brne	.+12     	; 0x992 <main+0x218>
			case VIKA:
				if(toggle){
						RGB_SetColor(0xFF,  0x00, 0x00);
     986:	40 e0       	ldi	r20, 0x00	; 0
     988:	60 e0       	ldi	r22, 0x00	; 0
     98a:	8f ef       	ldi	r24, 0xFF	; 255
     98c:	0e 94 be 02 	call	0x57c	; 0x57c <RGB_SetColor>
					}else{
						RGB_SetColor(0xFF,  0xFF, 0x00);
					}
				toggle = ~toggle;
				break;
     990:	05 c0       	rjmp	.+10     	; 0x99c <main+0x222>

			default:
				RGB_SetColor(0xFC, 0xFC, 0xFC);
     992:	4c ef       	ldi	r20, 0xFC	; 252
     994:	6c ef       	ldi	r22, 0xFC	; 252
     996:	8c ef       	ldi	r24, 0xFC	; 252
     998:	0e 94 be 02 	call	0x57c	; 0x57c <RGB_SetColor>
		}
		
		// Handling Pumps
		switch (tila) {
     99c:	80 91 ef 01 	lds	r24, 0x01EF	; 0x8001ef <tila>
     9a0:	81 30       	cpi	r24, 0x01	; 1
     9a2:	51 f0       	breq	.+20     	; 0x9b8 <main+0x23e>
     9a4:	28 f0       	brcs	.+10     	; 0x9b0 <main+0x236>
     9a6:	82 30       	cpi	r24, 0x02	; 2
     9a8:	61 f0       	breq	.+24     	; 0x9c2 <main+0x248>
     9aa:	83 30       	cpi	r24, 0x03	; 3
     9ac:	79 f0       	breq	.+30     	; 0x9cc <main+0x252>
     9ae:	12 c0       	rjmp	.+36     	; 0x9d4 <main+0x25a>
			case LEPO:
			MAXO &= ~(1 << PUMP1);
			MAXO &= ~(1 << PUMP2);
			MAXO &= ~(1 << BUZZ1);
     9b0:	b9 2d       	mov	r27, r9
     9b2:	b8 7f       	andi	r27, 0xF8	; 248
     9b4:	9b 2e       	mov	r9, r27
			break;
     9b6:	0e c0       	rjmp	.+28     	; 0x9d4 <main+0x25a>
     9b8:	89 2d       	mov	r24, r9
     9ba:	89 7f       	andi	r24, 0xF9	; 249
			case LATAUS:			
			MAXO |= (1 << PUMP1);
			MAXO &= ~(1 << PUMP2);
			MAXO &= ~(1 << BUZZ1);
     9bc:	81 60       	ori	r24, 0x01	; 1
     9be:	98 2e       	mov	r9, r24
			break;
     9c0:	09 c0       	rjmp	.+18     	; 0x9d4 <main+0x25a>
     9c2:	89 2d       	mov	r24, r9
     9c4:	8a 7f       	andi	r24, 0xFA	; 250
			case PALUU:
			MAXO &= ~(1 << PUMP1);
			MAXO |= (1 << PUMP2);
			MAXO &= ~(1 << BUZZ1);
     9c6:	82 60       	ori	r24, 0x02	; 2
     9c8:	98 2e       	mov	r9, r24
			break;
     9ca:	04 c0       	rjmp	.+8      	; 0x9d4 <main+0x25a>
			case VIKA:;
			MAXO &= ~(1 << PUMP1);
			MAXO &= ~(1 << PUMP2);
     9cc:	89 2d       	mov	r24, r9
     9ce:	8c 7f       	andi	r24, 0xFC	; 252
			MAXO |= (1 << BUZZ1);
     9d0:	84 60       	ori	r24, 0x04	; 4
     9d2:	98 2e       	mov	r9, r24
			break;

			default:;
			// code block
		}
		MAX4820_Write(MAXO);
     9d4:	89 2d       	mov	r24, r9
     9d6:	0e 94 a0 01 	call	0x340	; 0x340 <MAX4820_Write>
		
		// Rendering screen and menus
		if(refresh)
     9da:	80 91 18 01 	lds	r24, 0x0118	; 0x800118 <refresh>
     9de:	88 23       	and	r24, r24
     9e0:	61 f0       	breq	.+24     	; 0x9fa <main+0x280>
			{LCD_COMMAND(true ,LCD_CLEARDISPLAY); refresh = false; _delay_us(2000);} // clear when menu changes
     9e2:	61 e0       	ldi	r22, 0x01	; 1
     9e4:	81 e0       	ldi	r24, 0x01	; 1
     9e6:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
     9ea:	10 92 18 01 	sts	0x0118, r1	; 0x800118 <refresh>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     9ee:	8f e9       	ldi	r24, 0x9F	; 159
     9f0:	9f e0       	ldi	r25, 0x0F	; 15
     9f2:	01 97       	sbiw	r24, 0x01	; 1
     9f4:	f1 f7       	brne	.-4      	; 0x9f2 <main+0x278>
     9f6:	00 c0       	rjmp	.+0      	; 0x9f8 <main+0x27e>
     9f8:	00 00       	nop
		

		read_buttons();	
     9fa:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <read_buttons>
		switch (display) {
     9fe:	80 91 ee 01 	lds	r24, 0x01EE	; 0x8001ee <display>
     a02:	88 23       	and	r24, r24
     a04:	21 f0       	breq	.+8      	; 0xa0e <main+0x294>
     a06:	81 30       	cpi	r24, 0x01	; 1
     a08:	09 f4       	brne	.+2      	; 0xa0c <main+0x292>
     a0a:	59 c0       	rjmp	.+178    	; 0xabe <main+0x344>
     a0c:	66 c1       	rjmp	.+716    	; 0xcda <main+0x560>
			case MONITORI:
				if (buttons[BTN_UP].state == BUTTON_DOWN) {
     a0e:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     a12:	81 30       	cpi	r24, 0x01	; 1
     a14:	19 f4       	brne	.+6      	; 0xa1c <main+0x2a2>
					buttons[BTN_UP].buttonWasDown = true;
     a16:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     a1a:	0f c0       	rjmp	.+30     	; 0xa3a <main+0x2c0>
				}
				else if (buttons[BTN_UP].state == BUTTON_HELD) {
     a1c:	82 30       	cpi	r24, 0x02	; 2
     a1e:	69 f0       	breq	.+26     	; 0xa3a <main+0x2c0>
				}
				else if (buttons[BTN_UP].state == BUTTON_UP) {
     a20:	81 11       	cpse	r24, r1
     a22:	0b c0       	rjmp	.+22     	; 0xa3a <main+0x2c0>
					if(buttons[BTN_UP].buttonWasDown){
     a24:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
     a28:	88 23       	and	r24, r24
     a2a:	39 f0       	breq	.+14     	; 0xa3a <main+0x2c0>
						display = MENU;
     a2c:	81 e0       	ldi	r24, 0x01	; 1
     a2e:	80 93 ee 01 	sts	0x01EE, r24	; 0x8001ee <display>
						refresh = true;
     a32:	80 93 18 01 	sts	0x0118, r24	; 0x800118 <refresh>
						buttons[BTN_UP].buttonWasDown = false;
     a36:	10 92 02 01 	sts	0x0102, r1	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
					}
				}

                if(redrawCnt>=10){
     a3a:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <__data_end>
     a3e:	8a 30       	cpi	r24, 0x0A	; 10
     a40:	c0 f1       	brcs	.+112    	; 0xab2 <main+0x338>
				LCD_COMMAND(true , 0x80 | 0x00 );
     a42:	60 e8       	ldi	r22, 0x80	; 128
     a44:	81 e0       	ldi	r24, 0x01	; 1
     a46:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
				snprintf(buffer, 17, "t1 %.1f\xDF""C           ", t1);
     a4a:	0f 93       	push	r16
     a4c:	1f 93       	push	r17
     a4e:	ff 92       	push	r15
     a50:	ef 92       	push	r14
     a52:	8d e3       	ldi	r24, 0x3D	; 61
     a54:	91 e0       	ldi	r25, 0x01	; 1
     a56:	9f 93       	push	r25
     a58:	8f 93       	push	r24
     a5a:	1f 92       	push	r1
     a5c:	0f 2e       	mov	r0, r31
     a5e:	f1 e1       	ldi	r31, 0x11	; 17
     a60:	ff 2e       	mov	r15, r31
     a62:	f0 2d       	mov	r31, r0
     a64:	ff 92       	push	r15
     a66:	8e 01       	movw	r16, r28
     a68:	0f 5f       	subi	r16, 0xFF	; 255
     a6a:	1f 4f       	sbci	r17, 0xFF	; 255
     a6c:	1f 93       	push	r17
     a6e:	0f 93       	push	r16
     a70:	0e 94 b7 10 	call	0x216e	; 0x216e <snprintf>
				LCD_PrintString(buffer);
     a74:	c8 01       	movw	r24, r16
     a76:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
				
				LCD_COMMAND(true , 0x80 | 0x40 );
     a7a:	60 ec       	ldi	r22, 0xC0	; 192
     a7c:	81 e0       	ldi	r24, 0x01	; 1
     a7e:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
				snprintf(buffer, 17, "t2 %.1f\xDF""C           ", t2);
     a82:	df 92       	push	r13
     a84:	cf 92       	push	r12
     a86:	bf 92       	push	r11
     a88:	af 92       	push	r10
     a8a:	82 e5       	ldi	r24, 0x52	; 82
     a8c:	91 e0       	ldi	r25, 0x01	; 1
     a8e:	9f 93       	push	r25
     a90:	8f 93       	push	r24
     a92:	1f 92       	push	r1
     a94:	ff 92       	push	r15
     a96:	1f 93       	push	r17
     a98:	0f 93       	push	r16
     a9a:	0e 94 b7 10 	call	0x216e	; 0x216e <snprintf>
				//snprintf(buffer, 17, "%i%i%i%i%i%i ", buttons[0].state, buttons[1].state, buttons[2].state, buttons[3].state, buttons[4].state, buttons[5].state);
				LCD_PrintString(buffer);
     a9e:	c8 01       	movw	r24, r16
     aa0:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
				redrawCnt=0;
     aa4:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <__data_end>
     aa8:	0f b6       	in	r0, 0x3f	; 63
     aaa:	f8 94       	cli
     aac:	de bf       	out	0x3e, r29	; 62
     aae:	0f be       	out	0x3f, r0	; 63
     ab0:	cd bf       	out	0x3d, r28	; 61
				}
				redrawCnt++;
     ab2:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <__data_end>
     ab6:	8f 5f       	subi	r24, 0xFF	; 255
     ab8:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <__data_end>
				break;
     abc:	0e c1       	rjmp	.+540    	; 0xcda <main+0x560>
				
			case MENU:
			    if(menuTimeCnt==250){menuTimeCnt=0; menu=LATAUSRAJA; display=MONITORI;}else{menuTimeCnt++;}
     abe:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <menuTimeCnt>
     ac2:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <menuTimeCnt+0x1>
     ac6:	8a 3f       	cpi	r24, 0xFA	; 250
     ac8:	91 05       	cpc	r25, r1
     aca:	49 f4       	brne	.+18     	; 0xade <main+0x364>
     acc:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <menuTimeCnt+0x1>
     ad0:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <menuTimeCnt>
     ad4:	10 92 ed 01 	sts	0x01ED, r1	; 0x8001ed <menu>
     ad8:	10 92 ee 01 	sts	0x01EE, r1	; 0x8001ee <display>
     adc:	05 c0       	rjmp	.+10     	; 0xae8 <main+0x36e>
     ade:	01 96       	adiw	r24, 0x01	; 1
     ae0:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <menuTimeCnt+0x1>
     ae4:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <menuTimeCnt>
				switch(menu) {
     ae8:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <menu>
     aec:	82 30       	cpi	r24, 0x02	; 2
     aee:	a9 f1       	breq	.+106    	; 0xb5a <main+0x3e0>
     af0:	30 f4       	brcc	.+12     	; 0xafe <main+0x384>
     af2:	88 23       	and	r24, r24
     af4:	69 f0       	breq	.+26     	; 0xb10 <main+0x396>
     af6:	81 30       	cpi	r24, 0x01	; 1
     af8:	09 f4       	brne	.+2      	; 0xafc <main+0x382>
     afa:	5c c0       	rjmp	.+184    	; 0xbb4 <main+0x43a>
     afc:	ee c0       	rjmp	.+476    	; 0xcda <main+0x560>
     afe:	84 30       	cpi	r24, 0x04	; 4
     b00:	09 f4       	brne	.+2      	; 0xb04 <main+0x38a>
     b02:	a2 c0       	rjmp	.+324    	; 0xc48 <main+0x4ce>
     b04:	08 f4       	brcc	.+2      	; 0xb08 <main+0x38e>
     b06:	7b c0       	rjmp	.+246    	; 0xbfe <main+0x484>
     b08:	85 30       	cpi	r24, 0x05	; 5
     b0a:	09 f4       	brne	.+2      	; 0xb0e <main+0x394>
     b0c:	c2 c0       	rjmp	.+388    	; 0xc92 <main+0x518>
     b0e:	e5 c0       	rjmp	.+458    	; 0xcda <main+0x560>
					case LATAUSRAJA:

						MenuButtons();
     b10:	0e 94 40 01 	call	0x280	; 0x280 <MenuButtons>
						LCD_COMMAND(true , 0x80 | 0x00 );
     b14:	60 e8       	ldi	r22, 0x80	; 128
     b16:	81 e0       	ldi	r24, 0x01	; 1
     b18:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, "Latauspumppu");
     b1c:	8d e0       	ldi	r24, 0x0D	; 13
     b1e:	e7 e6       	ldi	r30, 0x67	; 103
     b20:	f1 e0       	ldi	r31, 0x01	; 1
     b22:	de 01       	movw	r26, r28
     b24:	11 96       	adiw	r26, 0x01	; 1
     b26:	01 90       	ld	r0, Z+
     b28:	0d 92       	st	X+, r0
     b2a:	8a 95       	dec	r24
     b2c:	e1 f7       	brne	.-8      	; 0xb26 <main+0x3ac>
						LCD_PrintString(buffer);
     b2e:	ce 01       	movw	r24, r28
     b30:	01 96       	adiw	r24, 0x01	; 1
     b32:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						
						LCD_COMMAND(true , 0x80 | 0x40 );
     b36:	60 ec       	ldi	r22, 0xC0	; 192
     b38:	81 e0       	ldi	r24, 0x01	; 1
     b3a:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, "t1 > 70\xDF""C");
     b3e:	8a e0       	ldi	r24, 0x0A	; 10
     b40:	e4 e7       	ldi	r30, 0x74	; 116
     b42:	f1 e0       	ldi	r31, 0x01	; 1
     b44:	de 01       	movw	r26, r28
     b46:	11 96       	adiw	r26, 0x01	; 1
     b48:	01 90       	ld	r0, Z+
     b4a:	0d 92       	st	X+, r0
     b4c:	8a 95       	dec	r24
     b4e:	e1 f7       	brne	.-8      	; 0xb48 <main+0x3ce>
						LCD_PrintString(buffer);
     b50:	ce 01       	movw	r24, r28
     b52:	01 96       	adiw	r24, 0x01	; 1
     b54:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>

						break;
     b58:	c0 c0       	rjmp	.+384    	; 0xcda <main+0x560>
					case PALUURAJA:
						MenuButtons();
     b5a:	0e 94 40 01 	call	0x280	; 0x280 <MenuButtons>
						LCD_COMMAND(true , 0x80 | 0x00 );
     b5e:	60 e8       	ldi	r22, 0x80	; 128
     b60:	81 e0       	ldi	r24, 0x01	; 1
     b62:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, "Paluulatauspumppu");
     b66:	8e e7       	ldi	r24, 0x7E	; 126
     b68:	91 e0       	ldi	r25, 0x01	; 1
     b6a:	9f 93       	push	r25
     b6c:	8f 93       	push	r24
     b6e:	1f 92       	push	r1
     b70:	81 e1       	ldi	r24, 0x11	; 17
     b72:	8f 93       	push	r24
     b74:	8e 01       	movw	r16, r28
     b76:	0f 5f       	subi	r16, 0xFF	; 255
     b78:	1f 4f       	sbci	r17, 0xFF	; 255
     b7a:	1f 93       	push	r17
     b7c:	0f 93       	push	r16
     b7e:	0e 94 b7 10 	call	0x216e	; 0x216e <snprintf>
						LCD_PrintString(buffer);
     b82:	c8 01       	movw	r24, r16
     b84:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						
						LCD_COMMAND(true , 0x80 | 0x40 );
     b88:	60 ec       	ldi	r22, 0xC0	; 192
     b8a:	81 e0       	ldi	r24, 0x01	; 1
     b8c:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, " t1 < t2 ");
     b90:	8a e0       	ldi	r24, 0x0A	; 10
     b92:	e0 e9       	ldi	r30, 0x90	; 144
     b94:	f1 e0       	ldi	r31, 0x01	; 1
     b96:	d8 01       	movw	r26, r16
     b98:	01 90       	ld	r0, Z+
     b9a:	0d 92       	st	X+, r0
     b9c:	8a 95       	dec	r24
     b9e:	e1 f7       	brne	.-8      	; 0xb98 <main+0x41e>
						LCD_PrintString(buffer);
     ba0:	c8 01       	movw	r24, r16
     ba2:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						break;
     ba6:	0f 90       	pop	r0
     ba8:	0f 90       	pop	r0
     baa:	0f 90       	pop	r0
     bac:	0f 90       	pop	r0
     bae:	0f 90       	pop	r0
     bb0:	0f 90       	pop	r0
     bb2:	93 c0       	rjmp	.+294    	; 0xcda <main+0x560>
					case TURVARAJA:
						MenuButtons();
     bb4:	0e 94 40 01 	call	0x280	; 0x280 <MenuButtons>
						LCD_COMMAND(true , 0x80 | 0x00 );
     bb8:	60 e8       	ldi	r22, 0x80	; 128
     bba:	81 e0       	ldi	r24, 0x01	; 1
     bbc:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, "Pumppu seis, jos");
     bc0:	81 e1       	ldi	r24, 0x11	; 17
     bc2:	e8 ec       	ldi	r30, 0xC8	; 200
     bc4:	f1 e0       	ldi	r31, 0x01	; 1
     bc6:	de 01       	movw	r26, r28
     bc8:	11 96       	adiw	r26, 0x01	; 1
     bca:	01 90       	ld	r0, Z+
     bcc:	0d 92       	st	X+, r0
     bce:	8a 95       	dec	r24
     bd0:	e1 f7       	brne	.-8      	; 0xbca <main+0x450>
						LCD_PrintString(buffer);
     bd2:	ce 01       	movw	r24, r28
     bd4:	01 96       	adiw	r24, 0x01	; 1
     bd6:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						
						LCD_COMMAND(true , 0x80 | 0x40 );
     bda:	60 ec       	ldi	r22, 0xC0	; 192
     bdc:	81 e0       	ldi	r24, 0x01	; 1
     bde:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, " t1 >= 90\xDF""C");
     be2:	8c e0       	ldi	r24, 0x0C	; 12
     be4:	ea e9       	ldi	r30, 0x9A	; 154
     be6:	f1 e0       	ldi	r31, 0x01	; 1
     be8:	de 01       	movw	r26, r28
     bea:	11 96       	adiw	r26, 0x01	; 1
     bec:	01 90       	ld	r0, Z+
     bee:	0d 92       	st	X+, r0
     bf0:	8a 95       	dec	r24
     bf2:	e1 f7       	brne	.-8      	; 0xbec <main+0x472>
						LCD_PrintString(buffer);
     bf4:	ce 01       	movw	r24, r28
     bf6:	01 96       	adiw	r24, 0x01	; 1
     bf8:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						break;
     bfc:	6e c0       	rjmp	.+220    	; 0xcda <main+0x560>
					case HYSTEREESI:
						MenuButtons();
     bfe:	0e 94 40 01 	call	0x280	; 0x280 <MenuButtons>
						LCD_COMMAND(true , 0x80 | 0x00 );
     c02:	60 e8       	ldi	r22, 0x80	; 128
     c04:	81 e0       	ldi	r24, 0x01	; 1
     c06:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, "Hystereesi");
     c0a:	8b e0       	ldi	r24, 0x0B	; 11
     c0c:	e6 ea       	ldi	r30, 0xA6	; 166
     c0e:	f1 e0       	ldi	r31, 0x01	; 1
     c10:	de 01       	movw	r26, r28
     c12:	11 96       	adiw	r26, 0x01	; 1
     c14:	01 90       	ld	r0, Z+
     c16:	0d 92       	st	X+, r0
     c18:	8a 95       	dec	r24
     c1a:	e1 f7       	brne	.-8      	; 0xc14 <main+0x49a>
						LCD_PrintString(buffer);
     c1c:	ce 01       	movw	r24, r28
     c1e:	01 96       	adiw	r24, 0x01	; 1
     c20:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						
						LCD_COMMAND(true , 0x80 | 0x40 );
     c24:	60 ec       	ldi	r22, 0xC0	; 192
     c26:	81 e0       	ldi	r24, 0x01	; 1
     c28:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, " 2\xDF""C");
     c2c:	85 e0       	ldi	r24, 0x05	; 5
     c2e:	e1 eb       	ldi	r30, 0xB1	; 177
     c30:	f1 e0       	ldi	r31, 0x01	; 1
     c32:	de 01       	movw	r26, r28
     c34:	11 96       	adiw	r26, 0x01	; 1
     c36:	01 90       	ld	r0, Z+
     c38:	0d 92       	st	X+, r0
     c3a:	8a 95       	dec	r24
     c3c:	e1 f7       	brne	.-8      	; 0xc36 <main+0x4bc>
						LCD_PrintString(buffer);
     c3e:	ce 01       	movw	r24, r28
     c40:	01 96       	adiw	r24, 0x01	; 1
     c42:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						break;
     c46:	49 c0       	rjmp	.+146    	; 0xcda <main+0x560>
					case AVCC:
						MenuButtons();
     c48:	0e 94 40 01 	call	0x280	; 0x280 <MenuButtons>
						LCD_COMMAND(true , 0x80 | 0x00 );
     c4c:	60 e8       	ldi	r22, 0x80	; 128
     c4e:	81 e0       	ldi	r24, 0x01	; 1
     c50:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, "AVCC");
     c54:	85 e0       	ldi	r24, 0x05	; 5
     c56:	e6 eb       	ldi	r30, 0xB6	; 182
     c58:	f1 e0       	ldi	r31, 0x01	; 1
     c5a:	de 01       	movw	r26, r28
     c5c:	11 96       	adiw	r26, 0x01	; 1
     c5e:	01 90       	ld	r0, Z+
     c60:	0d 92       	st	X+, r0
     c62:	8a 95       	dec	r24
     c64:	e1 f7       	brne	.-8      	; 0xc5e <main+0x4e4>
						LCD_PrintString(buffer);
     c66:	ce 01       	movw	r24, r28
     c68:	01 96       	adiw	r24, 0x01	; 1
     c6a:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						
						LCD_COMMAND(true , 0x80 | 0x40 );
     c6e:	60 ec       	ldi	r22, 0xC0	; 192
     c70:	81 e0       	ldi	r24, 0x01	; 1
     c72:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, " 5.0V");
     c76:	86 e0       	ldi	r24, 0x06	; 6
     c78:	eb eb       	ldi	r30, 0xBB	; 187
     c7a:	f1 e0       	ldi	r31, 0x01	; 1
     c7c:	de 01       	movw	r26, r28
     c7e:	11 96       	adiw	r26, 0x01	; 1
     c80:	01 90       	ld	r0, Z+
     c82:	0d 92       	st	X+, r0
     c84:	8a 95       	dec	r24
     c86:	e1 f7       	brne	.-8      	; 0xc80 <main+0x506>
						LCD_PrintString(buffer);
     c88:	ce 01       	movw	r24, r28
     c8a:	01 96       	adiw	r24, 0x01	; 1
     c8c:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
					break;
     c90:	24 c0       	rjmp	.+72     	; 0xcda <main+0x560>
					case KORJAUS:
						MenuButtons();
     c92:	0e 94 40 01 	call	0x280	; 0x280 <MenuButtons>
						LCD_COMMAND(true , 0x80 | 0x00 );
     c96:	60 e8       	ldi	r22, 0x80	; 128
     c98:	81 e0       	ldi	r24, 0x01	; 1
     c9a:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, "Lampotilakorjaus");
     c9e:	81 e1       	ldi	r24, 0x11	; 17
     ca0:	e9 ed       	ldi	r30, 0xD9	; 217
     ca2:	f1 e0       	ldi	r31, 0x01	; 1
     ca4:	de 01       	movw	r26, r28
     ca6:	11 96       	adiw	r26, 0x01	; 1
     ca8:	01 90       	ld	r0, Z+
     caa:	0d 92       	st	X+, r0
     cac:	8a 95       	dec	r24
     cae:	e1 f7       	brne	.-8      	; 0xca8 <main+0x52e>
						LCD_PrintString(buffer);
     cb0:	ce 01       	movw	r24, r28
     cb2:	01 96       	adiw	r24, 0x01	; 1
     cb4:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
						
						LCD_COMMAND(true , 0x80 | 0x40 );
     cb8:	60 ec       	ldi	r22, 0xC0	; 192
     cba:	81 e0       	ldi	r24, 0x01	; 1
     cbc:	0e 94 1b 03 	call	0x636	; 0x636 <LCD_COMMAND>
						snprintf(buffer, 17, " 0.0\xDF""C");
     cc0:	87 e0       	ldi	r24, 0x07	; 7
     cc2:	e1 ec       	ldi	r30, 0xC1	; 193
     cc4:	f1 e0       	ldi	r31, 0x01	; 1
     cc6:	de 01       	movw	r26, r28
     cc8:	11 96       	adiw	r26, 0x01	; 1
     cca:	01 90       	ld	r0, Z+
     ccc:	0d 92       	st	X+, r0
     cce:	8a 95       	dec	r24
     cd0:	e1 f7       	brne	.-8      	; 0xcca <main+0x550>
						LCD_PrintString(buffer);
     cd2:	ce 01       	movw	r24, r28
     cd4:	01 96       	adiw	r24, 0x01	; 1
     cd6:	0e 94 b0 03 	call	0x760	; 0x760 <LCD_PrintString>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cda:	bf e7       	ldi	r27, 0x7F	; 127
     cdc:	28 e3       	ldi	r18, 0x38	; 56
     cde:	81 e0       	ldi	r24, 0x01	; 1
     ce0:	b1 50       	subi	r27, 0x01	; 1
     ce2:	20 40       	sbci	r18, 0x00	; 0
     ce4:	80 40       	sbci	r24, 0x00	; 0
     ce6:	e1 f7       	brne	.-8      	; 0xce0 <main+0x566>
     ce8:	00 c0       	rjmp	.+0      	; 0xcea <main+0x570>
     cea:	00 00       	nop
     cec:	6a cd       	rjmp	.-1324   	; 0x7c2 <main+0x48>

00000cee <ADC_0_init>:
 *
 * \return Nothing
 */
void ADC_0_disable()
{
	ADCSRA &= ~(1 << ADEN);
     cee:	e4 e6       	ldi	r30, 0x64	; 100
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	80 81       	ld	r24, Z
     cf4:	8e 7f       	andi	r24, 0xFE	; 254
     cf6:	80 83       	st	Z, r24
     cf8:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fc07c>
     cfc:	81 e8       	ldi	r24, 0x81	; 129
     cfe:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
     d02:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7fc07b>
     d06:	80 e0       	ldi	r24, 0x00	; 0
     d08:	08 95       	ret

00000d0a <ADC_0_start_conversion>:
 *
 * \return Nothing
 */
void ADC_0_start_conversion(adc_0_channel_t channel)
{
	ADMUX &= ~0x0f;
     d0a:	ec e7       	ldi	r30, 0x7C	; 124
     d0c:	f0 e0       	ldi	r31, 0x00	; 0
     d0e:	90 81       	ld	r25, Z
     d10:	90 7f       	andi	r25, 0xF0	; 240
     d12:	90 83       	st	Z, r25
	ADMUX |= channel;
     d14:	90 81       	ld	r25, Z
     d16:	89 2b       	or	r24, r25
     d18:	80 83       	st	Z, r24
	ADCSRA |= (1 << ADSC);
     d1a:	ea e7       	ldi	r30, 0x7A	; 122
     d1c:	f0 e0       	ldi	r31, 0x00	; 0
     d1e:	80 81       	ld	r24, Z
     d20:	80 64       	ori	r24, 0x40	; 64
     d22:	80 83       	st	Z, r24
     d24:	08 95       	ret

00000d26 <ADC_0_is_conversion_done>:
 * \retval true The ADC conversion is done
 * \retval false The ADC converison is not done
 */
bool ADC_0_is_conversion_done()
{
	return ((ADCSRA & (1 << ADIF)));
     d26:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fc07a>
}
     d2a:	82 95       	swap	r24
     d2c:	81 70       	andi	r24, 0x01	; 1
     d2e:	08 95       	ret

00000d30 <ADC_0_get_conversion_result>:
 *
 * \return Conversion result read from the ADC_0 ADC module
 */
adc_result_t ADC_0_get_conversion_result(void)
{
	return (ADCL | ADCH << 8);
     d30:	20 91 78 00 	lds	r18, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7fc078>
     d34:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7fc079>
     d38:	90 e0       	ldi	r25, 0x00	; 0
     d3a:	98 2f       	mov	r25, r24
     d3c:	88 27       	eor	r24, r24
}
     d3e:	82 2b       	or	r24, r18
     d40:	08 95       	ret

00000d42 <ADC_0_get_conversion>:
 */
adc_result_t ADC_0_get_conversion(adc_0_channel_t channel)
{
	adc_result_t res;

	ADC_0_start_conversion(channel);
     d42:	0e 94 85 06 	call	0xd0a	; 0xd0a <ADC_0_start_conversion>
	while (!ADC_0_is_conversion_done())
     d46:	0e 94 93 06 	call	0xd26	; 0xd26 <ADC_0_is_conversion_done>
     d4a:	88 23       	and	r24, r24
     d4c:	e1 f3       	breq	.-8      	; 0xd46 <ADC_0_get_conversion+0x4>
		;
	res = ADC_0_get_conversion_result();
     d4e:	0e 94 98 06 	call	0xd30	; 0xd30 <ADC_0_get_conversion_result>
	ADCSRA |= (1 << ADIF);
     d52:	ea e7       	ldi	r30, 0x7A	; 122
     d54:	f0 e0       	ldi	r31, 0x00	; 0
     d56:	20 81       	ld	r18, Z
     d58:	20 61       	ori	r18, 0x10	; 16
     d5a:	20 83       	st	Z, r18
	return res;
}
     d5c:	08 95       	ret

00000d5e <I2C_Init>:
#define SDA_INPUT()  DDRD &= ~(1 << SDA)

void I2C_Init() {
	// Set SDA and SCL as outputs and set them high (idle state)
    // Configure SDA and SCL (PD3 and PD4) as outputs
    DDRD |= (1 << SDA) | (1 << SCL);
     d5e:	8a b1       	in	r24, 0x0a	; 10
     d60:	88 61       	ori	r24, 0x18	; 24
     d62:	8a b9       	out	0x0a, r24	; 10

    // Set SDA and SCL high initially (idle state)
    SDA_HIGH();
     d64:	8b b1       	in	r24, 0x0b	; 11
     d66:	80 61       	ori	r24, 0x10	; 16
     d68:	8b b9       	out	0x0b, r24	; 11
    SCL_HIGH();
     d6a:	8b b1       	in	r24, 0x0b	; 11
     d6c:	88 60       	ori	r24, 0x08	; 8
     d6e:	8b b9       	out	0x0b, r24	; 11
    
    // Enable pull-up resistors if needed
    PORTD |= (1 << SDA) | (1 << SCL);
     d70:	8b b1       	in	r24, 0x0b	; 11
     d72:	88 61       	ori	r24, 0x18	; 24
     d74:	8b b9       	out	0x0b, r24	; 11
     d76:	08 95       	ret

00000d78 <I2C_Start>:
}

void I2C_Start() {
	SDA_OUTPUT();  // Ensure SDA is set as output
     d78:	8a b1       	in	r24, 0x0a	; 10
     d7a:	80 61       	ori	r24, 0x10	; 16
     d7c:	8a b9       	out	0x0a, r24	; 10
	SDA_HIGH();
     d7e:	8b b1       	in	r24, 0x0b	; 11
     d80:	80 61       	ori	r24, 0x10	; 16
     d82:	8b b9       	out	0x0b, r24	; 11
	SCL_HIGH();
     d84:	8b b1       	in	r24, 0x0b	; 11
     d86:	88 60       	ori	r24, 0x08	; 8
     d88:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d8a:	83 e0       	ldi	r24, 0x03	; 3
     d8c:	8a 95       	dec	r24
     d8e:	f1 f7       	brne	.-4      	; 0xd8c <I2C_Start+0x14>
     d90:	00 00       	nop
	_delay_us(10);

	SDA_LOW();     // Pull SDA low while SCL is high to signal START
     d92:	8b b1       	in	r24, 0x0b	; 11
     d94:	8f 7e       	andi	r24, 0xEF	; 239
     d96:	8b b9       	out	0x0b, r24	; 11
     d98:	83 e0       	ldi	r24, 0x03	; 3
     d9a:	8a 95       	dec	r24
     d9c:	f1 f7       	brne	.-4      	; 0xd9a <I2C_Start+0x22>
     d9e:	00 00       	nop
	_delay_us(10);

	SCL_LOW();     // Pull SCL low to prepare for data transmission
     da0:	8b b1       	in	r24, 0x0b	; 11
     da2:	87 7f       	andi	r24, 0xF7	; 247
     da4:	8b b9       	out	0x0b, r24	; 11
     da6:	08 95       	ret

00000da8 <I2C_Stop>:
}

void I2C_Stop() {
	SDA_OUTPUT();  // Ensure SDA is set as output
     da8:	8a b1       	in	r24, 0x0a	; 10
     daa:	80 61       	ori	r24, 0x10	; 16
     dac:	8a b9       	out	0x0a, r24	; 10
	SCL_LOW();     // Pull SCL low first
     dae:	8b b1       	in	r24, 0x0b	; 11
     db0:	87 7f       	andi	r24, 0xF7	; 247
     db2:	8b b9       	out	0x0b, r24	; 11

	SDA_LOW();     // Pull SDA low
     db4:	8b b1       	in	r24, 0x0b	; 11
     db6:	8f 7e       	andi	r24, 0xEF	; 239
     db8:	8b b9       	out	0x0b, r24	; 11
     dba:	83 e0       	ldi	r24, 0x03	; 3
     dbc:	8a 95       	dec	r24
     dbe:	f1 f7       	brne	.-4      	; 0xdbc <I2C_Stop+0x14>
     dc0:	00 00       	nop
	_delay_us(10);

	SCL_HIGH();    // Pull SCL high
     dc2:	8b b1       	in	r24, 0x0b	; 11
     dc4:	88 60       	ori	r24, 0x08	; 8
     dc6:	8b b9       	out	0x0b, r24	; 11
     dc8:	83 e0       	ldi	r24, 0x03	; 3
     dca:	8a 95       	dec	r24
     dcc:	f1 f7       	brne	.-4      	; 0xdca <I2C_Stop+0x22>
     dce:	00 00       	nop
	_delay_us(10);

	SDA_HIGH();    // Pull SDA high while SCL is high to signal STOP
     dd0:	8b b1       	in	r24, 0x0b	; 11
     dd2:	80 61       	ori	r24, 0x10	; 16
     dd4:	8b b9       	out	0x0b, r24	; 11
     dd6:	08 95       	ret

00000dd8 <I2C_Write>:
}

uint8_t I2C_Write(uint8_t data) {
	for (uint8_t i = 0; i < 8; i++) {
     dd8:	20 e0       	ldi	r18, 0x00	; 0
     dda:	19 c0       	rjmp	.+50     	; 0xe0e <I2C_Write+0x36>
		if (data & 0x80) {
     ddc:	88 23       	and	r24, r24
     dde:	24 f4       	brge	.+8      	; 0xde8 <I2C_Write+0x10>
			SDA_HIGH();
     de0:	9b b1       	in	r25, 0x0b	; 11
     de2:	90 61       	ori	r25, 0x10	; 16
     de4:	9b b9       	out	0x0b, r25	; 11
     de6:	03 c0       	rjmp	.+6      	; 0xdee <I2C_Write+0x16>
			} else {
			SDA_LOW();
     de8:	9b b1       	in	r25, 0x0b	; 11
     dea:	9f 7e       	andi	r25, 0xEF	; 239
     dec:	9b b9       	out	0x0b, r25	; 11
		}
		data <<= 1;
     dee:	88 0f       	add	r24, r24

		SCL_HIGH();  // Pulse the clock to signal the data bit
     df0:	9b b1       	in	r25, 0x0b	; 11
     df2:	98 60       	ori	r25, 0x08	; 8
     df4:	9b b9       	out	0x0b, r25	; 11
     df6:	93 e0       	ldi	r25, 0x03	; 3
     df8:	9a 95       	dec	r25
     dfa:	f1 f7       	brne	.-4      	; 0xdf8 <I2C_Write+0x20>
     dfc:	00 00       	nop
		_delay_us(10);
		SCL_LOW();
     dfe:	9b b1       	in	r25, 0x0b	; 11
     e00:	97 7f       	andi	r25, 0xF7	; 247
     e02:	9b b9       	out	0x0b, r25	; 11
     e04:	93 e0       	ldi	r25, 0x03	; 3
     e06:	9a 95       	dec	r25
     e08:	f1 f7       	brne	.-4      	; 0xe06 <I2C_Write+0x2e>
     e0a:	00 00       	nop

	SDA_HIGH();    // Pull SDA high while SCL is high to signal STOP
}

uint8_t I2C_Write(uint8_t data) {
	for (uint8_t i = 0; i < 8; i++) {
     e0c:	2f 5f       	subi	r18, 0xFF	; 255
     e0e:	28 30       	cpi	r18, 0x08	; 8
     e10:	28 f3       	brcs	.-54     	; 0xddc <I2C_Write+0x4>
		SCL_LOW();
		_delay_us(10);
	}

	// Check for acknowledgment
	SDA_INPUT(); // Release SDA to be an input (pull-up)
     e12:	8a b1       	in	r24, 0x0a	; 10
     e14:	8f 7e       	andi	r24, 0xEF	; 239
     e16:	8a b9       	out	0x0a, r24	; 10
	SCL_HIGH();
     e18:	8b b1       	in	r24, 0x0b	; 11
     e1a:	88 60       	ori	r24, 0x08	; 8
     e1c:	8b b9       	out	0x0b, r24	; 11
     e1e:	83 e0       	ldi	r24, 0x03	; 3
     e20:	8a 95       	dec	r24
     e22:	f1 f7       	brne	.-4      	; 0xe20 <I2C_Write+0x48>
     e24:	00 00       	nop
	_delay_us(10);
	uint8_t ack = SDA_READ() == 0;  // ACK is 0
     e26:	89 b1       	in	r24, 0x09	; 9
     e28:	82 95       	swap	r24
     e2a:	8f 70       	andi	r24, 0x0F	; 15
     e2c:	91 e0       	ldi	r25, 0x01	; 1
     e2e:	89 27       	eor	r24, r25
	SCL_LOW();
     e30:	9b b1       	in	r25, 0x0b	; 11
     e32:	97 7f       	andi	r25, 0xF7	; 247
     e34:	9b b9       	out	0x0b, r25	; 11
	SDA_OUTPUT();
     e36:	9a b1       	in	r25, 0x0a	; 10
     e38:	90 61       	ori	r25, 0x10	; 16
     e3a:	9a b9       	out	0x0a, r25	; 10

	return ack;
}
     e3c:	81 70       	andi	r24, 0x01	; 1
     e3e:	08 95       	ret

00000e40 <ADC_0_initialization>:
	    // <id> pad_initial_level
	    // <false"> Low
	    // <true"> High
	    false);

	USART_0_init();
     e40:	0e 94 77 06 	call	0xcee	; 0xcee <ADC_0_init>
     e44:	08 95       	ret

00000e46 <SPI_0_initialization>:
     e46:	84 b1       	in	r24, 0x04	; 4
     e48:	8f 7e       	andi	r24, 0xEF	; 239
     e4a:	84 b9       	out	0x04, r24	; 4
     e4c:	85 b1       	in	r24, 0x05	; 5
     e4e:	8f 7e       	andi	r24, 0xEF	; 239
     e50:	85 b9       	out	0x05, r24	; 5
     e52:	84 b1       	in	r24, 0x04	; 4
     e54:	88 60       	ori	r24, 0x08	; 8
     e56:	84 b9       	out	0x04, r24	; 4
     e58:	85 b1       	in	r24, 0x05	; 5
     e5a:	87 7f       	andi	r24, 0xF7	; 247
     e5c:	85 b9       	out	0x05, r24	; 5
     e5e:	84 b1       	in	r24, 0x04	; 4
     e60:	80 62       	ori	r24, 0x20	; 32
     e62:	84 b9       	out	0x04, r24	; 4
     e64:	85 b1       	in	r24, 0x05	; 5
     e66:	8f 7d       	andi	r24, 0xDF	; 223
     e68:	85 b9       	out	0x05, r24	; 5
     e6a:	08 95       	ret

00000e6c <system_init>:
{
	/* On AVR devices all peripherals are enabled from power on reset, this
	 * disables all peripherals to save power. Driver shall enable
	 * peripheral if used */

	PRR = (1 << PRSPI) | (1 << PRTIM2) | (1 << PRTIM0) | (1 << PRTIM1) | (1 << PRTWI) | (1 << PRUSART0) | (1 << PRADC);
     e6c:	8f ee       	ldi	r24, 0xEF	; 239
     e6e:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7fc064>
		break;
	case PORT_DIR_OUT:
		DDRB |= mask;
		break;
	case PORT_DIR_OFF:
		DDRB &= ~mask;
     e72:	84 b1       	in	r24, 0x04	; 4
     e74:	14 b8       	out	0x04, r1	; 4

		PORTB |= mask;
     e76:	85 b1       	in	r24, 0x05	; 5
     e78:	9f ef       	ldi	r25, 0xFF	; 255
     e7a:	95 b9       	out	0x05, r25	; 5
		break;
	case PORT_DIR_OUT:
		DDRC |= mask;
		break;
	case PORT_DIR_OFF:
		DDRC &= ~mask;
     e7c:	87 b1       	in	r24, 0x07	; 7
     e7e:	80 78       	andi	r24, 0x80	; 128
     e80:	87 b9       	out	0x07, r24	; 7

		PORTC |= mask;
     e82:	88 b1       	in	r24, 0x08	; 8
     e84:	8f 67       	ori	r24, 0x7F	; 127
     e86:	88 b9       	out	0x08, r24	; 8
		break;
	case PORT_DIR_OUT:
		DDRD |= mask;
		break;
	case PORT_DIR_OFF:
		DDRD &= ~mask;
     e88:	8a b1       	in	r24, 0x0a	; 10
     e8a:	1a b8       	out	0x0a, r1	; 10

		PORTD |= mask;
     e8c:	8b b1       	in	r24, 0x0b	; 11
     e8e:	9b b9       	out	0x0b, r25	; 11
		break;
	case PORT_DIR_OUT:
		DDRE |= mask;
		break;
	case PORT_DIR_OFF:
		DDRE &= ~mask;
     e90:	8d b1       	in	r24, 0x0d	; 13
     e92:	80 7f       	andi	r24, 0xF0	; 240
     e94:	8d b9       	out	0x0d, r24	; 13

		PORTE |= mask;
     e96:	8e b1       	in	r24, 0x0e	; 14
     e98:	8f 60       	ori	r24, 0x0F	; 15
     e9a:	8e b9       	out	0x0e, r24	; 14
 * \return Initialization status.
 */
static inline int8_t sysctrl_init()
{
	/* Set up system clock prescaler according to configuration */
	protected_write_io((void *)&CLKPR, 1 << CLKPCE, (0 << CLKPS3) | (0 << CLKPS2) | (0 << CLKPS1) | (0 << CLKPS0));
     e9c:	40 e0       	ldi	r20, 0x00	; 0
     e9e:	60 e8       	ldi	r22, 0x80	; 128
     ea0:	81 e6       	ldi	r24, 0x61	; 97
     ea2:	90 e0       	ldi	r25, 0x00	; 0
     ea4:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <protected_write_io>

	SMCR = (0 << SM2) | (0 << SM1) | (0 << SM0) | // Idle
     ea8:	13 be       	out	0x33, r1	; 51
	       (0 << SE);

	MCUCR = (0 << PUD);
     eaa:	15 be       	out	0x35, r1	; 53
{
	mcu_init();

	sysctrl_init();

	FLASH_0_init();
     eac:	0e 94 7a 09 	call	0x12f4	; 0x12f4 <FLASH_0_init>

	ADC_0_initialization();
     eb0:	0e 94 20 07 	call	0xe40	; 0xe40 <ADC_0_initialization>

	SPI_0_initialization();
     eb4:	0e 94 23 07 	call	0xe46	; 0xe46 <SPI_0_initialization>
     eb8:	08 95       	ret

00000eba <I2C_0_do_I2C_RESET>:
 * \brief Identical to I2C_0_master_operation(false);
 */
i2c_error_t I2C_0_master_write(void)
{
	return I2C_0_master_operation(false);
}
     eba:	80 e9       	ldi	r24, 0x90	; 144
     ebc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7fc0bc>
     ec0:	e0 ef       	ldi	r30, 0xF0	; 240
     ec2:	f1 e0       	ldi	r31, 0x01	; 1
     ec4:	80 81       	ld	r24, Z
     ec6:	8e 7f       	andi	r24, 0xFE	; 254
     ec8:	80 83       	st	Z, r24
     eca:	13 86       	std	Z+11, r1	; 0x0b
     ecc:	8e e0       	ldi	r24, 0x0E	; 14
     ece:	08 95       	ret

00000ed0 <I2C_0_do_I2C_IDLE>:
     ed0:	e0 ef       	ldi	r30, 0xF0	; 240
     ed2:	f1 e0       	ldi	r31, 0x01	; 1
     ed4:	80 81       	ld	r24, Z
     ed6:	8e 7f       	andi	r24, 0xFE	; 254
     ed8:	80 83       	st	Z, r24
     eda:	13 86       	std	Z+11, r1	; 0x0b
     edc:	80 e0       	ldi	r24, 0x00	; 0
     ede:	08 95       	ret

00000ee0 <I2C_0_do_I2C_SEND_RESTART_READ>:
     ee0:	ec eb       	ldi	r30, 0xBC	; 188
     ee2:	f0 e0       	ldi	r31, 0x00	; 0
     ee4:	80 81       	ld	r24, Z
     ee6:	80 6a       	ori	r24, 0xA0	; 160
     ee8:	80 83       	st	Z, r24
     eea:	81 e0       	ldi	r24, 0x01	; 1
     eec:	08 95       	ret

00000eee <I2C_0_do_I2C_SEND_RESTART_WRITE>:
     eee:	ec eb       	ldi	r30, 0xBC	; 188
     ef0:	f0 e0       	ldi	r31, 0x00	; 0
     ef2:	80 81       	ld	r24, Z
     ef4:	80 6a       	ori	r24, 0xA0	; 160
     ef6:	80 83       	st	Z, r24
     ef8:	82 e0       	ldi	r24, 0x02	; 2
     efa:	08 95       	ret

00000efc <I2C_0_do_I2C_SEND_RESTART>:
     efc:	ec eb       	ldi	r30, 0xBC	; 188
     efe:	f0 e0       	ldi	r31, 0x00	; 0
     f00:	80 81       	ld	r24, Z
     f02:	80 6a       	ori	r24, 0xA0	; 160
     f04:	80 83       	st	Z, r24
     f06:	81 e0       	ldi	r24, 0x01	; 1
     f08:	08 95       	ret

00000f0a <I2C_0_do_I2C_SEND_STOP>:
     f0a:	ec eb       	ldi	r30, 0xBC	; 188
     f0c:	f0 e0       	ldi	r31, 0x00	; 0
     f0e:	80 81       	ld	r24, Z
     f10:	80 69       	ori	r24, 0x90	; 144
     f12:	80 83       	st	Z, r24
     f14:	0e 94 68 07 	call	0xed0	; 0xed0 <I2C_0_do_I2C_IDLE>
     f18:	08 95       	ret

00000f1a <I2C_0_do_I2C_DO_ADDRESS_NACK>:
     f1a:	a0 ef       	ldi	r26, 0xF0	; 240
     f1c:	b1 e0       	ldi	r27, 0x01	; 1
     f1e:	82 e0       	ldi	r24, 0x02	; 2
     f20:	1b 96       	adiw	r26, 0x0b	; 11
     f22:	8c 93       	st	X, r24
     f24:	1b 97       	sbiw	r26, 0x0b	; 11
     f26:	50 96       	adiw	r26, 0x10	; 16
     f28:	ed 91       	ld	r30, X+
     f2a:	fc 91       	ld	r31, X
     f2c:	51 97       	sbiw	r26, 0x11	; 17
     f2e:	5c 96       	adiw	r26, 0x1c	; 28
     f30:	8d 91       	ld	r24, X+
     f32:	9c 91       	ld	r25, X
     f34:	5d 97       	sbiw	r26, 0x1d	; 29
     f36:	09 95       	icall
     f38:	82 30       	cpi	r24, 0x02	; 2
     f3a:	19 f0       	breq	.+6      	; 0xf42 <I2C_0_do_I2C_DO_ADDRESS_NACK+0x28>
     f3c:	83 30       	cpi	r24, 0x03	; 3
     f3e:	21 f0       	breq	.+8      	; 0xf48 <I2C_0_do_I2C_DO_ADDRESS_NACK+0x2e>
     f40:	06 c0       	rjmp	.+12     	; 0xf4e <I2C_0_do_I2C_DO_ADDRESS_NACK+0x34>
     f42:	0e 94 70 07 	call	0xee0	; 0xee0 <I2C_0_do_I2C_SEND_RESTART_READ>
     f46:	08 95       	ret
     f48:	0e 94 77 07 	call	0xeee	; 0xeee <I2C_0_do_I2C_SEND_RESTART_WRITE>
     f4c:	08 95       	ret
     f4e:	0e 94 85 07 	call	0xf0a	; 0xf0a <I2C_0_do_I2C_SEND_STOP>
     f52:	08 95       	ret

00000f54 <I2C_0_do_I2C_SEND_ADR_READ>:
     f54:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
     f58:	88 7f       	andi	r24, 0xF8	; 248
     f5a:	88 30       	cpi	r24, 0x08	; 8
     f5c:	41 f0       	breq	.+16     	; 0xf6e <I2C_0_do_I2C_SEND_ADR_READ+0x1a>
     f5e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
     f62:	88 7f       	andi	r24, 0xF8	; 248
     f64:	80 31       	cpi	r24, 0x10	; 16
     f66:	19 f0       	breq	.+6      	; 0xf6e <I2C_0_do_I2C_SEND_ADR_READ+0x1a>
     f68:	0e 94 5d 07 	call	0xeba	; 0xeba <I2C_0_do_I2C_RESET>
     f6c:	08 95       	ret
     f6e:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <I2C_0_status+0x1>
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	88 0f       	add	r24, r24
     f76:	99 1f       	adc	r25, r25
     f78:	81 60       	ori	r24, 0x01	; 1
     f7a:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7fc0bb>
     f7e:	ec eb       	ldi	r30, 0xBC	; 188
     f80:	f0 e0       	ldi	r31, 0x00	; 0
     f82:	80 81       	ld	r24, Z
     f84:	8f 7d       	andi	r24, 0xDF	; 223
     f86:	80 83       	st	Z, r24
     f88:	80 81       	ld	r24, Z
     f8a:	80 68       	ori	r24, 0x80	; 128
     f8c:	80 83       	st	Z, r24
     f8e:	8a e0       	ldi	r24, 0x0A	; 10
     f90:	08 95       	ret

00000f92 <I2C_0_do_I2C_SEND_ADR_WRITE>:
     f92:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
     f96:	88 7f       	andi	r24, 0xF8	; 248
     f98:	88 30       	cpi	r24, 0x08	; 8
     f9a:	41 f0       	breq	.+16     	; 0xfac <I2C_0_do_I2C_SEND_ADR_WRITE+0x1a>
     f9c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
     fa0:	88 7f       	andi	r24, 0xF8	; 248
     fa2:	80 31       	cpi	r24, 0x10	; 16
     fa4:	19 f0       	breq	.+6      	; 0xfac <I2C_0_do_I2C_SEND_ADR_WRITE+0x1a>
     fa6:	0e 94 5d 07 	call	0xeba	; 0xeba <I2C_0_do_I2C_RESET>
     faa:	08 95       	ret
     fac:	80 91 f1 01 	lds	r24, 0x01F1	; 0x8001f1 <I2C_0_status+0x1>
     fb0:	88 0f       	add	r24, r24
     fb2:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7fc0bb>
     fb6:	ec eb       	ldi	r30, 0xBC	; 188
     fb8:	f0 e0       	ldi	r31, 0x00	; 0
     fba:	80 81       	ld	r24, Z
     fbc:	8f 7d       	andi	r24, 0xDF	; 223
     fbe:	80 83       	st	Z, r24
     fc0:	80 81       	ld	r24, Z
     fc2:	80 68       	ori	r24, 0x80	; 128
     fc4:	80 83       	st	Z, r24
     fc6:	8b e0       	ldi	r24, 0x0B	; 11
     fc8:	08 95       	ret

00000fca <I2C_0_do_I2C_RX_DO_ACK>:
     fca:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
     fce:	88 7f       	andi	r24, 0xF8	; 248
     fd0:	80 34       	cpi	r24, 0x40	; 64
     fd2:	19 f0       	breq	.+6      	; 0xfda <I2C_0_do_I2C_RX_DO_ACK+0x10>
     fd4:	0e 94 8d 07 	call	0xf1a	; 0xf1a <I2C_0_do_I2C_DO_ADDRESS_NACK>
     fd8:	08 95       	ret
     fda:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <I2C_0_status+0x4>
     fde:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <I2C_0_status+0x5>
     fe2:	01 97       	sbiw	r24, 0x01	; 1
     fe4:	39 f4       	brne	.+14     	; 0xff4 <I2C_0_do_I2C_RX_DO_ACK+0x2a>
     fe6:	ec eb       	ldi	r30, 0xBC	; 188
     fe8:	f0 e0       	ldi	r31, 0x00	; 0
     fea:	80 81       	ld	r24, Z
     fec:	8f 7b       	andi	r24, 0xBF	; 191
     fee:	80 83       	st	Z, r24
     ff0:	84 e0       	ldi	r24, 0x04	; 4
     ff2:	08 95       	ret
     ff4:	ec eb       	ldi	r30, 0xBC	; 188
     ff6:	f0 e0       	ldi	r31, 0x00	; 0
     ff8:	80 81       	ld	r24, Z
     ffa:	80 64       	ori	r24, 0x40	; 64
     ffc:	80 83       	st	Z, r24
     ffe:	84 e0       	ldi	r24, 0x04	; 4
    1000:	08 95       	ret

00001002 <I2C_0_do_I2C_TX_DO_ACK>:
    1002:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    1006:	88 7f       	andi	r24, 0xF8	; 248
    1008:	88 31       	cpi	r24, 0x18	; 24
    100a:	19 f0       	breq	.+6      	; 0x1012 <I2C_0_do_I2C_TX_DO_ACK+0x10>
    100c:	0e 94 8d 07 	call	0xf1a	; 0xf1a <I2C_0_do_I2C_DO_ADDRESS_NACK>
    1010:	08 95       	ret
    1012:	83 e0       	ldi	r24, 0x03	; 3
    1014:	08 95       	ret

00001016 <I2C_0_do_I2C_DO_NACK_STOP>:
    1016:	ec eb       	ldi	r30, 0xBC	; 188
    1018:	f0 e0       	ldi	r31, 0x00	; 0
    101a:	80 81       	ld	r24, Z
    101c:	80 69       	ori	r24, 0x90	; 144
    101e:	80 83       	st	Z, r24
    1020:	0e 94 68 07 	call	0xed0	; 0xed0 <I2C_0_do_I2C_IDLE>
    1024:	08 95       	ret

00001026 <I2C_0_do_I2C_DO_NACK_RESTART>:
    1026:	ec eb       	ldi	r30, 0xBC	; 188
    1028:	f0 e0       	ldi	r31, 0x00	; 0
    102a:	80 81       	ld	r24, Z
    102c:	80 6a       	ori	r24, 0xA0	; 160
    102e:	80 83       	st	Z, r24
    1030:	88 e0       	ldi	r24, 0x08	; 8
    1032:	08 95       	ret

00001034 <I2C_0_do_I2C_TX>:
    1034:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    1038:	88 7f       	andi	r24, 0xF8	; 248
    103a:	80 33       	cpi	r24, 0x30	; 48
    103c:	51 f0       	breq	.+20     	; 0x1052 <I2C_0_do_I2C_TX+0x1e>
    103e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    1042:	88 7f       	andi	r24, 0xF8	; 248
    1044:	88 34       	cpi	r24, 0x48	; 72
    1046:	29 f0       	breq	.+10     	; 0x1052 <I2C_0_do_I2C_TX+0x1e>
    1048:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    104c:	88 7f       	andi	r24, 0xF8	; 248
    104e:	80 32       	cpi	r24, 0x20	; 32
    1050:	c9 f4       	brne	.+50     	; 0x1084 <I2C_0_do_I2C_TX+0x50>
    1052:	a0 ef       	ldi	r26, 0xF0	; 240
    1054:	b1 e0       	ldi	r27, 0x01	; 1
    1056:	52 96       	adiw	r26, 0x12	; 18
    1058:	ed 91       	ld	r30, X+
    105a:	fc 91       	ld	r31, X
    105c:	53 97       	sbiw	r26, 0x13	; 19
    105e:	5e 96       	adiw	r26, 0x1e	; 30
    1060:	8d 91       	ld	r24, X+
    1062:	9c 91       	ld	r25, X
    1064:	5f 97       	sbiw	r26, 0x1f	; 31
    1066:	09 95       	icall
    1068:	82 30       	cpi	r24, 0x02	; 2
    106a:	19 f0       	breq	.+6      	; 0x1072 <I2C_0_do_I2C_TX+0x3e>
    106c:	83 30       	cpi	r24, 0x03	; 3
    106e:	21 f0       	breq	.+8      	; 0x1078 <I2C_0_do_I2C_TX+0x44>
    1070:	06 c0       	rjmp	.+12     	; 0x107e <I2C_0_do_I2C_TX+0x4a>
    1072:	0e 94 70 07 	call	0xee0	; 0xee0 <I2C_0_do_I2C_SEND_RESTART_READ>
    1076:	08 95       	ret
    1078:	0e 94 77 07 	call	0xeee	; 0xeee <I2C_0_do_I2C_SEND_RESTART_WRITE>
    107c:	08 95       	ret
    107e:	0e 94 85 07 	call	0xf0a	; 0xf0a <I2C_0_do_I2C_SEND_STOP>
    1082:	08 95       	ret
    1084:	e0 ef       	ldi	r30, 0xF0	; 240
    1086:	f1 e0       	ldi	r31, 0x01	; 1
    1088:	a2 81       	ldd	r26, Z+2	; 0x02
    108a:	b3 81       	ldd	r27, Z+3	; 0x03
    108c:	cd 01       	movw	r24, r26
    108e:	01 96       	adiw	r24, 0x01	; 1
    1090:	93 83       	std	Z+3, r25	; 0x03
    1092:	82 83       	std	Z+2, r24	; 0x02
    1094:	8c 91       	ld	r24, X
    1096:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7fc0bb>
    109a:	ac eb       	ldi	r26, 0xBC	; 188
    109c:	b0 e0       	ldi	r27, 0x00	; 0
    109e:	8c 91       	ld	r24, X
    10a0:	80 68       	ori	r24, 0x80	; 128
    10a2:	8c 93       	st	X, r24
    10a4:	84 81       	ldd	r24, Z+4	; 0x04
    10a6:	95 81       	ldd	r25, Z+5	; 0x05
    10a8:	01 97       	sbiw	r24, 0x01	; 1
    10aa:	95 83       	std	Z+5, r25	; 0x05
    10ac:	84 83       	std	Z+4, r24	; 0x04
    10ae:	89 2b       	or	r24, r25
    10b0:	11 f0       	breq	.+4      	; 0x10b6 <I2C_0_do_I2C_TX+0x82>
    10b2:	83 e0       	ldi	r24, 0x03	; 3
    10b4:	08 95       	ret
    10b6:	85 e0       	ldi	r24, 0x05	; 5
    10b8:	08 95       	ret

000010ba <I2C_0_do_I2C_RX>:
    10ba:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    10be:	88 7f       	andi	r24, 0xF8	; 248
    10c0:	80 35       	cpi	r24, 0x50	; 80
    10c2:	41 f0       	breq	.+16     	; 0x10d4 <I2C_0_do_I2C_RX+0x1a>
    10c4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    10c8:	88 7f       	andi	r24, 0xF8	; 248
    10ca:	88 35       	cpi	r24, 0x58	; 88
    10cc:	19 f0       	breq	.+6      	; 0x10d4 <I2C_0_do_I2C_RX+0x1a>
    10ce:	0e 94 5d 07 	call	0xeba	; 0xeba <I2C_0_do_I2C_RESET>
    10d2:	08 95       	ret
    10d4:	80 91 f4 01 	lds	r24, 0x01F4	; 0x8001f4 <I2C_0_status+0x4>
    10d8:	90 91 f5 01 	lds	r25, 0x01F5	; 0x8001f5 <I2C_0_status+0x5>
    10dc:	02 97       	sbiw	r24, 0x02	; 2
    10de:	31 f4       	brne	.+12     	; 0x10ec <I2C_0_do_I2C_RX+0x32>
    10e0:	ec eb       	ldi	r30, 0xBC	; 188
    10e2:	f0 e0       	ldi	r31, 0x00	; 0
    10e4:	80 81       	ld	r24, Z
    10e6:	8f 7b       	andi	r24, 0xBF	; 191
    10e8:	80 83       	st	Z, r24
    10ea:	05 c0       	rjmp	.+10     	; 0x10f6 <I2C_0_do_I2C_RX+0x3c>
    10ec:	ec eb       	ldi	r30, 0xBC	; 188
    10ee:	f0 e0       	ldi	r31, 0x00	; 0
    10f0:	80 81       	ld	r24, Z
    10f2:	80 64       	ori	r24, 0x40	; 64
    10f4:	80 83       	st	Z, r24
    10f6:	e0 ef       	ldi	r30, 0xF0	; 240
    10f8:	f1 e0       	ldi	r31, 0x01	; 1
    10fa:	84 81       	ldd	r24, Z+4	; 0x04
    10fc:	95 81       	ldd	r25, Z+5	; 0x05
    10fe:	01 97       	sbiw	r24, 0x01	; 1
    1100:	95 83       	std	Z+5, r25	; 0x05
    1102:	84 83       	std	Z+4, r24	; 0x04
    1104:	89 2b       	or	r24, r25
    1106:	89 f0       	breq	.+34     	; 0x112a <I2C_0_do_I2C_RX+0x70>
    1108:	a2 81       	ldd	r26, Z+2	; 0x02
    110a:	b3 81       	ldd	r27, Z+3	; 0x03
    110c:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7fc0bb>
    1110:	8c 93       	st	X, r24
    1112:	82 81       	ldd	r24, Z+2	; 0x02
    1114:	93 81       	ldd	r25, Z+3	; 0x03
    1116:	01 96       	adiw	r24, 0x01	; 1
    1118:	93 83       	std	Z+3, r25	; 0x03
    111a:	82 83       	std	Z+2, r24	; 0x02
    111c:	ec eb       	ldi	r30, 0xBC	; 188
    111e:	f0 e0       	ldi	r31, 0x00	; 0
    1120:	80 81       	ld	r24, Z
    1122:	80 68       	ori	r24, 0x80	; 128
    1124:	80 83       	st	Z, r24
    1126:	84 e0       	ldi	r24, 0x04	; 4
    1128:	08 95       	ret
    112a:	a0 ef       	ldi	r26, 0xF0	; 240
    112c:	b1 e0       	ldi	r27, 0x01	; 1
    112e:	12 96       	adiw	r26, 0x02	; 2
    1130:	ed 91       	ld	r30, X+
    1132:	fc 91       	ld	r31, X
    1134:	13 97       	sbiw	r26, 0x03	; 3
    1136:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7fc0bb>
    113a:	80 83       	st	Z, r24
    113c:	12 96       	adiw	r26, 0x02	; 2
    113e:	8d 91       	ld	r24, X+
    1140:	9c 91       	ld	r25, X
    1142:	13 97       	sbiw	r26, 0x03	; 3
    1144:	01 96       	adiw	r24, 0x01	; 1
    1146:	13 96       	adiw	r26, 0x03	; 3
    1148:	9c 93       	st	X, r25
    114a:	8e 93       	st	-X, r24
    114c:	12 97       	sbiw	r26, 0x02	; 2
    114e:	8c 91       	ld	r24, X
    1150:	84 60       	ori	r24, 0x04	; 4
    1152:	8c 93       	st	X, r24
    1154:	1c 96       	adiw	r26, 0x0c	; 12
    1156:	ed 91       	ld	r30, X+
    1158:	fc 91       	ld	r31, X
    115a:	1d 97       	sbiw	r26, 0x0d	; 13
    115c:	58 96       	adiw	r26, 0x18	; 24
    115e:	8d 91       	ld	r24, X+
    1160:	9c 91       	ld	r25, X
    1162:	59 97       	sbiw	r26, 0x19	; 25
    1164:	09 95       	icall
    1166:	82 50       	subi	r24, 0x02	; 2
    1168:	82 30       	cpi	r24, 0x02	; 2
    116a:	18 f4       	brcc	.+6      	; 0x1172 <I2C_0_do_I2C_RX+0xb8>
    116c:	0e 94 13 08 	call	0x1026	; 0x1026 <I2C_0_do_I2C_DO_NACK_RESTART>
    1170:	08 95       	ret
    1172:	0e 94 0b 08 	call	0x1016	; 0x1016 <I2C_0_do_I2C_DO_NACK_STOP>
    1176:	08 95       	ret

00001178 <I2C_0_do_I2C_TX_EMPTY>:
    1178:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    117c:	88 7f       	andi	r24, 0xF8	; 248
    117e:	80 33       	cpi	r24, 0x30	; 48
    1180:	51 f0       	breq	.+20     	; 0x1196 <I2C_0_do_I2C_TX_EMPTY+0x1e>
    1182:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    1186:	88 7f       	andi	r24, 0xF8	; 248
    1188:	88 34       	cpi	r24, 0x48	; 72
    118a:	29 f0       	breq	.+10     	; 0x1196 <I2C_0_do_I2C_TX_EMPTY+0x1e>
    118c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    1190:	88 7f       	andi	r24, 0xF8	; 248
    1192:	80 32       	cpi	r24, 0x20	; 32
    1194:	c9 f4       	brne	.+50     	; 0x11c8 <I2C_0_do_I2C_TX_EMPTY+0x50>
    1196:	a0 ef       	ldi	r26, 0xF0	; 240
    1198:	b1 e0       	ldi	r27, 0x01	; 1
    119a:	52 96       	adiw	r26, 0x12	; 18
    119c:	ed 91       	ld	r30, X+
    119e:	fc 91       	ld	r31, X
    11a0:	53 97       	sbiw	r26, 0x13	; 19
    11a2:	5e 96       	adiw	r26, 0x1e	; 30
    11a4:	8d 91       	ld	r24, X+
    11a6:	9c 91       	ld	r25, X
    11a8:	5f 97       	sbiw	r26, 0x1f	; 31
    11aa:	09 95       	icall
    11ac:	82 30       	cpi	r24, 0x02	; 2
    11ae:	19 f0       	breq	.+6      	; 0x11b6 <I2C_0_do_I2C_TX_EMPTY+0x3e>
    11b0:	83 30       	cpi	r24, 0x03	; 3
    11b2:	21 f0       	breq	.+8      	; 0x11bc <I2C_0_do_I2C_TX_EMPTY+0x44>
    11b4:	06 c0       	rjmp	.+12     	; 0x11c2 <I2C_0_do_I2C_TX_EMPTY+0x4a>
    11b6:	0e 94 70 07 	call	0xee0	; 0xee0 <I2C_0_do_I2C_SEND_RESTART_READ>
    11ba:	08 95       	ret
    11bc:	0e 94 77 07 	call	0xeee	; 0xeee <I2C_0_do_I2C_SEND_RESTART_WRITE>
    11c0:	08 95       	ret
    11c2:	0e 94 85 07 	call	0xf0a	; 0xf0a <I2C_0_do_I2C_SEND_STOP>
    11c6:	08 95       	ret
    11c8:	a0 ef       	ldi	r26, 0xF0	; 240
    11ca:	b1 e0       	ldi	r27, 0x01	; 1
    11cc:	8c 91       	ld	r24, X
    11ce:	84 60       	ori	r24, 0x04	; 4
    11d0:	8c 93       	st	X, r24
    11d2:	1c 96       	adiw	r26, 0x0c	; 12
    11d4:	ed 91       	ld	r30, X+
    11d6:	fc 91       	ld	r31, X
    11d8:	1d 97       	sbiw	r26, 0x0d	; 13
    11da:	58 96       	adiw	r26, 0x18	; 24
    11dc:	8d 91       	ld	r24, X+
    11de:	9c 91       	ld	r25, X
    11e0:	59 97       	sbiw	r26, 0x19	; 25
    11e2:	09 95       	icall
    11e4:	83 30       	cpi	r24, 0x03	; 3
    11e6:	39 f0       	breq	.+14     	; 0x11f6 <I2C_0_do_I2C_TX_EMPTY+0x7e>
    11e8:	84 30       	cpi	r24, 0x04	; 4
    11ea:	41 f0       	breq	.+16     	; 0x11fc <I2C_0_do_I2C_TX_EMPTY+0x84>
    11ec:	82 30       	cpi	r24, 0x02	; 2
    11ee:	49 f4       	brne	.+18     	; 0x1202 <I2C_0_do_I2C_TX_EMPTY+0x8a>
    11f0:	0e 94 70 07 	call	0xee0	; 0xee0 <I2C_0_do_I2C_SEND_RESTART_READ>
    11f4:	08 95       	ret
    11f6:	0e 94 77 07 	call	0xeee	; 0xeee <I2C_0_do_I2C_SEND_RESTART_WRITE>
    11fa:	08 95       	ret
    11fc:	0e 94 1a 08 	call	0x1034	; 0x1034 <I2C_0_do_I2C_TX>
    1200:	08 95       	ret
    1202:	0e 94 85 07 	call	0xf0a	; 0xf0a <I2C_0_do_I2C_SEND_STOP>
    1206:	08 95       	ret

00001208 <I2C_0_do_I2C_BUS_COLLISION>:
    1208:	a0 ef       	ldi	r26, 0xF0	; 240
    120a:	b1 e0       	ldi	r27, 0x01	; 1
    120c:	82 e0       	ldi	r24, 0x02	; 2
    120e:	1b 96       	adiw	r26, 0x0b	; 11
    1210:	8c 93       	st	X, r24
    1212:	1b 97       	sbiw	r26, 0x0b	; 11
    1214:	1e 96       	adiw	r26, 0x0e	; 14
    1216:	ed 91       	ld	r30, X+
    1218:	fc 91       	ld	r31, X
    121a:	1f 97       	sbiw	r26, 0x0f	; 15
    121c:	5a 96       	adiw	r26, 0x1a	; 26
    121e:	8d 91       	ld	r24, X+
    1220:	9c 91       	ld	r25, X
    1222:	5b 97       	sbiw	r26, 0x1b	; 27
    1224:	09 95       	icall
    1226:	82 30       	cpi	r24, 0x02	; 2
    1228:	19 f0       	breq	.+6      	; 0x1230 <I2C_0_do_I2C_BUS_COLLISION+0x28>
    122a:	83 30       	cpi	r24, 0x03	; 3
    122c:	21 f0       	breq	.+8      	; 0x1236 <I2C_0_do_I2C_BUS_COLLISION+0x2e>
    122e:	06 c0       	rjmp	.+12     	; 0x123c <I2C_0_do_I2C_BUS_COLLISION+0x34>
    1230:	0e 94 70 07 	call	0xee0	; 0xee0 <I2C_0_do_I2C_SEND_RESTART_READ>
    1234:	08 95       	ret
    1236:	0e 94 77 07 	call	0xeee	; 0xeee <I2C_0_do_I2C_SEND_RESTART_WRITE>
    123a:	08 95       	ret
    123c:	0e 94 5d 07 	call	0xeba	; 0xeba <I2C_0_do_I2C_RESET>
    1240:	08 95       	ret

00001242 <I2C_0_do_I2C_BUS_ERROR>:
    1242:	80 e9       	ldi	r24, 0x90	; 144
    1244:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7fc0bc>
    1248:	e0 ef       	ldi	r30, 0xF0	; 240
    124a:	f1 e0       	ldi	r31, 0x01	; 1
    124c:	80 81       	ld	r24, Z
    124e:	8e 7f       	andi	r24, 0xFE	; 254
    1250:	80 83       	st	Z, r24
    1252:	82 e0       	ldi	r24, 0x02	; 2
    1254:	83 87       	std	Z+11, r24	; 0x0b
    1256:	8e e0       	ldi	r24, 0x0E	; 14
    1258:	08 95       	ret

0000125a <I2C_0_master_isr>:
    125a:	cf 93       	push	r28
    125c:	df 93       	push	r29
    125e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    1262:	88 7f       	andi	r24, 0xF8	; 248
    1264:	88 33       	cpi	r24, 0x38	; 56
    1266:	79 f0       	breq	.+30     	; 0x1286 <I2C_0_master_isr+0x2c>
    1268:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    126c:	88 7f       	andi	r24, 0xF8	; 248
    126e:	88 36       	cpi	r24, 0x68	; 104
    1270:	51 f0       	breq	.+20     	; 0x1286 <I2C_0_master_isr+0x2c>
    1272:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    1276:	88 7f       	andi	r24, 0xF8	; 248
    1278:	88 37       	cpi	r24, 0x78	; 120
    127a:	29 f0       	breq	.+10     	; 0x1286 <I2C_0_master_isr+0x2c>
    127c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7fc0b9>
    1280:	88 7f       	andi	r24, 0xF8	; 248
    1282:	80 3b       	cpi	r24, 0xB0	; 176
    1284:	19 f4       	brne	.+6      	; 0x128c <I2C_0_master_isr+0x32>
    1286:	80 e1       	ldi	r24, 0x10	; 16
    1288:	80 93 fa 01 	sts	0x01FA, r24	; 0x8001fa <I2C_0_status+0xa>
    128c:	c0 ef       	ldi	r28, 0xF0	; 240
    128e:	d1 e0       	ldi	r29, 0x01	; 1
    1290:	ea 85       	ldd	r30, Y+10	; 0x0a
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	ee 0f       	add	r30, r30
    1296:	ff 1f       	adc	r31, r31
    1298:	e7 5e       	subi	r30, 0xE7	; 231
    129a:	fe 4f       	sbci	r31, 0xFE	; 254
    129c:	01 90       	ld	r0, Z+
    129e:	f0 81       	ld	r31, Z
    12a0:	e0 2d       	mov	r30, r0
    12a2:	09 95       	icall
    12a4:	8a 87       	std	Y+10, r24	; 0x0a
    12a6:	df 91       	pop	r29
    12a8:	cf 91       	pop	r28
    12aa:	08 95       	ret

000012ac <__vector_24>:
    I2C_0_do_I2C_BUS_COLLISION,      // I2C_BUS_COLLISION
    I2C_0_do_I2C_BUS_ERROR           // I2C_BUS_ERROR
};

ISR(TWI_vect)
{
    12ac:	1f 92       	push	r1
    12ae:	0f 92       	push	r0
    12b0:	0f b6       	in	r0, 0x3f	; 63
    12b2:	0f 92       	push	r0
    12b4:	11 24       	eor	r1, r1
    12b6:	2f 93       	push	r18
    12b8:	3f 93       	push	r19
    12ba:	4f 93       	push	r20
    12bc:	5f 93       	push	r21
    12be:	6f 93       	push	r22
    12c0:	7f 93       	push	r23
    12c2:	8f 93       	push	r24
    12c4:	9f 93       	push	r25
    12c6:	af 93       	push	r26
    12c8:	bf 93       	push	r27
    12ca:	ef 93       	push	r30
    12cc:	ff 93       	push	r31
	I2C_0_master_isr();
    12ce:	0e 94 2d 09 	call	0x125a	; 0x125a <I2C_0_master_isr>
}
    12d2:	ff 91       	pop	r31
    12d4:	ef 91       	pop	r30
    12d6:	bf 91       	pop	r27
    12d8:	af 91       	pop	r26
    12da:	9f 91       	pop	r25
    12dc:	8f 91       	pop	r24
    12de:	7f 91       	pop	r23
    12e0:	6f 91       	pop	r22
    12e2:	5f 91       	pop	r21
    12e4:	4f 91       	pop	r20
    12e6:	3f 91       	pop	r19
    12e8:	2f 91       	pop	r18
    12ea:	0f 90       	pop	r0
    12ec:	0f be       	out	0x3f, r0	; 63
    12ee:	0f 90       	pop	r0
    12f0:	1f 90       	pop	r1
    12f2:	18 95       	reti

000012f4 <FLASH_0_init>:
	//		 | 0 << SIGRD /* Signature Row Read: disabled */
	//		 | 0 << RWWSB /* Read-While-Write Busy: disabled */
	//		 | 0 << SPMIE; /* SPM Interrupt Enable: disabled */

	return 0;
}
    12f4:	80 e0       	ldi	r24, 0x00	; 0
    12f6:	08 95       	ret

000012f8 <protected_write_io>:
#if defined(__GNUC__)
	/*
	 * We need to disable interrupts globally before the protected
	 * sequence. In order to do that we must save SREG first.
	 */
	in      r18,    _SFR_IO_ADDR(SREG)
    12f8:	2f b7       	in	r18, 0x3f	; 63
	cli
    12fa:	f8 94       	cli
  
#ifdef RAMPZ
	out     _SFR_IO_ADDR(RAMPZ), r1         // Clear bits 23:16 of Z
#endif
	movw    r30, r24                // Load addr into Z
    12fc:	fc 01       	movw	r30, r24
	st      Z, r22                  // Write protection bit to I/O register
    12fe:	60 83       	st	Z, r22
	st      Z, r20                  // Write value to I/O register
    1300:	40 83       	st	Z, r20
	out     _SFR_IO_ADDR(SREG), r18
    1302:	2f bf       	out	0x3f, r18	; 63

	ret                             // Return to caller
    1304:	08 95       	ret

00001306 <__vector_17>:
{
	SPI_0_desc.cb = f;
}

ISR(SPI_STC_vect)
{
    1306:	1f 92       	push	r1
    1308:	0f 92       	push	r0
    130a:	0f b6       	in	r0, 0x3f	; 63
    130c:	0f 92       	push	r0
    130e:	11 24       	eor	r1, r1
    1310:	2f 93       	push	r18
    1312:	3f 93       	push	r19
    1314:	4f 93       	push	r20
    1316:	5f 93       	push	r21
    1318:	6f 93       	push	r22
    131a:	7f 93       	push	r23
    131c:	8f 93       	push	r24
    131e:	9f 93       	push	r25
    1320:	af 93       	push	r26
    1322:	bf 93       	push	r27
    1324:	ef 93       	push	r30
    1326:	ff 93       	push	r31
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR;
    1328:	9e b5       	in	r25, 0x2e	; 46
	uint8_t wdata = 0;

	if (SPI_0_desc.type != SPI_WRITE) {
    132a:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <SPI_0_desc+0x4>
    132e:	82 30       	cpi	r24, 0x02	; 2
    1330:	29 f0       	breq	.+10     	; 0x133c <__vector_17+0x36>
		*SPI_0_desc.data = rdata;
    1332:	e0 91 15 02 	lds	r30, 0x0215	; 0x800215 <SPI_0_desc+0x1>
    1336:	f0 91 16 02 	lds	r31, 0x0216	; 0x800216 <SPI_0_desc+0x2>
    133a:	90 83       	st	Z, r25
	}

	SPI_0_desc.data++;
    133c:	e4 e1       	ldi	r30, 0x14	; 20
    133e:	f2 e0       	ldi	r31, 0x02	; 2
    1340:	a1 81       	ldd	r26, Z+1	; 0x01
    1342:	b2 81       	ldd	r27, Z+2	; 0x02
    1344:	9d 01       	movw	r18, r26
    1346:	2f 5f       	subi	r18, 0xFF	; 255
    1348:	3f 4f       	sbci	r19, 0xFF	; 255
    134a:	32 83       	std	Z+2, r19	; 0x02
    134c:	21 83       	std	Z+1, r18	; 0x01

	if (SPI_0_desc.type != SPI_READ)
    134e:	81 30       	cpi	r24, 0x01	; 1
    1350:	19 f0       	breq	.+6      	; 0x1358 <__vector_17+0x52>
		wdata = *SPI_0_desc.data;
    1352:	11 96       	adiw	r26, 0x01	; 1
    1354:	9c 91       	ld	r25, X
    1356:	01 c0       	rjmp	.+2      	; 0x135a <__vector_17+0x54>
	/* SPI_0_desc.data points to array element
	   to write the received data to. The data to be transmitted
	   is in the next array element.
	*/
	uint8_t rdata = SPDR;
	uint8_t wdata = 0;
    1358:	90 e0       	ldi	r25, 0x00	; 0
	SPI_0_desc.data++;

	if (SPI_0_desc.type != SPI_READ)
		wdata = *SPI_0_desc.data;

	SPI_0_desc.size--;
    135a:	e4 e1       	ldi	r30, 0x14	; 20
    135c:	f2 e0       	ldi	r31, 0x02	; 2
    135e:	83 81       	ldd	r24, Z+3	; 0x03
    1360:	81 50       	subi	r24, 0x01	; 1
    1362:	83 83       	std	Z+3, r24	; 0x03
	// if more bytes to be transferred
	if (SPI_0_desc.size != 0) {
    1364:	88 23       	and	r24, r24
    1366:	11 f0       	breq	.+4      	; 0x136c <__vector_17+0x66>
		// more data to send, send a byte
		SPDR = wdata;
    1368:	9e bd       	out	0x2e, r25	; 46
    136a:	0a c0       	rjmp	.+20     	; 0x1380 <__vector_17+0x7a>
	}

	// if last byte has been transferred, update status
	// and optionally call callback
	else {
		SPI_0_desc.status = SPI_DONE;
    136c:	e4 e1       	ldi	r30, 0x14	; 20
    136e:	f2 e0       	ldi	r31, 0x02	; 2
    1370:	83 e0       	ldi	r24, 0x03	; 3
    1372:	80 83       	st	Z, r24
		if (SPI_0_desc.cb != NULL) {
    1374:	05 80       	ldd	r0, Z+5	; 0x05
    1376:	f6 81       	ldd	r31, Z+6	; 0x06
    1378:	e0 2d       	mov	r30, r0
    137a:	30 97       	sbiw	r30, 0x00	; 0
    137c:	09 f0       	breq	.+2      	; 0x1380 <__vector_17+0x7a>
			SPI_0_desc.cb();
    137e:	09 95       	icall
		}
	}
}
    1380:	ff 91       	pop	r31
    1382:	ef 91       	pop	r30
    1384:	bf 91       	pop	r27
    1386:	af 91       	pop	r26
    1388:	9f 91       	pop	r25
    138a:	8f 91       	pop	r24
    138c:	7f 91       	pop	r23
    138e:	6f 91       	pop	r22
    1390:	5f 91       	pop	r21
    1392:	4f 91       	pop	r20
    1394:	3f 91       	pop	r19
    1396:	2f 91       	pop	r18
    1398:	0f 90       	pop	r0
    139a:	0f be       	out	0x3f, r0	; 63
    139c:	0f 90       	pop	r0
    139e:	1f 90       	pop	r1
    13a0:	18 95       	reti

000013a2 <__subsf3>:
    13a2:	50 58       	subi	r21, 0x80	; 128

000013a4 <__addsf3>:
    13a4:	bb 27       	eor	r27, r27
    13a6:	aa 27       	eor	r26, r26
    13a8:	0e 94 e9 09 	call	0x13d2	; 0x13d2 <__addsf3x>
    13ac:	0c 94 2d 0b 	jmp	0x165a	; 0x165a <__fp_round>
    13b0:	0e 94 1f 0b 	call	0x163e	; 0x163e <__fp_pscA>
    13b4:	38 f0       	brcs	.+14     	; 0x13c4 <__addsf3+0x20>
    13b6:	0e 94 26 0b 	call	0x164c	; 0x164c <__fp_pscB>
    13ba:	20 f0       	brcs	.+8      	; 0x13c4 <__addsf3+0x20>
    13bc:	39 f4       	brne	.+14     	; 0x13cc <__addsf3+0x28>
    13be:	9f 3f       	cpi	r25, 0xFF	; 255
    13c0:	19 f4       	brne	.+6      	; 0x13c8 <__addsf3+0x24>
    13c2:	26 f4       	brtc	.+8      	; 0x13cc <__addsf3+0x28>
    13c4:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__fp_nan>
    13c8:	0e f4       	brtc	.+2      	; 0x13cc <__addsf3+0x28>
    13ca:	e0 95       	com	r30
    13cc:	e7 fb       	bst	r30, 7
    13ce:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__fp_inf>

000013d2 <__addsf3x>:
    13d2:	e9 2f       	mov	r30, r25
    13d4:	0e 94 3e 0b 	call	0x167c	; 0x167c <__fp_split3>
    13d8:	58 f3       	brcs	.-42     	; 0x13b0 <__addsf3+0xc>
    13da:	ba 17       	cp	r27, r26
    13dc:	62 07       	cpc	r22, r18
    13de:	73 07       	cpc	r23, r19
    13e0:	84 07       	cpc	r24, r20
    13e2:	95 07       	cpc	r25, r21
    13e4:	20 f0       	brcs	.+8      	; 0x13ee <__addsf3x+0x1c>
    13e6:	79 f4       	brne	.+30     	; 0x1406 <__addsf3x+0x34>
    13e8:	a6 f5       	brtc	.+104    	; 0x1452 <__addsf3x+0x80>
    13ea:	0c 94 60 0b 	jmp	0x16c0	; 0x16c0 <__fp_zero>
    13ee:	0e f4       	brtc	.+2      	; 0x13f2 <__addsf3x+0x20>
    13f0:	e0 95       	com	r30
    13f2:	0b 2e       	mov	r0, r27
    13f4:	ba 2f       	mov	r27, r26
    13f6:	a0 2d       	mov	r26, r0
    13f8:	0b 01       	movw	r0, r22
    13fa:	b9 01       	movw	r22, r18
    13fc:	90 01       	movw	r18, r0
    13fe:	0c 01       	movw	r0, r24
    1400:	ca 01       	movw	r24, r20
    1402:	a0 01       	movw	r20, r0
    1404:	11 24       	eor	r1, r1
    1406:	ff 27       	eor	r31, r31
    1408:	59 1b       	sub	r21, r25
    140a:	99 f0       	breq	.+38     	; 0x1432 <__addsf3x+0x60>
    140c:	59 3f       	cpi	r21, 0xF9	; 249
    140e:	50 f4       	brcc	.+20     	; 0x1424 <__addsf3x+0x52>
    1410:	50 3e       	cpi	r21, 0xE0	; 224
    1412:	68 f1       	brcs	.+90     	; 0x146e <__addsf3x+0x9c>
    1414:	1a 16       	cp	r1, r26
    1416:	f0 40       	sbci	r31, 0x00	; 0
    1418:	a2 2f       	mov	r26, r18
    141a:	23 2f       	mov	r18, r19
    141c:	34 2f       	mov	r19, r20
    141e:	44 27       	eor	r20, r20
    1420:	58 5f       	subi	r21, 0xF8	; 248
    1422:	f3 cf       	rjmp	.-26     	; 0x140a <__addsf3x+0x38>
    1424:	46 95       	lsr	r20
    1426:	37 95       	ror	r19
    1428:	27 95       	ror	r18
    142a:	a7 95       	ror	r26
    142c:	f0 40       	sbci	r31, 0x00	; 0
    142e:	53 95       	inc	r21
    1430:	c9 f7       	brne	.-14     	; 0x1424 <__addsf3x+0x52>
    1432:	7e f4       	brtc	.+30     	; 0x1452 <__addsf3x+0x80>
    1434:	1f 16       	cp	r1, r31
    1436:	ba 0b       	sbc	r27, r26
    1438:	62 0b       	sbc	r22, r18
    143a:	73 0b       	sbc	r23, r19
    143c:	84 0b       	sbc	r24, r20
    143e:	ba f0       	brmi	.+46     	; 0x146e <__addsf3x+0x9c>
    1440:	91 50       	subi	r25, 0x01	; 1
    1442:	a1 f0       	breq	.+40     	; 0x146c <__addsf3x+0x9a>
    1444:	ff 0f       	add	r31, r31
    1446:	bb 1f       	adc	r27, r27
    1448:	66 1f       	adc	r22, r22
    144a:	77 1f       	adc	r23, r23
    144c:	88 1f       	adc	r24, r24
    144e:	c2 f7       	brpl	.-16     	; 0x1440 <__addsf3x+0x6e>
    1450:	0e c0       	rjmp	.+28     	; 0x146e <__addsf3x+0x9c>
    1452:	ba 0f       	add	r27, r26
    1454:	62 1f       	adc	r22, r18
    1456:	73 1f       	adc	r23, r19
    1458:	84 1f       	adc	r24, r20
    145a:	48 f4       	brcc	.+18     	; 0x146e <__addsf3x+0x9c>
    145c:	87 95       	ror	r24
    145e:	77 95       	ror	r23
    1460:	67 95       	ror	r22
    1462:	b7 95       	ror	r27
    1464:	f7 95       	ror	r31
    1466:	9e 3f       	cpi	r25, 0xFE	; 254
    1468:	08 f0       	brcs	.+2      	; 0x146c <__addsf3x+0x9a>
    146a:	b0 cf       	rjmp	.-160    	; 0x13cc <__addsf3+0x28>
    146c:	93 95       	inc	r25
    146e:	88 0f       	add	r24, r24
    1470:	08 f0       	brcs	.+2      	; 0x1474 <__addsf3x+0xa2>
    1472:	99 27       	eor	r25, r25
    1474:	ee 0f       	add	r30, r30
    1476:	97 95       	ror	r25
    1478:	87 95       	ror	r24
    147a:	08 95       	ret

0000147c <__cmpsf2>:
    147c:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <__fp_cmp>
    1480:	08 f4       	brcc	.+2      	; 0x1484 <__cmpsf2+0x8>
    1482:	81 e0       	ldi	r24, 0x01	; 1
    1484:	08 95       	ret

00001486 <__divsf3>:
    1486:	0e 94 57 0a 	call	0x14ae	; 0x14ae <__divsf3x>
    148a:	0c 94 2d 0b 	jmp	0x165a	; 0x165a <__fp_round>
    148e:	0e 94 26 0b 	call	0x164c	; 0x164c <__fp_pscB>
    1492:	58 f0       	brcs	.+22     	; 0x14aa <__divsf3+0x24>
    1494:	0e 94 1f 0b 	call	0x163e	; 0x163e <__fp_pscA>
    1498:	40 f0       	brcs	.+16     	; 0x14aa <__divsf3+0x24>
    149a:	29 f4       	brne	.+10     	; 0x14a6 <__divsf3+0x20>
    149c:	5f 3f       	cpi	r21, 0xFF	; 255
    149e:	29 f0       	breq	.+10     	; 0x14aa <__divsf3+0x24>
    14a0:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__fp_inf>
    14a4:	51 11       	cpse	r21, r1
    14a6:	0c 94 61 0b 	jmp	0x16c2	; 0x16c2 <__fp_szero>
    14aa:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__fp_nan>

000014ae <__divsf3x>:
    14ae:	0e 94 3e 0b 	call	0x167c	; 0x167c <__fp_split3>
    14b2:	68 f3       	brcs	.-38     	; 0x148e <__divsf3+0x8>

000014b4 <__divsf3_pse>:
    14b4:	99 23       	and	r25, r25
    14b6:	b1 f3       	breq	.-20     	; 0x14a4 <__divsf3+0x1e>
    14b8:	55 23       	and	r21, r21
    14ba:	91 f3       	breq	.-28     	; 0x14a0 <__divsf3+0x1a>
    14bc:	95 1b       	sub	r25, r21
    14be:	55 0b       	sbc	r21, r21
    14c0:	bb 27       	eor	r27, r27
    14c2:	aa 27       	eor	r26, r26
    14c4:	62 17       	cp	r22, r18
    14c6:	73 07       	cpc	r23, r19
    14c8:	84 07       	cpc	r24, r20
    14ca:	38 f0       	brcs	.+14     	; 0x14da <__divsf3_pse+0x26>
    14cc:	9f 5f       	subi	r25, 0xFF	; 255
    14ce:	5f 4f       	sbci	r21, 0xFF	; 255
    14d0:	22 0f       	add	r18, r18
    14d2:	33 1f       	adc	r19, r19
    14d4:	44 1f       	adc	r20, r20
    14d6:	aa 1f       	adc	r26, r26
    14d8:	a9 f3       	breq	.-22     	; 0x14c4 <__divsf3_pse+0x10>
    14da:	35 d0       	rcall	.+106    	; 0x1546 <__divsf3_pse+0x92>
    14dc:	0e 2e       	mov	r0, r30
    14de:	3a f0       	brmi	.+14     	; 0x14ee <__divsf3_pse+0x3a>
    14e0:	e0 e8       	ldi	r30, 0x80	; 128
    14e2:	32 d0       	rcall	.+100    	; 0x1548 <__divsf3_pse+0x94>
    14e4:	91 50       	subi	r25, 0x01	; 1
    14e6:	50 40       	sbci	r21, 0x00	; 0
    14e8:	e6 95       	lsr	r30
    14ea:	00 1c       	adc	r0, r0
    14ec:	ca f7       	brpl	.-14     	; 0x14e0 <__divsf3_pse+0x2c>
    14ee:	2b d0       	rcall	.+86     	; 0x1546 <__divsf3_pse+0x92>
    14f0:	fe 2f       	mov	r31, r30
    14f2:	29 d0       	rcall	.+82     	; 0x1546 <__divsf3_pse+0x92>
    14f4:	66 0f       	add	r22, r22
    14f6:	77 1f       	adc	r23, r23
    14f8:	88 1f       	adc	r24, r24
    14fa:	bb 1f       	adc	r27, r27
    14fc:	26 17       	cp	r18, r22
    14fe:	37 07       	cpc	r19, r23
    1500:	48 07       	cpc	r20, r24
    1502:	ab 07       	cpc	r26, r27
    1504:	b0 e8       	ldi	r27, 0x80	; 128
    1506:	09 f0       	breq	.+2      	; 0x150a <__divsf3_pse+0x56>
    1508:	bb 0b       	sbc	r27, r27
    150a:	80 2d       	mov	r24, r0
    150c:	bf 01       	movw	r22, r30
    150e:	ff 27       	eor	r31, r31
    1510:	93 58       	subi	r25, 0x83	; 131
    1512:	5f 4f       	sbci	r21, 0xFF	; 255
    1514:	3a f0       	brmi	.+14     	; 0x1524 <__divsf3_pse+0x70>
    1516:	9e 3f       	cpi	r25, 0xFE	; 254
    1518:	51 05       	cpc	r21, r1
    151a:	78 f0       	brcs	.+30     	; 0x153a <__divsf3_pse+0x86>
    151c:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__fp_inf>
    1520:	0c 94 61 0b 	jmp	0x16c2	; 0x16c2 <__fp_szero>
    1524:	5f 3f       	cpi	r21, 0xFF	; 255
    1526:	e4 f3       	brlt	.-8      	; 0x1520 <__divsf3_pse+0x6c>
    1528:	98 3e       	cpi	r25, 0xE8	; 232
    152a:	d4 f3       	brlt	.-12     	; 0x1520 <__divsf3_pse+0x6c>
    152c:	86 95       	lsr	r24
    152e:	77 95       	ror	r23
    1530:	67 95       	ror	r22
    1532:	b7 95       	ror	r27
    1534:	f7 95       	ror	r31
    1536:	9f 5f       	subi	r25, 0xFF	; 255
    1538:	c9 f7       	brne	.-14     	; 0x152c <__divsf3_pse+0x78>
    153a:	88 0f       	add	r24, r24
    153c:	91 1d       	adc	r25, r1
    153e:	96 95       	lsr	r25
    1540:	87 95       	ror	r24
    1542:	97 f9       	bld	r25, 7
    1544:	08 95       	ret
    1546:	e1 e0       	ldi	r30, 0x01	; 1
    1548:	66 0f       	add	r22, r22
    154a:	77 1f       	adc	r23, r23
    154c:	88 1f       	adc	r24, r24
    154e:	bb 1f       	adc	r27, r27
    1550:	62 17       	cp	r22, r18
    1552:	73 07       	cpc	r23, r19
    1554:	84 07       	cpc	r24, r20
    1556:	ba 07       	cpc	r27, r26
    1558:	20 f0       	brcs	.+8      	; 0x1562 <__divsf3_pse+0xae>
    155a:	62 1b       	sub	r22, r18
    155c:	73 0b       	sbc	r23, r19
    155e:	84 0b       	sbc	r24, r20
    1560:	ba 0b       	sbc	r27, r26
    1562:	ee 1f       	adc	r30, r30
    1564:	88 f7       	brcc	.-30     	; 0x1548 <__divsf3_pse+0x94>
    1566:	e0 95       	com	r30
    1568:	08 95       	ret

0000156a <__floatunsisf>:
    156a:	e8 94       	clt
    156c:	09 c0       	rjmp	.+18     	; 0x1580 <__floatsisf+0x12>

0000156e <__floatsisf>:
    156e:	97 fb       	bst	r25, 7
    1570:	3e f4       	brtc	.+14     	; 0x1580 <__floatsisf+0x12>
    1572:	90 95       	com	r25
    1574:	80 95       	com	r24
    1576:	70 95       	com	r23
    1578:	61 95       	neg	r22
    157a:	7f 4f       	sbci	r23, 0xFF	; 255
    157c:	8f 4f       	sbci	r24, 0xFF	; 255
    157e:	9f 4f       	sbci	r25, 0xFF	; 255
    1580:	99 23       	and	r25, r25
    1582:	a9 f0       	breq	.+42     	; 0x15ae <__floatsisf+0x40>
    1584:	f9 2f       	mov	r31, r25
    1586:	96 e9       	ldi	r25, 0x96	; 150
    1588:	bb 27       	eor	r27, r27
    158a:	93 95       	inc	r25
    158c:	f6 95       	lsr	r31
    158e:	87 95       	ror	r24
    1590:	77 95       	ror	r23
    1592:	67 95       	ror	r22
    1594:	b7 95       	ror	r27
    1596:	f1 11       	cpse	r31, r1
    1598:	f8 cf       	rjmp	.-16     	; 0x158a <__floatsisf+0x1c>
    159a:	fa f4       	brpl	.+62     	; 0x15da <__floatsisf+0x6c>
    159c:	bb 0f       	add	r27, r27
    159e:	11 f4       	brne	.+4      	; 0x15a4 <__floatsisf+0x36>
    15a0:	60 ff       	sbrs	r22, 0
    15a2:	1b c0       	rjmp	.+54     	; 0x15da <__floatsisf+0x6c>
    15a4:	6f 5f       	subi	r22, 0xFF	; 255
    15a6:	7f 4f       	sbci	r23, 0xFF	; 255
    15a8:	8f 4f       	sbci	r24, 0xFF	; 255
    15aa:	9f 4f       	sbci	r25, 0xFF	; 255
    15ac:	16 c0       	rjmp	.+44     	; 0x15da <__floatsisf+0x6c>
    15ae:	88 23       	and	r24, r24
    15b0:	11 f0       	breq	.+4      	; 0x15b6 <__floatsisf+0x48>
    15b2:	96 e9       	ldi	r25, 0x96	; 150
    15b4:	11 c0       	rjmp	.+34     	; 0x15d8 <__floatsisf+0x6a>
    15b6:	77 23       	and	r23, r23
    15b8:	21 f0       	breq	.+8      	; 0x15c2 <__floatsisf+0x54>
    15ba:	9e e8       	ldi	r25, 0x8E	; 142
    15bc:	87 2f       	mov	r24, r23
    15be:	76 2f       	mov	r23, r22
    15c0:	05 c0       	rjmp	.+10     	; 0x15cc <__floatsisf+0x5e>
    15c2:	66 23       	and	r22, r22
    15c4:	71 f0       	breq	.+28     	; 0x15e2 <__floatsisf+0x74>
    15c6:	96 e8       	ldi	r25, 0x86	; 134
    15c8:	86 2f       	mov	r24, r22
    15ca:	70 e0       	ldi	r23, 0x00	; 0
    15cc:	60 e0       	ldi	r22, 0x00	; 0
    15ce:	2a f0       	brmi	.+10     	; 0x15da <__floatsisf+0x6c>
    15d0:	9a 95       	dec	r25
    15d2:	66 0f       	add	r22, r22
    15d4:	77 1f       	adc	r23, r23
    15d6:	88 1f       	adc	r24, r24
    15d8:	da f7       	brpl	.-10     	; 0x15d0 <__floatsisf+0x62>
    15da:	88 0f       	add	r24, r24
    15dc:	96 95       	lsr	r25
    15de:	87 95       	ror	r24
    15e0:	97 f9       	bld	r25, 7
    15e2:	08 95       	ret

000015e4 <__fp_cmp>:
    15e4:	99 0f       	add	r25, r25
    15e6:	00 08       	sbc	r0, r0
    15e8:	55 0f       	add	r21, r21
    15ea:	aa 0b       	sbc	r26, r26
    15ec:	e0 e8       	ldi	r30, 0x80	; 128
    15ee:	fe ef       	ldi	r31, 0xFE	; 254
    15f0:	16 16       	cp	r1, r22
    15f2:	17 06       	cpc	r1, r23
    15f4:	e8 07       	cpc	r30, r24
    15f6:	f9 07       	cpc	r31, r25
    15f8:	c0 f0       	brcs	.+48     	; 0x162a <__fp_cmp+0x46>
    15fa:	12 16       	cp	r1, r18
    15fc:	13 06       	cpc	r1, r19
    15fe:	e4 07       	cpc	r30, r20
    1600:	f5 07       	cpc	r31, r21
    1602:	98 f0       	brcs	.+38     	; 0x162a <__fp_cmp+0x46>
    1604:	62 1b       	sub	r22, r18
    1606:	73 0b       	sbc	r23, r19
    1608:	84 0b       	sbc	r24, r20
    160a:	95 0b       	sbc	r25, r21
    160c:	39 f4       	brne	.+14     	; 0x161c <__fp_cmp+0x38>
    160e:	0a 26       	eor	r0, r26
    1610:	61 f0       	breq	.+24     	; 0x162a <__fp_cmp+0x46>
    1612:	23 2b       	or	r18, r19
    1614:	24 2b       	or	r18, r20
    1616:	25 2b       	or	r18, r21
    1618:	21 f4       	brne	.+8      	; 0x1622 <__fp_cmp+0x3e>
    161a:	08 95       	ret
    161c:	0a 26       	eor	r0, r26
    161e:	09 f4       	brne	.+2      	; 0x1622 <__fp_cmp+0x3e>
    1620:	a1 40       	sbci	r26, 0x01	; 1
    1622:	a6 95       	lsr	r26
    1624:	8f ef       	ldi	r24, 0xFF	; 255
    1626:	81 1d       	adc	r24, r1
    1628:	81 1d       	adc	r24, r1
    162a:	08 95       	ret

0000162c <__fp_inf>:
    162c:	97 f9       	bld	r25, 7
    162e:	9f 67       	ori	r25, 0x7F	; 127
    1630:	80 e8       	ldi	r24, 0x80	; 128
    1632:	70 e0       	ldi	r23, 0x00	; 0
    1634:	60 e0       	ldi	r22, 0x00	; 0
    1636:	08 95       	ret

00001638 <__fp_nan>:
    1638:	9f ef       	ldi	r25, 0xFF	; 255
    163a:	80 ec       	ldi	r24, 0xC0	; 192
    163c:	08 95       	ret

0000163e <__fp_pscA>:
    163e:	00 24       	eor	r0, r0
    1640:	0a 94       	dec	r0
    1642:	16 16       	cp	r1, r22
    1644:	17 06       	cpc	r1, r23
    1646:	18 06       	cpc	r1, r24
    1648:	09 06       	cpc	r0, r25
    164a:	08 95       	ret

0000164c <__fp_pscB>:
    164c:	00 24       	eor	r0, r0
    164e:	0a 94       	dec	r0
    1650:	12 16       	cp	r1, r18
    1652:	13 06       	cpc	r1, r19
    1654:	14 06       	cpc	r1, r20
    1656:	05 06       	cpc	r0, r21
    1658:	08 95       	ret

0000165a <__fp_round>:
    165a:	09 2e       	mov	r0, r25
    165c:	03 94       	inc	r0
    165e:	00 0c       	add	r0, r0
    1660:	11 f4       	brne	.+4      	; 0x1666 <__fp_round+0xc>
    1662:	88 23       	and	r24, r24
    1664:	52 f0       	brmi	.+20     	; 0x167a <__fp_round+0x20>
    1666:	bb 0f       	add	r27, r27
    1668:	40 f4       	brcc	.+16     	; 0x167a <__fp_round+0x20>
    166a:	bf 2b       	or	r27, r31
    166c:	11 f4       	brne	.+4      	; 0x1672 <__fp_round+0x18>
    166e:	60 ff       	sbrs	r22, 0
    1670:	04 c0       	rjmp	.+8      	; 0x167a <__fp_round+0x20>
    1672:	6f 5f       	subi	r22, 0xFF	; 255
    1674:	7f 4f       	sbci	r23, 0xFF	; 255
    1676:	8f 4f       	sbci	r24, 0xFF	; 255
    1678:	9f 4f       	sbci	r25, 0xFF	; 255
    167a:	08 95       	ret

0000167c <__fp_split3>:
    167c:	57 fd       	sbrc	r21, 7
    167e:	90 58       	subi	r25, 0x80	; 128
    1680:	44 0f       	add	r20, r20
    1682:	55 1f       	adc	r21, r21
    1684:	59 f0       	breq	.+22     	; 0x169c <__fp_splitA+0x10>
    1686:	5f 3f       	cpi	r21, 0xFF	; 255
    1688:	71 f0       	breq	.+28     	; 0x16a6 <__fp_splitA+0x1a>
    168a:	47 95       	ror	r20

0000168c <__fp_splitA>:
    168c:	88 0f       	add	r24, r24
    168e:	97 fb       	bst	r25, 7
    1690:	99 1f       	adc	r25, r25
    1692:	61 f0       	breq	.+24     	; 0x16ac <__fp_splitA+0x20>
    1694:	9f 3f       	cpi	r25, 0xFF	; 255
    1696:	79 f0       	breq	.+30     	; 0x16b6 <__fp_splitA+0x2a>
    1698:	87 95       	ror	r24
    169a:	08 95       	ret
    169c:	12 16       	cp	r1, r18
    169e:	13 06       	cpc	r1, r19
    16a0:	14 06       	cpc	r1, r20
    16a2:	55 1f       	adc	r21, r21
    16a4:	f2 cf       	rjmp	.-28     	; 0x168a <__fp_split3+0xe>
    16a6:	46 95       	lsr	r20
    16a8:	f1 df       	rcall	.-30     	; 0x168c <__fp_splitA>
    16aa:	08 c0       	rjmp	.+16     	; 0x16bc <__fp_splitA+0x30>
    16ac:	16 16       	cp	r1, r22
    16ae:	17 06       	cpc	r1, r23
    16b0:	18 06       	cpc	r1, r24
    16b2:	99 1f       	adc	r25, r25
    16b4:	f1 cf       	rjmp	.-30     	; 0x1698 <__fp_splitA+0xc>
    16b6:	86 95       	lsr	r24
    16b8:	71 05       	cpc	r23, r1
    16ba:	61 05       	cpc	r22, r1
    16bc:	08 94       	sec
    16be:	08 95       	ret

000016c0 <__fp_zero>:
    16c0:	e8 94       	clt

000016c2 <__fp_szero>:
    16c2:	bb 27       	eor	r27, r27
    16c4:	66 27       	eor	r22, r22
    16c6:	77 27       	eor	r23, r23
    16c8:	cb 01       	movw	r24, r22
    16ca:	97 f9       	bld	r25, 7
    16cc:	08 95       	ret

000016ce <__gesf2>:
    16ce:	0e 94 f2 0a 	call	0x15e4	; 0x15e4 <__fp_cmp>
    16d2:	08 f4       	brcc	.+2      	; 0x16d6 <__gesf2+0x8>
    16d4:	8f ef       	ldi	r24, 0xFF	; 255
    16d6:	08 95       	ret

000016d8 <__mulsf3>:
    16d8:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <__mulsf3x>
    16dc:	0c 94 2d 0b 	jmp	0x165a	; 0x165a <__fp_round>
    16e0:	0e 94 1f 0b 	call	0x163e	; 0x163e <__fp_pscA>
    16e4:	38 f0       	brcs	.+14     	; 0x16f4 <__mulsf3+0x1c>
    16e6:	0e 94 26 0b 	call	0x164c	; 0x164c <__fp_pscB>
    16ea:	20 f0       	brcs	.+8      	; 0x16f4 <__mulsf3+0x1c>
    16ec:	95 23       	and	r25, r21
    16ee:	11 f0       	breq	.+4      	; 0x16f4 <__mulsf3+0x1c>
    16f0:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__fp_inf>
    16f4:	0c 94 1c 0b 	jmp	0x1638	; 0x1638 <__fp_nan>
    16f8:	11 24       	eor	r1, r1
    16fa:	0c 94 61 0b 	jmp	0x16c2	; 0x16c2 <__fp_szero>

000016fe <__mulsf3x>:
    16fe:	0e 94 3e 0b 	call	0x167c	; 0x167c <__fp_split3>
    1702:	70 f3       	brcs	.-36     	; 0x16e0 <__mulsf3+0x8>

00001704 <__mulsf3_pse>:
    1704:	95 9f       	mul	r25, r21
    1706:	c1 f3       	breq	.-16     	; 0x16f8 <__mulsf3+0x20>
    1708:	95 0f       	add	r25, r21
    170a:	50 e0       	ldi	r21, 0x00	; 0
    170c:	55 1f       	adc	r21, r21
    170e:	62 9f       	mul	r22, r18
    1710:	f0 01       	movw	r30, r0
    1712:	72 9f       	mul	r23, r18
    1714:	bb 27       	eor	r27, r27
    1716:	f0 0d       	add	r31, r0
    1718:	b1 1d       	adc	r27, r1
    171a:	63 9f       	mul	r22, r19
    171c:	aa 27       	eor	r26, r26
    171e:	f0 0d       	add	r31, r0
    1720:	b1 1d       	adc	r27, r1
    1722:	aa 1f       	adc	r26, r26
    1724:	64 9f       	mul	r22, r20
    1726:	66 27       	eor	r22, r22
    1728:	b0 0d       	add	r27, r0
    172a:	a1 1d       	adc	r26, r1
    172c:	66 1f       	adc	r22, r22
    172e:	82 9f       	mul	r24, r18
    1730:	22 27       	eor	r18, r18
    1732:	b0 0d       	add	r27, r0
    1734:	a1 1d       	adc	r26, r1
    1736:	62 1f       	adc	r22, r18
    1738:	73 9f       	mul	r23, r19
    173a:	b0 0d       	add	r27, r0
    173c:	a1 1d       	adc	r26, r1
    173e:	62 1f       	adc	r22, r18
    1740:	83 9f       	mul	r24, r19
    1742:	a0 0d       	add	r26, r0
    1744:	61 1d       	adc	r22, r1
    1746:	22 1f       	adc	r18, r18
    1748:	74 9f       	mul	r23, r20
    174a:	33 27       	eor	r19, r19
    174c:	a0 0d       	add	r26, r0
    174e:	61 1d       	adc	r22, r1
    1750:	23 1f       	adc	r18, r19
    1752:	84 9f       	mul	r24, r20
    1754:	60 0d       	add	r22, r0
    1756:	21 1d       	adc	r18, r1
    1758:	82 2f       	mov	r24, r18
    175a:	76 2f       	mov	r23, r22
    175c:	6a 2f       	mov	r22, r26
    175e:	11 24       	eor	r1, r1
    1760:	9f 57       	subi	r25, 0x7F	; 127
    1762:	50 40       	sbci	r21, 0x00	; 0
    1764:	9a f0       	brmi	.+38     	; 0x178c <__mulsf3_pse+0x88>
    1766:	f1 f0       	breq	.+60     	; 0x17a4 <__mulsf3_pse+0xa0>
    1768:	88 23       	and	r24, r24
    176a:	4a f0       	brmi	.+18     	; 0x177e <__mulsf3_pse+0x7a>
    176c:	ee 0f       	add	r30, r30
    176e:	ff 1f       	adc	r31, r31
    1770:	bb 1f       	adc	r27, r27
    1772:	66 1f       	adc	r22, r22
    1774:	77 1f       	adc	r23, r23
    1776:	88 1f       	adc	r24, r24
    1778:	91 50       	subi	r25, 0x01	; 1
    177a:	50 40       	sbci	r21, 0x00	; 0
    177c:	a9 f7       	brne	.-22     	; 0x1768 <__mulsf3_pse+0x64>
    177e:	9e 3f       	cpi	r25, 0xFE	; 254
    1780:	51 05       	cpc	r21, r1
    1782:	80 f0       	brcs	.+32     	; 0x17a4 <__mulsf3_pse+0xa0>
    1784:	0c 94 16 0b 	jmp	0x162c	; 0x162c <__fp_inf>
    1788:	0c 94 61 0b 	jmp	0x16c2	; 0x16c2 <__fp_szero>
    178c:	5f 3f       	cpi	r21, 0xFF	; 255
    178e:	e4 f3       	brlt	.-8      	; 0x1788 <__mulsf3_pse+0x84>
    1790:	98 3e       	cpi	r25, 0xE8	; 232
    1792:	d4 f3       	brlt	.-12     	; 0x1788 <__mulsf3_pse+0x84>
    1794:	86 95       	lsr	r24
    1796:	77 95       	ror	r23
    1798:	67 95       	ror	r22
    179a:	b7 95       	ror	r27
    179c:	f7 95       	ror	r31
    179e:	e7 95       	ror	r30
    17a0:	9f 5f       	subi	r25, 0xFF	; 255
    17a2:	c1 f7       	brne	.-16     	; 0x1794 <__mulsf3_pse+0x90>
    17a4:	fe 2b       	or	r31, r30
    17a6:	88 0f       	add	r24, r24
    17a8:	91 1d       	adc	r25, r1
    17aa:	96 95       	lsr	r25
    17ac:	87 95       	ror	r24
    17ae:	97 f9       	bld	r25, 7
    17b0:	08 95       	ret

000017b2 <vfprintf>:
    17b2:	a0 e1       	ldi	r26, 0x10	; 16
    17b4:	b0 e0       	ldi	r27, 0x00	; 0
    17b6:	ef ed       	ldi	r30, 0xDF	; 223
    17b8:	fb e0       	ldi	r31, 0x0B	; 11
    17ba:	0c 94 56 0f 	jmp	0x1eac	; 0x1eac <__prologue_saves__>
    17be:	7c 01       	movw	r14, r24
    17c0:	1b 01       	movw	r2, r22
    17c2:	6a 01       	movw	r12, r20
    17c4:	fc 01       	movw	r30, r24
    17c6:	17 82       	std	Z+7, r1	; 0x07
    17c8:	16 82       	std	Z+6, r1	; 0x06
    17ca:	83 81       	ldd	r24, Z+3	; 0x03
    17cc:	81 ff       	sbrs	r24, 1
    17ce:	44 c3       	rjmp	.+1672   	; 0x1e58 <vfprintf+0x6a6>
    17d0:	9e 01       	movw	r18, r28
    17d2:	2f 5f       	subi	r18, 0xFF	; 255
    17d4:	3f 4f       	sbci	r19, 0xFF	; 255
    17d6:	39 01       	movw	r6, r18
    17d8:	f7 01       	movw	r30, r14
    17da:	93 81       	ldd	r25, Z+3	; 0x03
    17dc:	f1 01       	movw	r30, r2
    17de:	93 fd       	sbrc	r25, 3
    17e0:	85 91       	lpm	r24, Z+
    17e2:	93 ff       	sbrs	r25, 3
    17e4:	81 91       	ld	r24, Z+
    17e6:	1f 01       	movw	r2, r30
    17e8:	88 23       	and	r24, r24
    17ea:	09 f4       	brne	.+2      	; 0x17ee <vfprintf+0x3c>
    17ec:	31 c3       	rjmp	.+1634   	; 0x1e50 <vfprintf+0x69e>
    17ee:	85 32       	cpi	r24, 0x25	; 37
    17f0:	39 f4       	brne	.+14     	; 0x1800 <vfprintf+0x4e>
    17f2:	93 fd       	sbrc	r25, 3
    17f4:	85 91       	lpm	r24, Z+
    17f6:	93 ff       	sbrs	r25, 3
    17f8:	81 91       	ld	r24, Z+
    17fa:	1f 01       	movw	r2, r30
    17fc:	85 32       	cpi	r24, 0x25	; 37
    17fe:	39 f4       	brne	.+14     	; 0x180e <vfprintf+0x5c>
    1800:	b7 01       	movw	r22, r14
    1802:	90 e0       	ldi	r25, 0x00	; 0
    1804:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1808:	56 01       	movw	r10, r12
    180a:	65 01       	movw	r12, r10
    180c:	e5 cf       	rjmp	.-54     	; 0x17d8 <vfprintf+0x26>
    180e:	10 e0       	ldi	r17, 0x00	; 0
    1810:	51 2c       	mov	r5, r1
    1812:	91 2c       	mov	r9, r1
    1814:	ff e1       	ldi	r31, 0x1F	; 31
    1816:	f9 15       	cp	r31, r9
    1818:	d8 f0       	brcs	.+54     	; 0x1850 <vfprintf+0x9e>
    181a:	8b 32       	cpi	r24, 0x2B	; 43
    181c:	79 f0       	breq	.+30     	; 0x183c <vfprintf+0x8a>
    181e:	38 f4       	brcc	.+14     	; 0x182e <vfprintf+0x7c>
    1820:	80 32       	cpi	r24, 0x20	; 32
    1822:	79 f0       	breq	.+30     	; 0x1842 <vfprintf+0x90>
    1824:	83 32       	cpi	r24, 0x23	; 35
    1826:	a1 f4       	brne	.+40     	; 0x1850 <vfprintf+0x9e>
    1828:	f9 2d       	mov	r31, r9
    182a:	f0 61       	ori	r31, 0x10	; 16
    182c:	2e c0       	rjmp	.+92     	; 0x188a <vfprintf+0xd8>
    182e:	8d 32       	cpi	r24, 0x2D	; 45
    1830:	61 f0       	breq	.+24     	; 0x184a <vfprintf+0x98>
    1832:	80 33       	cpi	r24, 0x30	; 48
    1834:	69 f4       	brne	.+26     	; 0x1850 <vfprintf+0x9e>
    1836:	29 2d       	mov	r18, r9
    1838:	21 60       	ori	r18, 0x01	; 1
    183a:	2d c0       	rjmp	.+90     	; 0x1896 <vfprintf+0xe4>
    183c:	39 2d       	mov	r19, r9
    183e:	32 60       	ori	r19, 0x02	; 2
    1840:	93 2e       	mov	r9, r19
    1842:	89 2d       	mov	r24, r9
    1844:	84 60       	ori	r24, 0x04	; 4
    1846:	98 2e       	mov	r9, r24
    1848:	2a c0       	rjmp	.+84     	; 0x189e <vfprintf+0xec>
    184a:	e9 2d       	mov	r30, r9
    184c:	e8 60       	ori	r30, 0x08	; 8
    184e:	15 c0       	rjmp	.+42     	; 0x187a <vfprintf+0xc8>
    1850:	97 fc       	sbrc	r9, 7
    1852:	2d c0       	rjmp	.+90     	; 0x18ae <vfprintf+0xfc>
    1854:	20 ed       	ldi	r18, 0xD0	; 208
    1856:	28 0f       	add	r18, r24
    1858:	2a 30       	cpi	r18, 0x0A	; 10
    185a:	88 f4       	brcc	.+34     	; 0x187e <vfprintf+0xcc>
    185c:	96 fe       	sbrs	r9, 6
    185e:	06 c0       	rjmp	.+12     	; 0x186c <vfprintf+0xba>
    1860:	3a e0       	ldi	r19, 0x0A	; 10
    1862:	13 9f       	mul	r17, r19
    1864:	20 0d       	add	r18, r0
    1866:	11 24       	eor	r1, r1
    1868:	12 2f       	mov	r17, r18
    186a:	19 c0       	rjmp	.+50     	; 0x189e <vfprintf+0xec>
    186c:	8a e0       	ldi	r24, 0x0A	; 10
    186e:	58 9e       	mul	r5, r24
    1870:	20 0d       	add	r18, r0
    1872:	11 24       	eor	r1, r1
    1874:	52 2e       	mov	r5, r18
    1876:	e9 2d       	mov	r30, r9
    1878:	e0 62       	ori	r30, 0x20	; 32
    187a:	9e 2e       	mov	r9, r30
    187c:	10 c0       	rjmp	.+32     	; 0x189e <vfprintf+0xec>
    187e:	8e 32       	cpi	r24, 0x2E	; 46
    1880:	31 f4       	brne	.+12     	; 0x188e <vfprintf+0xdc>
    1882:	96 fc       	sbrc	r9, 6
    1884:	e5 c2       	rjmp	.+1482   	; 0x1e50 <vfprintf+0x69e>
    1886:	f9 2d       	mov	r31, r9
    1888:	f0 64       	ori	r31, 0x40	; 64
    188a:	9f 2e       	mov	r9, r31
    188c:	08 c0       	rjmp	.+16     	; 0x189e <vfprintf+0xec>
    188e:	8c 36       	cpi	r24, 0x6C	; 108
    1890:	21 f4       	brne	.+8      	; 0x189a <vfprintf+0xe8>
    1892:	29 2d       	mov	r18, r9
    1894:	20 68       	ori	r18, 0x80	; 128
    1896:	92 2e       	mov	r9, r18
    1898:	02 c0       	rjmp	.+4      	; 0x189e <vfprintf+0xec>
    189a:	88 36       	cpi	r24, 0x68	; 104
    189c:	41 f4       	brne	.+16     	; 0x18ae <vfprintf+0xfc>
    189e:	f1 01       	movw	r30, r2
    18a0:	93 fd       	sbrc	r25, 3
    18a2:	85 91       	lpm	r24, Z+
    18a4:	93 ff       	sbrs	r25, 3
    18a6:	81 91       	ld	r24, Z+
    18a8:	1f 01       	movw	r2, r30
    18aa:	81 11       	cpse	r24, r1
    18ac:	b3 cf       	rjmp	.-154    	; 0x1814 <vfprintf+0x62>
    18ae:	9b eb       	ldi	r25, 0xBB	; 187
    18b0:	98 0f       	add	r25, r24
    18b2:	93 30       	cpi	r25, 0x03	; 3
    18b4:	20 f4       	brcc	.+8      	; 0x18be <vfprintf+0x10c>
    18b6:	99 2d       	mov	r25, r9
    18b8:	90 61       	ori	r25, 0x10	; 16
    18ba:	80 5e       	subi	r24, 0xE0	; 224
    18bc:	07 c0       	rjmp	.+14     	; 0x18cc <vfprintf+0x11a>
    18be:	9b e9       	ldi	r25, 0x9B	; 155
    18c0:	98 0f       	add	r25, r24
    18c2:	93 30       	cpi	r25, 0x03	; 3
    18c4:	08 f0       	brcs	.+2      	; 0x18c8 <vfprintf+0x116>
    18c6:	66 c1       	rjmp	.+716    	; 0x1b94 <vfprintf+0x3e2>
    18c8:	99 2d       	mov	r25, r9
    18ca:	9f 7e       	andi	r25, 0xEF	; 239
    18cc:	96 ff       	sbrs	r25, 6
    18ce:	16 e0       	ldi	r17, 0x06	; 6
    18d0:	9f 73       	andi	r25, 0x3F	; 63
    18d2:	99 2e       	mov	r9, r25
    18d4:	85 36       	cpi	r24, 0x65	; 101
    18d6:	19 f4       	brne	.+6      	; 0x18de <vfprintf+0x12c>
    18d8:	90 64       	ori	r25, 0x40	; 64
    18da:	99 2e       	mov	r9, r25
    18dc:	08 c0       	rjmp	.+16     	; 0x18ee <vfprintf+0x13c>
    18de:	86 36       	cpi	r24, 0x66	; 102
    18e0:	21 f4       	brne	.+8      	; 0x18ea <vfprintf+0x138>
    18e2:	39 2f       	mov	r19, r25
    18e4:	30 68       	ori	r19, 0x80	; 128
    18e6:	93 2e       	mov	r9, r19
    18e8:	02 c0       	rjmp	.+4      	; 0x18ee <vfprintf+0x13c>
    18ea:	11 11       	cpse	r17, r1
    18ec:	11 50       	subi	r17, 0x01	; 1
    18ee:	97 fe       	sbrs	r9, 7
    18f0:	07 c0       	rjmp	.+14     	; 0x1900 <vfprintf+0x14e>
    18f2:	1c 33       	cpi	r17, 0x3C	; 60
    18f4:	50 f4       	brcc	.+20     	; 0x190a <vfprintf+0x158>
    18f6:	44 24       	eor	r4, r4
    18f8:	43 94       	inc	r4
    18fa:	41 0e       	add	r4, r17
    18fc:	27 e0       	ldi	r18, 0x07	; 7
    18fe:	0b c0       	rjmp	.+22     	; 0x1916 <vfprintf+0x164>
    1900:	18 30       	cpi	r17, 0x08	; 8
    1902:	38 f0       	brcs	.+14     	; 0x1912 <vfprintf+0x160>
    1904:	27 e0       	ldi	r18, 0x07	; 7
    1906:	17 e0       	ldi	r17, 0x07	; 7
    1908:	05 c0       	rjmp	.+10     	; 0x1914 <vfprintf+0x162>
    190a:	27 e0       	ldi	r18, 0x07	; 7
    190c:	9c e3       	ldi	r25, 0x3C	; 60
    190e:	49 2e       	mov	r4, r25
    1910:	02 c0       	rjmp	.+4      	; 0x1916 <vfprintf+0x164>
    1912:	21 2f       	mov	r18, r17
    1914:	41 2c       	mov	r4, r1
    1916:	56 01       	movw	r10, r12
    1918:	84 e0       	ldi	r24, 0x04	; 4
    191a:	a8 0e       	add	r10, r24
    191c:	b1 1c       	adc	r11, r1
    191e:	f6 01       	movw	r30, r12
    1920:	60 81       	ld	r22, Z
    1922:	71 81       	ldd	r23, Z+1	; 0x01
    1924:	82 81       	ldd	r24, Z+2	; 0x02
    1926:	93 81       	ldd	r25, Z+3	; 0x03
    1928:	04 2d       	mov	r16, r4
    192a:	a3 01       	movw	r20, r6
    192c:	0e 94 8d 0f 	call	0x1f1a	; 0x1f1a <__ftoa_engine>
    1930:	6c 01       	movw	r12, r24
    1932:	f9 81       	ldd	r31, Y+1	; 0x01
    1934:	fc 87       	std	Y+12, r31	; 0x0c
    1936:	f0 ff       	sbrs	r31, 0
    1938:	02 c0       	rjmp	.+4      	; 0x193e <vfprintf+0x18c>
    193a:	f3 ff       	sbrs	r31, 3
    193c:	06 c0       	rjmp	.+12     	; 0x194a <vfprintf+0x198>
    193e:	91 fc       	sbrc	r9, 1
    1940:	06 c0       	rjmp	.+12     	; 0x194e <vfprintf+0x19c>
    1942:	92 fe       	sbrs	r9, 2
    1944:	06 c0       	rjmp	.+12     	; 0x1952 <vfprintf+0x1a0>
    1946:	00 e2       	ldi	r16, 0x20	; 32
    1948:	05 c0       	rjmp	.+10     	; 0x1954 <vfprintf+0x1a2>
    194a:	0d e2       	ldi	r16, 0x2D	; 45
    194c:	03 c0       	rjmp	.+6      	; 0x1954 <vfprintf+0x1a2>
    194e:	0b e2       	ldi	r16, 0x2B	; 43
    1950:	01 c0       	rjmp	.+2      	; 0x1954 <vfprintf+0x1a2>
    1952:	00 e0       	ldi	r16, 0x00	; 0
    1954:	8c 85       	ldd	r24, Y+12	; 0x0c
    1956:	8c 70       	andi	r24, 0x0C	; 12
    1958:	19 f0       	breq	.+6      	; 0x1960 <vfprintf+0x1ae>
    195a:	01 11       	cpse	r16, r1
    195c:	5a c2       	rjmp	.+1204   	; 0x1e12 <vfprintf+0x660>
    195e:	9b c2       	rjmp	.+1334   	; 0x1e96 <vfprintf+0x6e4>
    1960:	97 fe       	sbrs	r9, 7
    1962:	10 c0       	rjmp	.+32     	; 0x1984 <vfprintf+0x1d2>
    1964:	4c 0c       	add	r4, r12
    1966:	fc 85       	ldd	r31, Y+12	; 0x0c
    1968:	f4 ff       	sbrs	r31, 4
    196a:	04 c0       	rjmp	.+8      	; 0x1974 <vfprintf+0x1c2>
    196c:	8a 81       	ldd	r24, Y+2	; 0x02
    196e:	81 33       	cpi	r24, 0x31	; 49
    1970:	09 f4       	brne	.+2      	; 0x1974 <vfprintf+0x1c2>
    1972:	4a 94       	dec	r4
    1974:	14 14       	cp	r1, r4
    1976:	74 f5       	brge	.+92     	; 0x19d4 <vfprintf+0x222>
    1978:	28 e0       	ldi	r18, 0x08	; 8
    197a:	24 15       	cp	r18, r4
    197c:	78 f5       	brcc	.+94     	; 0x19dc <vfprintf+0x22a>
    197e:	88 e0       	ldi	r24, 0x08	; 8
    1980:	48 2e       	mov	r4, r24
    1982:	2c c0       	rjmp	.+88     	; 0x19dc <vfprintf+0x22a>
    1984:	96 fc       	sbrc	r9, 6
    1986:	2a c0       	rjmp	.+84     	; 0x19dc <vfprintf+0x22a>
    1988:	81 2f       	mov	r24, r17
    198a:	90 e0       	ldi	r25, 0x00	; 0
    198c:	8c 15       	cp	r24, r12
    198e:	9d 05       	cpc	r25, r13
    1990:	9c f0       	brlt	.+38     	; 0x19b8 <vfprintf+0x206>
    1992:	3c ef       	ldi	r19, 0xFC	; 252
    1994:	c3 16       	cp	r12, r19
    1996:	3f ef       	ldi	r19, 0xFF	; 255
    1998:	d3 06       	cpc	r13, r19
    199a:	74 f0       	brlt	.+28     	; 0x19b8 <vfprintf+0x206>
    199c:	89 2d       	mov	r24, r9
    199e:	80 68       	ori	r24, 0x80	; 128
    19a0:	98 2e       	mov	r9, r24
    19a2:	0a c0       	rjmp	.+20     	; 0x19b8 <vfprintf+0x206>
    19a4:	e2 e0       	ldi	r30, 0x02	; 2
    19a6:	f0 e0       	ldi	r31, 0x00	; 0
    19a8:	ec 0f       	add	r30, r28
    19aa:	fd 1f       	adc	r31, r29
    19ac:	e1 0f       	add	r30, r17
    19ae:	f1 1d       	adc	r31, r1
    19b0:	80 81       	ld	r24, Z
    19b2:	80 33       	cpi	r24, 0x30	; 48
    19b4:	19 f4       	brne	.+6      	; 0x19bc <vfprintf+0x20a>
    19b6:	11 50       	subi	r17, 0x01	; 1
    19b8:	11 11       	cpse	r17, r1
    19ba:	f4 cf       	rjmp	.-24     	; 0x19a4 <vfprintf+0x1f2>
    19bc:	97 fe       	sbrs	r9, 7
    19be:	0e c0       	rjmp	.+28     	; 0x19dc <vfprintf+0x22a>
    19c0:	44 24       	eor	r4, r4
    19c2:	43 94       	inc	r4
    19c4:	41 0e       	add	r4, r17
    19c6:	81 2f       	mov	r24, r17
    19c8:	90 e0       	ldi	r25, 0x00	; 0
    19ca:	c8 16       	cp	r12, r24
    19cc:	d9 06       	cpc	r13, r25
    19ce:	2c f4       	brge	.+10     	; 0x19da <vfprintf+0x228>
    19d0:	1c 19       	sub	r17, r12
    19d2:	04 c0       	rjmp	.+8      	; 0x19dc <vfprintf+0x22a>
    19d4:	44 24       	eor	r4, r4
    19d6:	43 94       	inc	r4
    19d8:	01 c0       	rjmp	.+2      	; 0x19dc <vfprintf+0x22a>
    19da:	10 e0       	ldi	r17, 0x00	; 0
    19dc:	97 fe       	sbrs	r9, 7
    19de:	06 c0       	rjmp	.+12     	; 0x19ec <vfprintf+0x23a>
    19e0:	1c 14       	cp	r1, r12
    19e2:	1d 04       	cpc	r1, r13
    19e4:	34 f4       	brge	.+12     	; 0x19f2 <vfprintf+0x240>
    19e6:	c6 01       	movw	r24, r12
    19e8:	01 96       	adiw	r24, 0x01	; 1
    19ea:	05 c0       	rjmp	.+10     	; 0x19f6 <vfprintf+0x244>
    19ec:	85 e0       	ldi	r24, 0x05	; 5
    19ee:	90 e0       	ldi	r25, 0x00	; 0
    19f0:	02 c0       	rjmp	.+4      	; 0x19f6 <vfprintf+0x244>
    19f2:	81 e0       	ldi	r24, 0x01	; 1
    19f4:	90 e0       	ldi	r25, 0x00	; 0
    19f6:	01 11       	cpse	r16, r1
    19f8:	01 96       	adiw	r24, 0x01	; 1
    19fa:	11 23       	and	r17, r17
    19fc:	31 f0       	breq	.+12     	; 0x1a0a <vfprintf+0x258>
    19fe:	21 2f       	mov	r18, r17
    1a00:	30 e0       	ldi	r19, 0x00	; 0
    1a02:	2f 5f       	subi	r18, 0xFF	; 255
    1a04:	3f 4f       	sbci	r19, 0xFF	; 255
    1a06:	82 0f       	add	r24, r18
    1a08:	93 1f       	adc	r25, r19
    1a0a:	25 2d       	mov	r18, r5
    1a0c:	30 e0       	ldi	r19, 0x00	; 0
    1a0e:	82 17       	cp	r24, r18
    1a10:	93 07       	cpc	r25, r19
    1a12:	14 f4       	brge	.+4      	; 0x1a18 <vfprintf+0x266>
    1a14:	58 1a       	sub	r5, r24
    1a16:	01 c0       	rjmp	.+2      	; 0x1a1a <vfprintf+0x268>
    1a18:	51 2c       	mov	r5, r1
    1a1a:	89 2d       	mov	r24, r9
    1a1c:	89 70       	andi	r24, 0x09	; 9
    1a1e:	49 f4       	brne	.+18     	; 0x1a32 <vfprintf+0x280>
    1a20:	55 20       	and	r5, r5
    1a22:	39 f0       	breq	.+14     	; 0x1a32 <vfprintf+0x280>
    1a24:	b7 01       	movw	r22, r14
    1a26:	80 e2       	ldi	r24, 0x20	; 32
    1a28:	90 e0       	ldi	r25, 0x00	; 0
    1a2a:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1a2e:	5a 94       	dec	r5
    1a30:	f7 cf       	rjmp	.-18     	; 0x1a20 <vfprintf+0x26e>
    1a32:	00 23       	and	r16, r16
    1a34:	29 f0       	breq	.+10     	; 0x1a40 <vfprintf+0x28e>
    1a36:	b7 01       	movw	r22, r14
    1a38:	80 2f       	mov	r24, r16
    1a3a:	90 e0       	ldi	r25, 0x00	; 0
    1a3c:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1a40:	93 fc       	sbrc	r9, 3
    1a42:	09 c0       	rjmp	.+18     	; 0x1a56 <vfprintf+0x2a4>
    1a44:	55 20       	and	r5, r5
    1a46:	39 f0       	breq	.+14     	; 0x1a56 <vfprintf+0x2a4>
    1a48:	b7 01       	movw	r22, r14
    1a4a:	80 e3       	ldi	r24, 0x30	; 48
    1a4c:	90 e0       	ldi	r25, 0x00	; 0
    1a4e:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1a52:	5a 94       	dec	r5
    1a54:	f7 cf       	rjmp	.-18     	; 0x1a44 <vfprintf+0x292>
    1a56:	97 fe       	sbrs	r9, 7
    1a58:	4c c0       	rjmp	.+152    	; 0x1af2 <vfprintf+0x340>
    1a5a:	46 01       	movw	r8, r12
    1a5c:	d7 fe       	sbrs	r13, 7
    1a5e:	02 c0       	rjmp	.+4      	; 0x1a64 <vfprintf+0x2b2>
    1a60:	81 2c       	mov	r8, r1
    1a62:	91 2c       	mov	r9, r1
    1a64:	c6 01       	movw	r24, r12
    1a66:	88 19       	sub	r24, r8
    1a68:	99 09       	sbc	r25, r9
    1a6a:	f3 01       	movw	r30, r6
    1a6c:	e8 0f       	add	r30, r24
    1a6e:	f9 1f       	adc	r31, r25
    1a70:	fe 87       	std	Y+14, r31	; 0x0e
    1a72:	ed 87       	std	Y+13, r30	; 0x0d
    1a74:	96 01       	movw	r18, r12
    1a76:	24 19       	sub	r18, r4
    1a78:	31 09       	sbc	r19, r1
    1a7a:	38 8b       	std	Y+16, r19	; 0x10
    1a7c:	2f 87       	std	Y+15, r18	; 0x0f
    1a7e:	01 2f       	mov	r16, r17
    1a80:	10 e0       	ldi	r17, 0x00	; 0
    1a82:	11 95       	neg	r17
    1a84:	01 95       	neg	r16
    1a86:	11 09       	sbc	r17, r1
    1a88:	3f ef       	ldi	r19, 0xFF	; 255
    1a8a:	83 16       	cp	r8, r19
    1a8c:	93 06       	cpc	r9, r19
    1a8e:	29 f4       	brne	.+10     	; 0x1a9a <vfprintf+0x2e8>
    1a90:	b7 01       	movw	r22, r14
    1a92:	8e e2       	ldi	r24, 0x2E	; 46
    1a94:	90 e0       	ldi	r25, 0x00	; 0
    1a96:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1a9a:	c8 14       	cp	r12, r8
    1a9c:	d9 04       	cpc	r13, r9
    1a9e:	4c f0       	brlt	.+18     	; 0x1ab2 <vfprintf+0x300>
    1aa0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1aa2:	98 89       	ldd	r25, Y+16	; 0x10
    1aa4:	88 15       	cp	r24, r8
    1aa6:	99 05       	cpc	r25, r9
    1aa8:	24 f4       	brge	.+8      	; 0x1ab2 <vfprintf+0x300>
    1aaa:	ed 85       	ldd	r30, Y+13	; 0x0d
    1aac:	fe 85       	ldd	r31, Y+14	; 0x0e
    1aae:	81 81       	ldd	r24, Z+1	; 0x01
    1ab0:	01 c0       	rjmp	.+2      	; 0x1ab4 <vfprintf+0x302>
    1ab2:	80 e3       	ldi	r24, 0x30	; 48
    1ab4:	f1 e0       	ldi	r31, 0x01	; 1
    1ab6:	8f 1a       	sub	r8, r31
    1ab8:	91 08       	sbc	r9, r1
    1aba:	2d 85       	ldd	r18, Y+13	; 0x0d
    1abc:	3e 85       	ldd	r19, Y+14	; 0x0e
    1abe:	2f 5f       	subi	r18, 0xFF	; 255
    1ac0:	3f 4f       	sbci	r19, 0xFF	; 255
    1ac2:	3e 87       	std	Y+14, r19	; 0x0e
    1ac4:	2d 87       	std	Y+13, r18	; 0x0d
    1ac6:	80 16       	cp	r8, r16
    1ac8:	91 06       	cpc	r9, r17
    1aca:	2c f0       	brlt	.+10     	; 0x1ad6 <vfprintf+0x324>
    1acc:	b7 01       	movw	r22, r14
    1ace:	90 e0       	ldi	r25, 0x00	; 0
    1ad0:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1ad4:	d9 cf       	rjmp	.-78     	; 0x1a88 <vfprintf+0x2d6>
    1ad6:	c8 14       	cp	r12, r8
    1ad8:	d9 04       	cpc	r13, r9
    1ada:	41 f4       	brne	.+16     	; 0x1aec <vfprintf+0x33a>
    1adc:	9a 81       	ldd	r25, Y+2	; 0x02
    1ade:	96 33       	cpi	r25, 0x36	; 54
    1ae0:	20 f4       	brcc	.+8      	; 0x1aea <vfprintf+0x338>
    1ae2:	95 33       	cpi	r25, 0x35	; 53
    1ae4:	19 f4       	brne	.+6      	; 0x1aec <vfprintf+0x33a>
    1ae6:	3c 85       	ldd	r19, Y+12	; 0x0c
    1ae8:	34 ff       	sbrs	r19, 4
    1aea:	81 e3       	ldi	r24, 0x31	; 49
    1aec:	b7 01       	movw	r22, r14
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	4e c0       	rjmp	.+156    	; 0x1b8e <vfprintf+0x3dc>
    1af2:	8a 81       	ldd	r24, Y+2	; 0x02
    1af4:	81 33       	cpi	r24, 0x31	; 49
    1af6:	19 f0       	breq	.+6      	; 0x1afe <vfprintf+0x34c>
    1af8:	9c 85       	ldd	r25, Y+12	; 0x0c
    1afa:	9f 7e       	andi	r25, 0xEF	; 239
    1afc:	9c 87       	std	Y+12, r25	; 0x0c
    1afe:	b7 01       	movw	r22, r14
    1b00:	90 e0       	ldi	r25, 0x00	; 0
    1b02:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1b06:	11 11       	cpse	r17, r1
    1b08:	05 c0       	rjmp	.+10     	; 0x1b14 <vfprintf+0x362>
    1b0a:	94 fc       	sbrc	r9, 4
    1b0c:	18 c0       	rjmp	.+48     	; 0x1b3e <vfprintf+0x38c>
    1b0e:	85 e6       	ldi	r24, 0x65	; 101
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	17 c0       	rjmp	.+46     	; 0x1b42 <vfprintf+0x390>
    1b14:	b7 01       	movw	r22, r14
    1b16:	8e e2       	ldi	r24, 0x2E	; 46
    1b18:	90 e0       	ldi	r25, 0x00	; 0
    1b1a:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1b1e:	1e 5f       	subi	r17, 0xFE	; 254
    1b20:	82 e0       	ldi	r24, 0x02	; 2
    1b22:	01 e0       	ldi	r16, 0x01	; 1
    1b24:	08 0f       	add	r16, r24
    1b26:	f3 01       	movw	r30, r6
    1b28:	e8 0f       	add	r30, r24
    1b2a:	f1 1d       	adc	r31, r1
    1b2c:	80 81       	ld	r24, Z
    1b2e:	b7 01       	movw	r22, r14
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1b36:	80 2f       	mov	r24, r16
    1b38:	01 13       	cpse	r16, r17
    1b3a:	f3 cf       	rjmp	.-26     	; 0x1b22 <vfprintf+0x370>
    1b3c:	e6 cf       	rjmp	.-52     	; 0x1b0a <vfprintf+0x358>
    1b3e:	85 e4       	ldi	r24, 0x45	; 69
    1b40:	90 e0       	ldi	r25, 0x00	; 0
    1b42:	b7 01       	movw	r22, r14
    1b44:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1b48:	d7 fc       	sbrc	r13, 7
    1b4a:	06 c0       	rjmp	.+12     	; 0x1b58 <vfprintf+0x3a6>
    1b4c:	c1 14       	cp	r12, r1
    1b4e:	d1 04       	cpc	r13, r1
    1b50:	41 f4       	brne	.+16     	; 0x1b62 <vfprintf+0x3b0>
    1b52:	ec 85       	ldd	r30, Y+12	; 0x0c
    1b54:	e4 ff       	sbrs	r30, 4
    1b56:	05 c0       	rjmp	.+10     	; 0x1b62 <vfprintf+0x3b0>
    1b58:	d1 94       	neg	r13
    1b5a:	c1 94       	neg	r12
    1b5c:	d1 08       	sbc	r13, r1
    1b5e:	8d e2       	ldi	r24, 0x2D	; 45
    1b60:	01 c0       	rjmp	.+2      	; 0x1b64 <vfprintf+0x3b2>
    1b62:	8b e2       	ldi	r24, 0x2B	; 43
    1b64:	b7 01       	movw	r22, r14
    1b66:	90 e0       	ldi	r25, 0x00	; 0
    1b68:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1b6c:	80 e3       	ldi	r24, 0x30	; 48
    1b6e:	2a e0       	ldi	r18, 0x0A	; 10
    1b70:	c2 16       	cp	r12, r18
    1b72:	d1 04       	cpc	r13, r1
    1b74:	2c f0       	brlt	.+10     	; 0x1b80 <vfprintf+0x3ce>
    1b76:	8f 5f       	subi	r24, 0xFF	; 255
    1b78:	fa e0       	ldi	r31, 0x0A	; 10
    1b7a:	cf 1a       	sub	r12, r31
    1b7c:	d1 08       	sbc	r13, r1
    1b7e:	f7 cf       	rjmp	.-18     	; 0x1b6e <vfprintf+0x3bc>
    1b80:	b7 01       	movw	r22, r14
    1b82:	90 e0       	ldi	r25, 0x00	; 0
    1b84:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1b88:	b7 01       	movw	r22, r14
    1b8a:	c6 01       	movw	r24, r12
    1b8c:	c0 96       	adiw	r24, 0x30	; 48
    1b8e:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1b92:	54 c1       	rjmp	.+680    	; 0x1e3c <vfprintf+0x68a>
    1b94:	83 36       	cpi	r24, 0x63	; 99
    1b96:	31 f0       	breq	.+12     	; 0x1ba4 <vfprintf+0x3f2>
    1b98:	83 37       	cpi	r24, 0x73	; 115
    1b9a:	79 f0       	breq	.+30     	; 0x1bba <vfprintf+0x408>
    1b9c:	83 35       	cpi	r24, 0x53	; 83
    1b9e:	09 f0       	breq	.+2      	; 0x1ba2 <vfprintf+0x3f0>
    1ba0:	56 c0       	rjmp	.+172    	; 0x1c4e <vfprintf+0x49c>
    1ba2:	20 c0       	rjmp	.+64     	; 0x1be4 <vfprintf+0x432>
    1ba4:	56 01       	movw	r10, r12
    1ba6:	32 e0       	ldi	r19, 0x02	; 2
    1ba8:	a3 0e       	add	r10, r19
    1baa:	b1 1c       	adc	r11, r1
    1bac:	f6 01       	movw	r30, r12
    1bae:	80 81       	ld	r24, Z
    1bb0:	89 83       	std	Y+1, r24	; 0x01
    1bb2:	01 e0       	ldi	r16, 0x01	; 1
    1bb4:	10 e0       	ldi	r17, 0x00	; 0
    1bb6:	63 01       	movw	r12, r6
    1bb8:	12 c0       	rjmp	.+36     	; 0x1bde <vfprintf+0x42c>
    1bba:	56 01       	movw	r10, r12
    1bbc:	f2 e0       	ldi	r31, 0x02	; 2
    1bbe:	af 0e       	add	r10, r31
    1bc0:	b1 1c       	adc	r11, r1
    1bc2:	f6 01       	movw	r30, r12
    1bc4:	c0 80       	ld	r12, Z
    1bc6:	d1 80       	ldd	r13, Z+1	; 0x01
    1bc8:	96 fe       	sbrs	r9, 6
    1bca:	03 c0       	rjmp	.+6      	; 0x1bd2 <vfprintf+0x420>
    1bcc:	61 2f       	mov	r22, r17
    1bce:	70 e0       	ldi	r23, 0x00	; 0
    1bd0:	02 c0       	rjmp	.+4      	; 0x1bd6 <vfprintf+0x424>
    1bd2:	6f ef       	ldi	r22, 0xFF	; 255
    1bd4:	7f ef       	ldi	r23, 0xFF	; 255
    1bd6:	c6 01       	movw	r24, r12
    1bd8:	0e 94 70 10 	call	0x20e0	; 0x20e0 <strnlen>
    1bdc:	8c 01       	movw	r16, r24
    1bde:	f9 2d       	mov	r31, r9
    1be0:	ff 77       	andi	r31, 0x7F	; 127
    1be2:	14 c0       	rjmp	.+40     	; 0x1c0c <vfprintf+0x45a>
    1be4:	56 01       	movw	r10, r12
    1be6:	22 e0       	ldi	r18, 0x02	; 2
    1be8:	a2 0e       	add	r10, r18
    1bea:	b1 1c       	adc	r11, r1
    1bec:	f6 01       	movw	r30, r12
    1bee:	c0 80       	ld	r12, Z
    1bf0:	d1 80       	ldd	r13, Z+1	; 0x01
    1bf2:	96 fe       	sbrs	r9, 6
    1bf4:	03 c0       	rjmp	.+6      	; 0x1bfc <vfprintf+0x44a>
    1bf6:	61 2f       	mov	r22, r17
    1bf8:	70 e0       	ldi	r23, 0x00	; 0
    1bfa:	02 c0       	rjmp	.+4      	; 0x1c00 <vfprintf+0x44e>
    1bfc:	6f ef       	ldi	r22, 0xFF	; 255
    1bfe:	7f ef       	ldi	r23, 0xFF	; 255
    1c00:	c6 01       	movw	r24, r12
    1c02:	0e 94 65 10 	call	0x20ca	; 0x20ca <strnlen_P>
    1c06:	8c 01       	movw	r16, r24
    1c08:	f9 2d       	mov	r31, r9
    1c0a:	f0 68       	ori	r31, 0x80	; 128
    1c0c:	9f 2e       	mov	r9, r31
    1c0e:	f3 fd       	sbrc	r31, 3
    1c10:	1a c0       	rjmp	.+52     	; 0x1c46 <vfprintf+0x494>
    1c12:	85 2d       	mov	r24, r5
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	08 17       	cp	r16, r24
    1c18:	19 07       	cpc	r17, r25
    1c1a:	a8 f4       	brcc	.+42     	; 0x1c46 <vfprintf+0x494>
    1c1c:	b7 01       	movw	r22, r14
    1c1e:	80 e2       	ldi	r24, 0x20	; 32
    1c20:	90 e0       	ldi	r25, 0x00	; 0
    1c22:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1c26:	5a 94       	dec	r5
    1c28:	f4 cf       	rjmp	.-24     	; 0x1c12 <vfprintf+0x460>
    1c2a:	f6 01       	movw	r30, r12
    1c2c:	97 fc       	sbrc	r9, 7
    1c2e:	85 91       	lpm	r24, Z+
    1c30:	97 fe       	sbrs	r9, 7
    1c32:	81 91       	ld	r24, Z+
    1c34:	6f 01       	movw	r12, r30
    1c36:	b7 01       	movw	r22, r14
    1c38:	90 e0       	ldi	r25, 0x00	; 0
    1c3a:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1c3e:	51 10       	cpse	r5, r1
    1c40:	5a 94       	dec	r5
    1c42:	01 50       	subi	r16, 0x01	; 1
    1c44:	11 09       	sbc	r17, r1
    1c46:	01 15       	cp	r16, r1
    1c48:	11 05       	cpc	r17, r1
    1c4a:	79 f7       	brne	.-34     	; 0x1c2a <vfprintf+0x478>
    1c4c:	f7 c0       	rjmp	.+494    	; 0x1e3c <vfprintf+0x68a>
    1c4e:	84 36       	cpi	r24, 0x64	; 100
    1c50:	11 f0       	breq	.+4      	; 0x1c56 <vfprintf+0x4a4>
    1c52:	89 36       	cpi	r24, 0x69	; 105
    1c54:	61 f5       	brne	.+88     	; 0x1cae <vfprintf+0x4fc>
    1c56:	56 01       	movw	r10, r12
    1c58:	97 fe       	sbrs	r9, 7
    1c5a:	09 c0       	rjmp	.+18     	; 0x1c6e <vfprintf+0x4bc>
    1c5c:	24 e0       	ldi	r18, 0x04	; 4
    1c5e:	a2 0e       	add	r10, r18
    1c60:	b1 1c       	adc	r11, r1
    1c62:	f6 01       	movw	r30, r12
    1c64:	60 81       	ld	r22, Z
    1c66:	71 81       	ldd	r23, Z+1	; 0x01
    1c68:	82 81       	ldd	r24, Z+2	; 0x02
    1c6a:	93 81       	ldd	r25, Z+3	; 0x03
    1c6c:	0a c0       	rjmp	.+20     	; 0x1c82 <vfprintf+0x4d0>
    1c6e:	f2 e0       	ldi	r31, 0x02	; 2
    1c70:	af 0e       	add	r10, r31
    1c72:	b1 1c       	adc	r11, r1
    1c74:	f6 01       	movw	r30, r12
    1c76:	60 81       	ld	r22, Z
    1c78:	71 81       	ldd	r23, Z+1	; 0x01
    1c7a:	07 2e       	mov	r0, r23
    1c7c:	00 0c       	add	r0, r0
    1c7e:	88 0b       	sbc	r24, r24
    1c80:	99 0b       	sbc	r25, r25
    1c82:	f9 2d       	mov	r31, r9
    1c84:	ff 76       	andi	r31, 0x6F	; 111
    1c86:	9f 2e       	mov	r9, r31
    1c88:	97 ff       	sbrs	r25, 7
    1c8a:	09 c0       	rjmp	.+18     	; 0x1c9e <vfprintf+0x4ec>
    1c8c:	90 95       	com	r25
    1c8e:	80 95       	com	r24
    1c90:	70 95       	com	r23
    1c92:	61 95       	neg	r22
    1c94:	7f 4f       	sbci	r23, 0xFF	; 255
    1c96:	8f 4f       	sbci	r24, 0xFF	; 255
    1c98:	9f 4f       	sbci	r25, 0xFF	; 255
    1c9a:	f0 68       	ori	r31, 0x80	; 128
    1c9c:	9f 2e       	mov	r9, r31
    1c9e:	2a e0       	ldi	r18, 0x0A	; 10
    1ca0:	30 e0       	ldi	r19, 0x00	; 0
    1ca2:	a3 01       	movw	r20, r6
    1ca4:	0e 94 e7 10 	call	0x21ce	; 0x21ce <__ultoa_invert>
    1ca8:	c8 2e       	mov	r12, r24
    1caa:	c6 18       	sub	r12, r6
    1cac:	3f c0       	rjmp	.+126    	; 0x1d2c <vfprintf+0x57a>
    1cae:	09 2d       	mov	r16, r9
    1cb0:	85 37       	cpi	r24, 0x75	; 117
    1cb2:	21 f4       	brne	.+8      	; 0x1cbc <vfprintf+0x50a>
    1cb4:	0f 7e       	andi	r16, 0xEF	; 239
    1cb6:	2a e0       	ldi	r18, 0x0A	; 10
    1cb8:	30 e0       	ldi	r19, 0x00	; 0
    1cba:	1d c0       	rjmp	.+58     	; 0x1cf6 <vfprintf+0x544>
    1cbc:	09 7f       	andi	r16, 0xF9	; 249
    1cbe:	8f 36       	cpi	r24, 0x6F	; 111
    1cc0:	91 f0       	breq	.+36     	; 0x1ce6 <vfprintf+0x534>
    1cc2:	18 f4       	brcc	.+6      	; 0x1cca <vfprintf+0x518>
    1cc4:	88 35       	cpi	r24, 0x58	; 88
    1cc6:	59 f0       	breq	.+22     	; 0x1cde <vfprintf+0x52c>
    1cc8:	c3 c0       	rjmp	.+390    	; 0x1e50 <vfprintf+0x69e>
    1cca:	80 37       	cpi	r24, 0x70	; 112
    1ccc:	19 f0       	breq	.+6      	; 0x1cd4 <vfprintf+0x522>
    1cce:	88 37       	cpi	r24, 0x78	; 120
    1cd0:	11 f0       	breq	.+4      	; 0x1cd6 <vfprintf+0x524>
    1cd2:	be c0       	rjmp	.+380    	; 0x1e50 <vfprintf+0x69e>
    1cd4:	00 61       	ori	r16, 0x10	; 16
    1cd6:	04 ff       	sbrs	r16, 4
    1cd8:	09 c0       	rjmp	.+18     	; 0x1cec <vfprintf+0x53a>
    1cda:	04 60       	ori	r16, 0x04	; 4
    1cdc:	07 c0       	rjmp	.+14     	; 0x1cec <vfprintf+0x53a>
    1cde:	94 fe       	sbrs	r9, 4
    1ce0:	08 c0       	rjmp	.+16     	; 0x1cf2 <vfprintf+0x540>
    1ce2:	06 60       	ori	r16, 0x06	; 6
    1ce4:	06 c0       	rjmp	.+12     	; 0x1cf2 <vfprintf+0x540>
    1ce6:	28 e0       	ldi	r18, 0x08	; 8
    1ce8:	30 e0       	ldi	r19, 0x00	; 0
    1cea:	05 c0       	rjmp	.+10     	; 0x1cf6 <vfprintf+0x544>
    1cec:	20 e1       	ldi	r18, 0x10	; 16
    1cee:	30 e0       	ldi	r19, 0x00	; 0
    1cf0:	02 c0       	rjmp	.+4      	; 0x1cf6 <vfprintf+0x544>
    1cf2:	20 e1       	ldi	r18, 0x10	; 16
    1cf4:	32 e0       	ldi	r19, 0x02	; 2
    1cf6:	56 01       	movw	r10, r12
    1cf8:	07 ff       	sbrs	r16, 7
    1cfa:	09 c0       	rjmp	.+18     	; 0x1d0e <vfprintf+0x55c>
    1cfc:	84 e0       	ldi	r24, 0x04	; 4
    1cfe:	a8 0e       	add	r10, r24
    1d00:	b1 1c       	adc	r11, r1
    1d02:	f6 01       	movw	r30, r12
    1d04:	60 81       	ld	r22, Z
    1d06:	71 81       	ldd	r23, Z+1	; 0x01
    1d08:	82 81       	ldd	r24, Z+2	; 0x02
    1d0a:	93 81       	ldd	r25, Z+3	; 0x03
    1d0c:	08 c0       	rjmp	.+16     	; 0x1d1e <vfprintf+0x56c>
    1d0e:	f2 e0       	ldi	r31, 0x02	; 2
    1d10:	af 0e       	add	r10, r31
    1d12:	b1 1c       	adc	r11, r1
    1d14:	f6 01       	movw	r30, r12
    1d16:	60 81       	ld	r22, Z
    1d18:	71 81       	ldd	r23, Z+1	; 0x01
    1d1a:	80 e0       	ldi	r24, 0x00	; 0
    1d1c:	90 e0       	ldi	r25, 0x00	; 0
    1d1e:	a3 01       	movw	r20, r6
    1d20:	0e 94 e7 10 	call	0x21ce	; 0x21ce <__ultoa_invert>
    1d24:	c8 2e       	mov	r12, r24
    1d26:	c6 18       	sub	r12, r6
    1d28:	0f 77       	andi	r16, 0x7F	; 127
    1d2a:	90 2e       	mov	r9, r16
    1d2c:	96 fe       	sbrs	r9, 6
    1d2e:	0b c0       	rjmp	.+22     	; 0x1d46 <vfprintf+0x594>
    1d30:	09 2d       	mov	r16, r9
    1d32:	0e 7f       	andi	r16, 0xFE	; 254
    1d34:	c1 16       	cp	r12, r17
    1d36:	50 f4       	brcc	.+20     	; 0x1d4c <vfprintf+0x59a>
    1d38:	94 fe       	sbrs	r9, 4
    1d3a:	0a c0       	rjmp	.+20     	; 0x1d50 <vfprintf+0x59e>
    1d3c:	92 fc       	sbrc	r9, 2
    1d3e:	08 c0       	rjmp	.+16     	; 0x1d50 <vfprintf+0x59e>
    1d40:	09 2d       	mov	r16, r9
    1d42:	0e 7e       	andi	r16, 0xEE	; 238
    1d44:	05 c0       	rjmp	.+10     	; 0x1d50 <vfprintf+0x59e>
    1d46:	dc 2c       	mov	r13, r12
    1d48:	09 2d       	mov	r16, r9
    1d4a:	03 c0       	rjmp	.+6      	; 0x1d52 <vfprintf+0x5a0>
    1d4c:	dc 2c       	mov	r13, r12
    1d4e:	01 c0       	rjmp	.+2      	; 0x1d52 <vfprintf+0x5a0>
    1d50:	d1 2e       	mov	r13, r17
    1d52:	04 ff       	sbrs	r16, 4
    1d54:	0d c0       	rjmp	.+26     	; 0x1d70 <vfprintf+0x5be>
    1d56:	fe 01       	movw	r30, r28
    1d58:	ec 0d       	add	r30, r12
    1d5a:	f1 1d       	adc	r31, r1
    1d5c:	80 81       	ld	r24, Z
    1d5e:	80 33       	cpi	r24, 0x30	; 48
    1d60:	11 f4       	brne	.+4      	; 0x1d66 <vfprintf+0x5b4>
    1d62:	09 7e       	andi	r16, 0xE9	; 233
    1d64:	09 c0       	rjmp	.+18     	; 0x1d78 <vfprintf+0x5c6>
    1d66:	02 ff       	sbrs	r16, 2
    1d68:	06 c0       	rjmp	.+12     	; 0x1d76 <vfprintf+0x5c4>
    1d6a:	d3 94       	inc	r13
    1d6c:	d3 94       	inc	r13
    1d6e:	04 c0       	rjmp	.+8      	; 0x1d78 <vfprintf+0x5c6>
    1d70:	80 2f       	mov	r24, r16
    1d72:	86 78       	andi	r24, 0x86	; 134
    1d74:	09 f0       	breq	.+2      	; 0x1d78 <vfprintf+0x5c6>
    1d76:	d3 94       	inc	r13
    1d78:	03 fd       	sbrc	r16, 3
    1d7a:	11 c0       	rjmp	.+34     	; 0x1d9e <vfprintf+0x5ec>
    1d7c:	00 ff       	sbrs	r16, 0
    1d7e:	06 c0       	rjmp	.+12     	; 0x1d8c <vfprintf+0x5da>
    1d80:	1c 2d       	mov	r17, r12
    1d82:	d5 14       	cp	r13, r5
    1d84:	80 f4       	brcc	.+32     	; 0x1da6 <vfprintf+0x5f4>
    1d86:	15 0d       	add	r17, r5
    1d88:	1d 19       	sub	r17, r13
    1d8a:	0d c0       	rjmp	.+26     	; 0x1da6 <vfprintf+0x5f4>
    1d8c:	d5 14       	cp	r13, r5
    1d8e:	58 f4       	brcc	.+22     	; 0x1da6 <vfprintf+0x5f4>
    1d90:	b7 01       	movw	r22, r14
    1d92:	80 e2       	ldi	r24, 0x20	; 32
    1d94:	90 e0       	ldi	r25, 0x00	; 0
    1d96:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1d9a:	d3 94       	inc	r13
    1d9c:	f7 cf       	rjmp	.-18     	; 0x1d8c <vfprintf+0x5da>
    1d9e:	d5 14       	cp	r13, r5
    1da0:	10 f4       	brcc	.+4      	; 0x1da6 <vfprintf+0x5f4>
    1da2:	5d 18       	sub	r5, r13
    1da4:	01 c0       	rjmp	.+2      	; 0x1da8 <vfprintf+0x5f6>
    1da6:	51 2c       	mov	r5, r1
    1da8:	04 ff       	sbrs	r16, 4
    1daa:	10 c0       	rjmp	.+32     	; 0x1dcc <vfprintf+0x61a>
    1dac:	b7 01       	movw	r22, r14
    1dae:	80 e3       	ldi	r24, 0x30	; 48
    1db0:	90 e0       	ldi	r25, 0x00	; 0
    1db2:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1db6:	02 ff       	sbrs	r16, 2
    1db8:	17 c0       	rjmp	.+46     	; 0x1de8 <vfprintf+0x636>
    1dba:	01 fd       	sbrc	r16, 1
    1dbc:	03 c0       	rjmp	.+6      	; 0x1dc4 <vfprintf+0x612>
    1dbe:	88 e7       	ldi	r24, 0x78	; 120
    1dc0:	90 e0       	ldi	r25, 0x00	; 0
    1dc2:	02 c0       	rjmp	.+4      	; 0x1dc8 <vfprintf+0x616>
    1dc4:	88 e5       	ldi	r24, 0x58	; 88
    1dc6:	90 e0       	ldi	r25, 0x00	; 0
    1dc8:	b7 01       	movw	r22, r14
    1dca:	0c c0       	rjmp	.+24     	; 0x1de4 <vfprintf+0x632>
    1dcc:	80 2f       	mov	r24, r16
    1dce:	86 78       	andi	r24, 0x86	; 134
    1dd0:	59 f0       	breq	.+22     	; 0x1de8 <vfprintf+0x636>
    1dd2:	01 ff       	sbrs	r16, 1
    1dd4:	02 c0       	rjmp	.+4      	; 0x1dda <vfprintf+0x628>
    1dd6:	8b e2       	ldi	r24, 0x2B	; 43
    1dd8:	01 c0       	rjmp	.+2      	; 0x1ddc <vfprintf+0x62a>
    1dda:	80 e2       	ldi	r24, 0x20	; 32
    1ddc:	07 fd       	sbrc	r16, 7
    1dde:	8d e2       	ldi	r24, 0x2D	; 45
    1de0:	b7 01       	movw	r22, r14
    1de2:	90 e0       	ldi	r25, 0x00	; 0
    1de4:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1de8:	c1 16       	cp	r12, r17
    1dea:	38 f4       	brcc	.+14     	; 0x1dfa <vfprintf+0x648>
    1dec:	b7 01       	movw	r22, r14
    1dee:	80 e3       	ldi	r24, 0x30	; 48
    1df0:	90 e0       	ldi	r25, 0x00	; 0
    1df2:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1df6:	11 50       	subi	r17, 0x01	; 1
    1df8:	f7 cf       	rjmp	.-18     	; 0x1de8 <vfprintf+0x636>
    1dfa:	ca 94       	dec	r12
    1dfc:	f3 01       	movw	r30, r6
    1dfe:	ec 0d       	add	r30, r12
    1e00:	f1 1d       	adc	r31, r1
    1e02:	80 81       	ld	r24, Z
    1e04:	b7 01       	movw	r22, r14
    1e06:	90 e0       	ldi	r25, 0x00	; 0
    1e08:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1e0c:	c1 10       	cpse	r12, r1
    1e0e:	f5 cf       	rjmp	.-22     	; 0x1dfa <vfprintf+0x648>
    1e10:	15 c0       	rjmp	.+42     	; 0x1e3c <vfprintf+0x68a>
    1e12:	f4 e0       	ldi	r31, 0x04	; 4
    1e14:	f5 15       	cp	r31, r5
    1e16:	60 f5       	brcc	.+88     	; 0x1e70 <vfprintf+0x6be>
    1e18:	84 e0       	ldi	r24, 0x04	; 4
    1e1a:	58 1a       	sub	r5, r24
    1e1c:	93 fe       	sbrs	r9, 3
    1e1e:	1f c0       	rjmp	.+62     	; 0x1e5e <vfprintf+0x6ac>
    1e20:	01 11       	cpse	r16, r1
    1e22:	27 c0       	rjmp	.+78     	; 0x1e72 <vfprintf+0x6c0>
    1e24:	2c 85       	ldd	r18, Y+12	; 0x0c
    1e26:	23 ff       	sbrs	r18, 3
    1e28:	2a c0       	rjmp	.+84     	; 0x1e7e <vfprintf+0x6cc>
    1e2a:	0c e6       	ldi	r16, 0x6C	; 108
    1e2c:	10 e0       	ldi	r17, 0x00	; 0
    1e2e:	39 2d       	mov	r19, r9
    1e30:	30 71       	andi	r19, 0x10	; 16
    1e32:	93 2e       	mov	r9, r19
    1e34:	f8 01       	movw	r30, r16
    1e36:	84 91       	lpm	r24, Z
    1e38:	81 11       	cpse	r24, r1
    1e3a:	24 c0       	rjmp	.+72     	; 0x1e84 <vfprintf+0x6d2>
    1e3c:	55 20       	and	r5, r5
    1e3e:	09 f4       	brne	.+2      	; 0x1e42 <vfprintf+0x690>
    1e40:	e4 cc       	rjmp	.-1592   	; 0x180a <vfprintf+0x58>
    1e42:	b7 01       	movw	r22, r14
    1e44:	80 e2       	ldi	r24, 0x20	; 32
    1e46:	90 e0       	ldi	r25, 0x00	; 0
    1e48:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1e4c:	5a 94       	dec	r5
    1e4e:	f6 cf       	rjmp	.-20     	; 0x1e3c <vfprintf+0x68a>
    1e50:	f7 01       	movw	r30, r14
    1e52:	86 81       	ldd	r24, Z+6	; 0x06
    1e54:	97 81       	ldd	r25, Z+7	; 0x07
    1e56:	26 c0       	rjmp	.+76     	; 0x1ea4 <vfprintf+0x6f2>
    1e58:	8f ef       	ldi	r24, 0xFF	; 255
    1e5a:	9f ef       	ldi	r25, 0xFF	; 255
    1e5c:	23 c0       	rjmp	.+70     	; 0x1ea4 <vfprintf+0x6f2>
    1e5e:	b7 01       	movw	r22, r14
    1e60:	80 e2       	ldi	r24, 0x20	; 32
    1e62:	90 e0       	ldi	r25, 0x00	; 0
    1e64:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1e68:	5a 94       	dec	r5
    1e6a:	51 10       	cpse	r5, r1
    1e6c:	f8 cf       	rjmp	.-16     	; 0x1e5e <vfprintf+0x6ac>
    1e6e:	d8 cf       	rjmp	.-80     	; 0x1e20 <vfprintf+0x66e>
    1e70:	51 2c       	mov	r5, r1
    1e72:	b7 01       	movw	r22, r14
    1e74:	80 2f       	mov	r24, r16
    1e76:	90 e0       	ldi	r25, 0x00	; 0
    1e78:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1e7c:	d3 cf       	rjmp	.-90     	; 0x1e24 <vfprintf+0x672>
    1e7e:	00 e7       	ldi	r16, 0x70	; 112
    1e80:	10 e0       	ldi	r17, 0x00	; 0
    1e82:	d5 cf       	rjmp	.-86     	; 0x1e2e <vfprintf+0x67c>
    1e84:	91 10       	cpse	r9, r1
    1e86:	80 52       	subi	r24, 0x20	; 32
    1e88:	b7 01       	movw	r22, r14
    1e8a:	90 e0       	ldi	r25, 0x00	; 0
    1e8c:	0e 94 7b 10 	call	0x20f6	; 0x20f6 <fputc>
    1e90:	0f 5f       	subi	r16, 0xFF	; 255
    1e92:	1f 4f       	sbci	r17, 0xFF	; 255
    1e94:	cf cf       	rjmp	.-98     	; 0x1e34 <vfprintf+0x682>
    1e96:	23 e0       	ldi	r18, 0x03	; 3
    1e98:	25 15       	cp	r18, r5
    1e9a:	10 f4       	brcc	.+4      	; 0x1ea0 <vfprintf+0x6ee>
    1e9c:	83 e0       	ldi	r24, 0x03	; 3
    1e9e:	bd cf       	rjmp	.-134    	; 0x1e1a <vfprintf+0x668>
    1ea0:	51 2c       	mov	r5, r1
    1ea2:	c0 cf       	rjmp	.-128    	; 0x1e24 <vfprintf+0x672>
    1ea4:	60 96       	adiw	r28, 0x10	; 16
    1ea6:	e2 e1       	ldi	r30, 0x12	; 18
    1ea8:	0c 94 72 0f 	jmp	0x1ee4	; 0x1ee4 <__epilogue_restores__>

00001eac <__prologue_saves__>:
    1eac:	2f 92       	push	r2
    1eae:	3f 92       	push	r3
    1eb0:	4f 92       	push	r4
    1eb2:	5f 92       	push	r5
    1eb4:	6f 92       	push	r6
    1eb6:	7f 92       	push	r7
    1eb8:	8f 92       	push	r8
    1eba:	9f 92       	push	r9
    1ebc:	af 92       	push	r10
    1ebe:	bf 92       	push	r11
    1ec0:	cf 92       	push	r12
    1ec2:	df 92       	push	r13
    1ec4:	ef 92       	push	r14
    1ec6:	ff 92       	push	r15
    1ec8:	0f 93       	push	r16
    1eca:	1f 93       	push	r17
    1ecc:	cf 93       	push	r28
    1ece:	df 93       	push	r29
    1ed0:	cd b7       	in	r28, 0x3d	; 61
    1ed2:	de b7       	in	r29, 0x3e	; 62
    1ed4:	ca 1b       	sub	r28, r26
    1ed6:	db 0b       	sbc	r29, r27
    1ed8:	0f b6       	in	r0, 0x3f	; 63
    1eda:	f8 94       	cli
    1edc:	de bf       	out	0x3e, r29	; 62
    1ede:	0f be       	out	0x3f, r0	; 63
    1ee0:	cd bf       	out	0x3d, r28	; 61
    1ee2:	09 94       	ijmp

00001ee4 <__epilogue_restores__>:
    1ee4:	2a 88       	ldd	r2, Y+18	; 0x12
    1ee6:	39 88       	ldd	r3, Y+17	; 0x11
    1ee8:	48 88       	ldd	r4, Y+16	; 0x10
    1eea:	5f 84       	ldd	r5, Y+15	; 0x0f
    1eec:	6e 84       	ldd	r6, Y+14	; 0x0e
    1eee:	7d 84       	ldd	r7, Y+13	; 0x0d
    1ef0:	8c 84       	ldd	r8, Y+12	; 0x0c
    1ef2:	9b 84       	ldd	r9, Y+11	; 0x0b
    1ef4:	aa 84       	ldd	r10, Y+10	; 0x0a
    1ef6:	b9 84       	ldd	r11, Y+9	; 0x09
    1ef8:	c8 84       	ldd	r12, Y+8	; 0x08
    1efa:	df 80       	ldd	r13, Y+7	; 0x07
    1efc:	ee 80       	ldd	r14, Y+6	; 0x06
    1efe:	fd 80       	ldd	r15, Y+5	; 0x05
    1f00:	0c 81       	ldd	r16, Y+4	; 0x04
    1f02:	1b 81       	ldd	r17, Y+3	; 0x03
    1f04:	aa 81       	ldd	r26, Y+2	; 0x02
    1f06:	b9 81       	ldd	r27, Y+1	; 0x01
    1f08:	ce 0f       	add	r28, r30
    1f0a:	d1 1d       	adc	r29, r1
    1f0c:	0f b6       	in	r0, 0x3f	; 63
    1f0e:	f8 94       	cli
    1f10:	de bf       	out	0x3e, r29	; 62
    1f12:	0f be       	out	0x3f, r0	; 63
    1f14:	cd bf       	out	0x3d, r28	; 61
    1f16:	ed 01       	movw	r28, r26
    1f18:	08 95       	ret

00001f1a <__ftoa_engine>:
    1f1a:	28 30       	cpi	r18, 0x08	; 8
    1f1c:	08 f0       	brcs	.+2      	; 0x1f20 <__ftoa_engine+0x6>
    1f1e:	27 e0       	ldi	r18, 0x07	; 7
    1f20:	33 27       	eor	r19, r19
    1f22:	da 01       	movw	r26, r20
    1f24:	99 0f       	add	r25, r25
    1f26:	31 1d       	adc	r19, r1
    1f28:	87 fd       	sbrc	r24, 7
    1f2a:	91 60       	ori	r25, 0x01	; 1
    1f2c:	00 96       	adiw	r24, 0x00	; 0
    1f2e:	61 05       	cpc	r22, r1
    1f30:	71 05       	cpc	r23, r1
    1f32:	39 f4       	brne	.+14     	; 0x1f42 <__ftoa_engine+0x28>
    1f34:	32 60       	ori	r19, 0x02	; 2
    1f36:	2e 5f       	subi	r18, 0xFE	; 254
    1f38:	3d 93       	st	X+, r19
    1f3a:	30 e3       	ldi	r19, 0x30	; 48
    1f3c:	2a 95       	dec	r18
    1f3e:	e1 f7       	brne	.-8      	; 0x1f38 <__ftoa_engine+0x1e>
    1f40:	08 95       	ret
    1f42:	9f 3f       	cpi	r25, 0xFF	; 255
    1f44:	30 f0       	brcs	.+12     	; 0x1f52 <__ftoa_engine+0x38>
    1f46:	80 38       	cpi	r24, 0x80	; 128
    1f48:	71 05       	cpc	r23, r1
    1f4a:	61 05       	cpc	r22, r1
    1f4c:	09 f0       	breq	.+2      	; 0x1f50 <__ftoa_engine+0x36>
    1f4e:	3c 5f       	subi	r19, 0xFC	; 252
    1f50:	3c 5f       	subi	r19, 0xFC	; 252
    1f52:	3d 93       	st	X+, r19
    1f54:	91 30       	cpi	r25, 0x01	; 1
    1f56:	08 f0       	brcs	.+2      	; 0x1f5a <__ftoa_engine+0x40>
    1f58:	80 68       	ori	r24, 0x80	; 128
    1f5a:	91 1d       	adc	r25, r1
    1f5c:	df 93       	push	r29
    1f5e:	cf 93       	push	r28
    1f60:	1f 93       	push	r17
    1f62:	0f 93       	push	r16
    1f64:	ff 92       	push	r15
    1f66:	ef 92       	push	r14
    1f68:	19 2f       	mov	r17, r25
    1f6a:	98 7f       	andi	r25, 0xF8	; 248
    1f6c:	96 95       	lsr	r25
    1f6e:	e9 2f       	mov	r30, r25
    1f70:	96 95       	lsr	r25
    1f72:	96 95       	lsr	r25
    1f74:	e9 0f       	add	r30, r25
    1f76:	ff 27       	eor	r31, r31
    1f78:	e2 53       	subi	r30, 0x32	; 50
    1f7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f7c:	99 27       	eor	r25, r25
    1f7e:	33 27       	eor	r19, r19
    1f80:	ee 24       	eor	r14, r14
    1f82:	ff 24       	eor	r15, r15
    1f84:	a7 01       	movw	r20, r14
    1f86:	e7 01       	movw	r28, r14
    1f88:	05 90       	lpm	r0, Z+
    1f8a:	08 94       	sec
    1f8c:	07 94       	ror	r0
    1f8e:	28 f4       	brcc	.+10     	; 0x1f9a <__ftoa_engine+0x80>
    1f90:	36 0f       	add	r19, r22
    1f92:	e7 1e       	adc	r14, r23
    1f94:	f8 1e       	adc	r15, r24
    1f96:	49 1f       	adc	r20, r25
    1f98:	51 1d       	adc	r21, r1
    1f9a:	66 0f       	add	r22, r22
    1f9c:	77 1f       	adc	r23, r23
    1f9e:	88 1f       	adc	r24, r24
    1fa0:	99 1f       	adc	r25, r25
    1fa2:	06 94       	lsr	r0
    1fa4:	a1 f7       	brne	.-24     	; 0x1f8e <__ftoa_engine+0x74>
    1fa6:	05 90       	lpm	r0, Z+
    1fa8:	07 94       	ror	r0
    1faa:	28 f4       	brcc	.+10     	; 0x1fb6 <__ftoa_engine+0x9c>
    1fac:	e7 0e       	add	r14, r23
    1fae:	f8 1e       	adc	r15, r24
    1fb0:	49 1f       	adc	r20, r25
    1fb2:	56 1f       	adc	r21, r22
    1fb4:	c1 1d       	adc	r28, r1
    1fb6:	77 0f       	add	r23, r23
    1fb8:	88 1f       	adc	r24, r24
    1fba:	99 1f       	adc	r25, r25
    1fbc:	66 1f       	adc	r22, r22
    1fbe:	06 94       	lsr	r0
    1fc0:	a1 f7       	brne	.-24     	; 0x1faa <__ftoa_engine+0x90>
    1fc2:	05 90       	lpm	r0, Z+
    1fc4:	07 94       	ror	r0
    1fc6:	28 f4       	brcc	.+10     	; 0x1fd2 <__ftoa_engine+0xb8>
    1fc8:	f8 0e       	add	r15, r24
    1fca:	49 1f       	adc	r20, r25
    1fcc:	56 1f       	adc	r21, r22
    1fce:	c7 1f       	adc	r28, r23
    1fd0:	d1 1d       	adc	r29, r1
    1fd2:	88 0f       	add	r24, r24
    1fd4:	99 1f       	adc	r25, r25
    1fd6:	66 1f       	adc	r22, r22
    1fd8:	77 1f       	adc	r23, r23
    1fda:	06 94       	lsr	r0
    1fdc:	a1 f7       	brne	.-24     	; 0x1fc6 <__ftoa_engine+0xac>
    1fde:	05 90       	lpm	r0, Z+
    1fe0:	07 94       	ror	r0
    1fe2:	20 f4       	brcc	.+8      	; 0x1fec <__ftoa_engine+0xd2>
    1fe4:	49 0f       	add	r20, r25
    1fe6:	56 1f       	adc	r21, r22
    1fe8:	c7 1f       	adc	r28, r23
    1fea:	d8 1f       	adc	r29, r24
    1fec:	99 0f       	add	r25, r25
    1fee:	66 1f       	adc	r22, r22
    1ff0:	77 1f       	adc	r23, r23
    1ff2:	88 1f       	adc	r24, r24
    1ff4:	06 94       	lsr	r0
    1ff6:	a9 f7       	brne	.-22     	; 0x1fe2 <__ftoa_engine+0xc8>
    1ff8:	84 91       	lpm	r24, Z
    1ffa:	10 95       	com	r17
    1ffc:	17 70       	andi	r17, 0x07	; 7
    1ffe:	41 f0       	breq	.+16     	; 0x2010 <__ftoa_engine+0xf6>
    2000:	d6 95       	lsr	r29
    2002:	c7 95       	ror	r28
    2004:	57 95       	ror	r21
    2006:	47 95       	ror	r20
    2008:	f7 94       	ror	r15
    200a:	e7 94       	ror	r14
    200c:	1a 95       	dec	r17
    200e:	c1 f7       	brne	.-16     	; 0x2000 <__ftoa_engine+0xe6>
    2010:	e4 e7       	ldi	r30, 0x74	; 116
    2012:	f0 e0       	ldi	r31, 0x00	; 0
    2014:	68 94       	set
    2016:	15 90       	lpm	r1, Z+
    2018:	15 91       	lpm	r17, Z+
    201a:	35 91       	lpm	r19, Z+
    201c:	65 91       	lpm	r22, Z+
    201e:	95 91       	lpm	r25, Z+
    2020:	05 90       	lpm	r0, Z+
    2022:	7f e2       	ldi	r23, 0x2F	; 47
    2024:	73 95       	inc	r23
    2026:	e1 18       	sub	r14, r1
    2028:	f1 0a       	sbc	r15, r17
    202a:	43 0b       	sbc	r20, r19
    202c:	56 0b       	sbc	r21, r22
    202e:	c9 0b       	sbc	r28, r25
    2030:	d0 09       	sbc	r29, r0
    2032:	c0 f7       	brcc	.-16     	; 0x2024 <__ftoa_engine+0x10a>
    2034:	e1 0c       	add	r14, r1
    2036:	f1 1e       	adc	r15, r17
    2038:	43 1f       	adc	r20, r19
    203a:	56 1f       	adc	r21, r22
    203c:	c9 1f       	adc	r28, r25
    203e:	d0 1d       	adc	r29, r0
    2040:	7e f4       	brtc	.+30     	; 0x2060 <__ftoa_engine+0x146>
    2042:	70 33       	cpi	r23, 0x30	; 48
    2044:	11 f4       	brne	.+4      	; 0x204a <__ftoa_engine+0x130>
    2046:	8a 95       	dec	r24
    2048:	e6 cf       	rjmp	.-52     	; 0x2016 <__ftoa_engine+0xfc>
    204a:	e8 94       	clt
    204c:	01 50       	subi	r16, 0x01	; 1
    204e:	30 f0       	brcs	.+12     	; 0x205c <__ftoa_engine+0x142>
    2050:	08 0f       	add	r16, r24
    2052:	0a f4       	brpl	.+2      	; 0x2056 <__ftoa_engine+0x13c>
    2054:	00 27       	eor	r16, r16
    2056:	02 17       	cp	r16, r18
    2058:	08 f4       	brcc	.+2      	; 0x205c <__ftoa_engine+0x142>
    205a:	20 2f       	mov	r18, r16
    205c:	23 95       	inc	r18
    205e:	02 2f       	mov	r16, r18
    2060:	7a 33       	cpi	r23, 0x3A	; 58
    2062:	28 f0       	brcs	.+10     	; 0x206e <__ftoa_engine+0x154>
    2064:	79 e3       	ldi	r23, 0x39	; 57
    2066:	7d 93       	st	X+, r23
    2068:	2a 95       	dec	r18
    206a:	e9 f7       	brne	.-6      	; 0x2066 <__ftoa_engine+0x14c>
    206c:	10 c0       	rjmp	.+32     	; 0x208e <__ftoa_engine+0x174>
    206e:	7d 93       	st	X+, r23
    2070:	2a 95       	dec	r18
    2072:	89 f6       	brne	.-94     	; 0x2016 <__ftoa_engine+0xfc>
    2074:	06 94       	lsr	r0
    2076:	97 95       	ror	r25
    2078:	67 95       	ror	r22
    207a:	37 95       	ror	r19
    207c:	17 95       	ror	r17
    207e:	17 94       	ror	r1
    2080:	e1 18       	sub	r14, r1
    2082:	f1 0a       	sbc	r15, r17
    2084:	43 0b       	sbc	r20, r19
    2086:	56 0b       	sbc	r21, r22
    2088:	c9 0b       	sbc	r28, r25
    208a:	d0 09       	sbc	r29, r0
    208c:	98 f0       	brcs	.+38     	; 0x20b4 <__ftoa_engine+0x19a>
    208e:	23 95       	inc	r18
    2090:	7e 91       	ld	r23, -X
    2092:	73 95       	inc	r23
    2094:	7a 33       	cpi	r23, 0x3A	; 58
    2096:	08 f0       	brcs	.+2      	; 0x209a <__ftoa_engine+0x180>
    2098:	70 e3       	ldi	r23, 0x30	; 48
    209a:	7c 93       	st	X, r23
    209c:	20 13       	cpse	r18, r16
    209e:	b8 f7       	brcc	.-18     	; 0x208e <__ftoa_engine+0x174>
    20a0:	7e 91       	ld	r23, -X
    20a2:	70 61       	ori	r23, 0x10	; 16
    20a4:	7d 93       	st	X+, r23
    20a6:	30 f0       	brcs	.+12     	; 0x20b4 <__ftoa_engine+0x19a>
    20a8:	83 95       	inc	r24
    20aa:	71 e3       	ldi	r23, 0x31	; 49
    20ac:	7d 93       	st	X+, r23
    20ae:	70 e3       	ldi	r23, 0x30	; 48
    20b0:	2a 95       	dec	r18
    20b2:	e1 f7       	brne	.-8      	; 0x20ac <__ftoa_engine+0x192>
    20b4:	11 24       	eor	r1, r1
    20b6:	ef 90       	pop	r14
    20b8:	ff 90       	pop	r15
    20ba:	0f 91       	pop	r16
    20bc:	1f 91       	pop	r17
    20be:	cf 91       	pop	r28
    20c0:	df 91       	pop	r29
    20c2:	99 27       	eor	r25, r25
    20c4:	87 fd       	sbrc	r24, 7
    20c6:	90 95       	com	r25
    20c8:	08 95       	ret

000020ca <strnlen_P>:
    20ca:	fc 01       	movw	r30, r24
    20cc:	05 90       	lpm	r0, Z+
    20ce:	61 50       	subi	r22, 0x01	; 1
    20d0:	70 40       	sbci	r23, 0x00	; 0
    20d2:	01 10       	cpse	r0, r1
    20d4:	d8 f7       	brcc	.-10     	; 0x20cc <strnlen_P+0x2>
    20d6:	80 95       	com	r24
    20d8:	90 95       	com	r25
    20da:	8e 0f       	add	r24, r30
    20dc:	9f 1f       	adc	r25, r31
    20de:	08 95       	ret

000020e0 <strnlen>:
    20e0:	fc 01       	movw	r30, r24
    20e2:	61 50       	subi	r22, 0x01	; 1
    20e4:	70 40       	sbci	r23, 0x00	; 0
    20e6:	01 90       	ld	r0, Z+
    20e8:	01 10       	cpse	r0, r1
    20ea:	d8 f7       	brcc	.-10     	; 0x20e2 <strnlen+0x2>
    20ec:	80 95       	com	r24
    20ee:	90 95       	com	r25
    20f0:	8e 0f       	add	r24, r30
    20f2:	9f 1f       	adc	r25, r31
    20f4:	08 95       	ret

000020f6 <fputc>:
    20f6:	0f 93       	push	r16
    20f8:	1f 93       	push	r17
    20fa:	cf 93       	push	r28
    20fc:	df 93       	push	r29
    20fe:	fb 01       	movw	r30, r22
    2100:	23 81       	ldd	r18, Z+3	; 0x03
    2102:	21 fd       	sbrc	r18, 1
    2104:	03 c0       	rjmp	.+6      	; 0x210c <fputc+0x16>
    2106:	8f ef       	ldi	r24, 0xFF	; 255
    2108:	9f ef       	ldi	r25, 0xFF	; 255
    210a:	2c c0       	rjmp	.+88     	; 0x2164 <fputc+0x6e>
    210c:	22 ff       	sbrs	r18, 2
    210e:	16 c0       	rjmp	.+44     	; 0x213c <fputc+0x46>
    2110:	46 81       	ldd	r20, Z+6	; 0x06
    2112:	57 81       	ldd	r21, Z+7	; 0x07
    2114:	24 81       	ldd	r18, Z+4	; 0x04
    2116:	35 81       	ldd	r19, Z+5	; 0x05
    2118:	42 17       	cp	r20, r18
    211a:	53 07       	cpc	r21, r19
    211c:	44 f4       	brge	.+16     	; 0x212e <fputc+0x38>
    211e:	a0 81       	ld	r26, Z
    2120:	b1 81       	ldd	r27, Z+1	; 0x01
    2122:	9d 01       	movw	r18, r26
    2124:	2f 5f       	subi	r18, 0xFF	; 255
    2126:	3f 4f       	sbci	r19, 0xFF	; 255
    2128:	31 83       	std	Z+1, r19	; 0x01
    212a:	20 83       	st	Z, r18
    212c:	8c 93       	st	X, r24
    212e:	26 81       	ldd	r18, Z+6	; 0x06
    2130:	37 81       	ldd	r19, Z+7	; 0x07
    2132:	2f 5f       	subi	r18, 0xFF	; 255
    2134:	3f 4f       	sbci	r19, 0xFF	; 255
    2136:	37 83       	std	Z+7, r19	; 0x07
    2138:	26 83       	std	Z+6, r18	; 0x06
    213a:	14 c0       	rjmp	.+40     	; 0x2164 <fputc+0x6e>
    213c:	8b 01       	movw	r16, r22
    213e:	ec 01       	movw	r28, r24
    2140:	fb 01       	movw	r30, r22
    2142:	00 84       	ldd	r0, Z+8	; 0x08
    2144:	f1 85       	ldd	r31, Z+9	; 0x09
    2146:	e0 2d       	mov	r30, r0
    2148:	09 95       	icall
    214a:	89 2b       	or	r24, r25
    214c:	e1 f6       	brne	.-72     	; 0x2106 <fputc+0x10>
    214e:	d8 01       	movw	r26, r16
    2150:	16 96       	adiw	r26, 0x06	; 6
    2152:	8d 91       	ld	r24, X+
    2154:	9c 91       	ld	r25, X
    2156:	17 97       	sbiw	r26, 0x07	; 7
    2158:	01 96       	adiw	r24, 0x01	; 1
    215a:	17 96       	adiw	r26, 0x07	; 7
    215c:	9c 93       	st	X, r25
    215e:	8e 93       	st	-X, r24
    2160:	16 97       	sbiw	r26, 0x06	; 6
    2162:	ce 01       	movw	r24, r28
    2164:	df 91       	pop	r29
    2166:	cf 91       	pop	r28
    2168:	1f 91       	pop	r17
    216a:	0f 91       	pop	r16
    216c:	08 95       	ret

0000216e <snprintf>:
    216e:	ae e0       	ldi	r26, 0x0E	; 14
    2170:	b0 e0       	ldi	r27, 0x00	; 0
    2172:	ed eb       	ldi	r30, 0xBD	; 189
    2174:	f0 e1       	ldi	r31, 0x10	; 16
    2176:	0c 94 64 0f 	jmp	0x1ec8	; 0x1ec8 <__prologue_saves__+0x1c>
    217a:	0d 89       	ldd	r16, Y+21	; 0x15
    217c:	1e 89       	ldd	r17, Y+22	; 0x16
    217e:	8f 89       	ldd	r24, Y+23	; 0x17
    2180:	98 8d       	ldd	r25, Y+24	; 0x18
    2182:	26 e0       	ldi	r18, 0x06	; 6
    2184:	2c 83       	std	Y+4, r18	; 0x04
    2186:	1a 83       	std	Y+2, r17	; 0x02
    2188:	09 83       	std	Y+1, r16	; 0x01
    218a:	97 ff       	sbrs	r25, 7
    218c:	02 c0       	rjmp	.+4      	; 0x2192 <snprintf+0x24>
    218e:	80 e0       	ldi	r24, 0x00	; 0
    2190:	90 e8       	ldi	r25, 0x80	; 128
    2192:	01 97       	sbiw	r24, 0x01	; 1
    2194:	9e 83       	std	Y+6, r25	; 0x06
    2196:	8d 83       	std	Y+5, r24	; 0x05
    2198:	ae 01       	movw	r20, r28
    219a:	45 5e       	subi	r20, 0xE5	; 229
    219c:	5f 4f       	sbci	r21, 0xFF	; 255
    219e:	69 8d       	ldd	r22, Y+25	; 0x19
    21a0:	7a 8d       	ldd	r23, Y+26	; 0x1a
    21a2:	ce 01       	movw	r24, r28
    21a4:	01 96       	adiw	r24, 0x01	; 1
    21a6:	0e 94 d9 0b 	call	0x17b2	; 0x17b2 <vfprintf>
    21aa:	4d 81       	ldd	r20, Y+5	; 0x05
    21ac:	5e 81       	ldd	r21, Y+6	; 0x06
    21ae:	57 fd       	sbrc	r21, 7
    21b0:	0a c0       	rjmp	.+20     	; 0x21c6 <snprintf+0x58>
    21b2:	2f 81       	ldd	r18, Y+7	; 0x07
    21b4:	38 85       	ldd	r19, Y+8	; 0x08
    21b6:	42 17       	cp	r20, r18
    21b8:	53 07       	cpc	r21, r19
    21ba:	0c f4       	brge	.+2      	; 0x21be <snprintf+0x50>
    21bc:	9a 01       	movw	r18, r20
    21be:	f8 01       	movw	r30, r16
    21c0:	e2 0f       	add	r30, r18
    21c2:	f3 1f       	adc	r31, r19
    21c4:	10 82       	st	Z, r1
    21c6:	2e 96       	adiw	r28, 0x0e	; 14
    21c8:	e4 e0       	ldi	r30, 0x04	; 4
    21ca:	0c 94 80 0f 	jmp	0x1f00	; 0x1f00 <__epilogue_restores__+0x1c>

000021ce <__ultoa_invert>:
    21ce:	fa 01       	movw	r30, r20
    21d0:	aa 27       	eor	r26, r26
    21d2:	28 30       	cpi	r18, 0x08	; 8
    21d4:	51 f1       	breq	.+84     	; 0x222a <__ultoa_invert+0x5c>
    21d6:	20 31       	cpi	r18, 0x10	; 16
    21d8:	81 f1       	breq	.+96     	; 0x223a <__ultoa_invert+0x6c>
    21da:	e8 94       	clt
    21dc:	6f 93       	push	r22
    21de:	6e 7f       	andi	r22, 0xFE	; 254
    21e0:	6e 5f       	subi	r22, 0xFE	; 254
    21e2:	7f 4f       	sbci	r23, 0xFF	; 255
    21e4:	8f 4f       	sbci	r24, 0xFF	; 255
    21e6:	9f 4f       	sbci	r25, 0xFF	; 255
    21e8:	af 4f       	sbci	r26, 0xFF	; 255
    21ea:	b1 e0       	ldi	r27, 0x01	; 1
    21ec:	3e d0       	rcall	.+124    	; 0x226a <__ultoa_invert+0x9c>
    21ee:	b4 e0       	ldi	r27, 0x04	; 4
    21f0:	3c d0       	rcall	.+120    	; 0x226a <__ultoa_invert+0x9c>
    21f2:	67 0f       	add	r22, r23
    21f4:	78 1f       	adc	r23, r24
    21f6:	89 1f       	adc	r24, r25
    21f8:	9a 1f       	adc	r25, r26
    21fa:	a1 1d       	adc	r26, r1
    21fc:	68 0f       	add	r22, r24
    21fe:	79 1f       	adc	r23, r25
    2200:	8a 1f       	adc	r24, r26
    2202:	91 1d       	adc	r25, r1
    2204:	a1 1d       	adc	r26, r1
    2206:	6a 0f       	add	r22, r26
    2208:	71 1d       	adc	r23, r1
    220a:	81 1d       	adc	r24, r1
    220c:	91 1d       	adc	r25, r1
    220e:	a1 1d       	adc	r26, r1
    2210:	20 d0       	rcall	.+64     	; 0x2252 <__ultoa_invert+0x84>
    2212:	09 f4       	brne	.+2      	; 0x2216 <__ultoa_invert+0x48>
    2214:	68 94       	set
    2216:	3f 91       	pop	r19
    2218:	2a e0       	ldi	r18, 0x0A	; 10
    221a:	26 9f       	mul	r18, r22
    221c:	11 24       	eor	r1, r1
    221e:	30 19       	sub	r19, r0
    2220:	30 5d       	subi	r19, 0xD0	; 208
    2222:	31 93       	st	Z+, r19
    2224:	de f6       	brtc	.-74     	; 0x21dc <__ultoa_invert+0xe>
    2226:	cf 01       	movw	r24, r30
    2228:	08 95       	ret
    222a:	46 2f       	mov	r20, r22
    222c:	47 70       	andi	r20, 0x07	; 7
    222e:	40 5d       	subi	r20, 0xD0	; 208
    2230:	41 93       	st	Z+, r20
    2232:	b3 e0       	ldi	r27, 0x03	; 3
    2234:	0f d0       	rcall	.+30     	; 0x2254 <__ultoa_invert+0x86>
    2236:	c9 f7       	brne	.-14     	; 0x222a <__ultoa_invert+0x5c>
    2238:	f6 cf       	rjmp	.-20     	; 0x2226 <__ultoa_invert+0x58>
    223a:	46 2f       	mov	r20, r22
    223c:	4f 70       	andi	r20, 0x0F	; 15
    223e:	40 5d       	subi	r20, 0xD0	; 208
    2240:	4a 33       	cpi	r20, 0x3A	; 58
    2242:	18 f0       	brcs	.+6      	; 0x224a <__ultoa_invert+0x7c>
    2244:	49 5d       	subi	r20, 0xD9	; 217
    2246:	31 fd       	sbrc	r19, 1
    2248:	40 52       	subi	r20, 0x20	; 32
    224a:	41 93       	st	Z+, r20
    224c:	02 d0       	rcall	.+4      	; 0x2252 <__ultoa_invert+0x84>
    224e:	a9 f7       	brne	.-22     	; 0x223a <__ultoa_invert+0x6c>
    2250:	ea cf       	rjmp	.-44     	; 0x2226 <__ultoa_invert+0x58>
    2252:	b4 e0       	ldi	r27, 0x04	; 4
    2254:	a6 95       	lsr	r26
    2256:	97 95       	ror	r25
    2258:	87 95       	ror	r24
    225a:	77 95       	ror	r23
    225c:	67 95       	ror	r22
    225e:	ba 95       	dec	r27
    2260:	c9 f7       	brne	.-14     	; 0x2254 <__ultoa_invert+0x86>
    2262:	00 97       	sbiw	r24, 0x00	; 0
    2264:	61 05       	cpc	r22, r1
    2266:	71 05       	cpc	r23, r1
    2268:	08 95       	ret
    226a:	9b 01       	movw	r18, r22
    226c:	ac 01       	movw	r20, r24
    226e:	0a 2e       	mov	r0, r26
    2270:	06 94       	lsr	r0
    2272:	57 95       	ror	r21
    2274:	47 95       	ror	r20
    2276:	37 95       	ror	r19
    2278:	27 95       	ror	r18
    227a:	ba 95       	dec	r27
    227c:	c9 f7       	brne	.-14     	; 0x2270 <__ultoa_invert+0xa2>
    227e:	62 0f       	add	r22, r18
    2280:	73 1f       	adc	r23, r19
    2282:	84 1f       	adc	r24, r20
    2284:	95 1f       	adc	r25, r21
    2286:	a0 1d       	adc	r26, r0
    2288:	08 95       	ret

0000228a <_exit>:
    228a:	f8 94       	cli

0000228c <__stop_program>:
    228c:	ff cf       	rjmp	.-2      	; 0x228c <__stop_program>
